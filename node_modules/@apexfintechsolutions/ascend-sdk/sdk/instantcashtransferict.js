"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstantCashTransferICT = void 0;
const instantCashTransferICTCancelICTDeposit_js_1 = require("../funcs/instantCashTransferICTCancelICTDeposit.js");
const instantCashTransferICTCancelICTWithdrawal_js_1 = require("../funcs/instantCashTransferICTCancelICTWithdrawal.js");
const instantCashTransferICTCreateICTDeposit_js_1 = require("../funcs/instantCashTransferICTCreateICTDeposit.js");
const instantCashTransferICTCreateICTWithdrawal_js_1 = require("../funcs/instantCashTransferICTCreateICTWithdrawal.js");
const instantCashTransferICTGetICTDeposit_js_1 = require("../funcs/instantCashTransferICTGetICTDeposit.js");
const instantCashTransferICTGetICTWithdrawal_js_1 = require("../funcs/instantCashTransferICTGetICTWithdrawal.js");
const instantCashTransferICTLocateICTReport_js_1 = require("../funcs/instantCashTransferICTLocateICTReport.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class InstantCashTransferICT extends sdks_js_1.ClientSDK {
    /**
     * Create ICT Deposit
     *
     * @remarks
     * Creates an ICT deposit
     */
    async createIctDeposit(ictDepositCreate, accountId, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTCreateICTDeposit_js_1.instantCashTransferICTCreateICTDeposit)(this, ictDepositCreate, accountId, options));
    }
    /**
     * Get ICT Deposit
     *
     * @remarks
     * Gets an existing ICT deposit
     */
    async getIctDeposit(accountId, ictDepositId, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTGetICTDeposit_js_1.instantCashTransferICTGetICTDeposit)(this, accountId, ictDepositId, options));
    }
    /**
     * Cancel ICT Deposit
     *
     * @remarks
     * Cancels an existing ICT deposit
     */
    async cancelIctDeposit(cancelIctDepositRequestCreate, accountId, ictDepositId, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTCancelICTDeposit_js_1.instantCashTransferICTCancelICTDeposit)(this, cancelIctDepositRequestCreate, accountId, ictDepositId, options));
    }
    /**
     * Create ICT Withdrawal
     *
     * @remarks
     * Creates an ICT withdrawal
     */
    async createIctWithdrawal(ictWithdrawalCreate, accountId, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTCreateICTWithdrawal_js_1.instantCashTransferICTCreateICTWithdrawal)(this, ictWithdrawalCreate, accountId, options));
    }
    /**
     * Get ICT Withdrawal
     *
     * @remarks
     * Gets an existing ICT withdrawal
     */
    async getIctWithdrawal(accountId, ictWithdrawalId, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTGetICTWithdrawal_js_1.instantCashTransferICTGetICTWithdrawal)(this, accountId, ictWithdrawalId, options));
    }
    /**
     * Cancel ICT Withdrawal
     *
     * @remarks
     * Cancels an existing ICT withdrawal
     */
    async cancelIctWithdrawal(cancelIctWithdrawalRequestCreate, accountId, ictWithdrawalId, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTCancelICTWithdrawal_js_1.instantCashTransferICTCancelICTWithdrawal)(this, cancelIctWithdrawalRequestCreate, accountId, ictWithdrawalId, options));
    }
    /**
     * Locate ICT Report
     *
     * @remarks
     * Returns a signed link pointing to a recon report file for a specific ICT batch.
     */
    async locateIctReport(correspondentId, batchId, programDateFilterProgram, programDateFilterProcessDate, options) {
        return (0, fp_js_1.unwrapAsync)((0, instantCashTransferICTLocateICTReport_js_1.instantCashTransferICTLocateICTReport)(this, correspondentId, batchId, programDateFilterProgram, programDateFilterProcessDate, options));
    }
}
exports.InstantCashTransferICT = InstantCashTransferICT;
//# sourceMappingURL=instantcashtransferict.js.map