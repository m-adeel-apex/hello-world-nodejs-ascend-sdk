"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Journals = void 0;
const journalsCancelCashJournal_js_1 = require("../funcs/journalsCancelCashJournal.js");
const journalsCheckPartyType_js_1 = require("../funcs/journalsCheckPartyType.js");
const journalsCreateCashJournal_js_1 = require("../funcs/journalsCreateCashJournal.js");
const journalsGetCashJournal_js_1 = require("../funcs/journalsGetCashJournal.js");
const journalsRetrieveCashJournalConstraints_js_1 = require("../funcs/journalsRetrieveCashJournalConstraints.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Journals extends sdks_js_1.ClientSDK {
    /**
     * Retrieve Cash Journal Constraints
     *
     * @remarks
     * Retrieves retirement contribution and distribution constraints for a cash journal transfer
     */
    async retrieveCashJournalConstraints(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, journalsRetrieveCashJournalConstraints_js_1.journalsRetrieveCashJournalConstraints)(this, request, options));
    }
    /**
     * Create Cash Journal
     *
     * @remarks
     * Creates a cash journal
     */
    async createCashJournal(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, journalsCreateCashJournal_js_1.journalsCreateCashJournal)(this, request, options));
    }
    /**
     * Get Cash Journal
     *
     * @remarks
     * Gets an existing cash journal
     */
    async getCashJournal(cashJournalId, options) {
        return (0, fp_js_1.unwrapAsync)((0, journalsGetCashJournal_js_1.journalsGetCashJournal)(this, cashJournalId, options));
    }
    /**
     * Cancel Cash Journal
     *
     * @remarks
     * Cancels an existing cash journal
     */
    async cancelCashJournal(cancelCashJournalRequestCreate, cashJournalId, options) {
        return (0, fp_js_1.unwrapAsync)((0, journalsCancelCashJournal_js_1.journalsCancelCashJournal)(this, cancelCashJournalRequestCreate, cashJournalId, options));
    }
    /**
     * Retrieve Cash Journal Party
     *
     * @remarks
     * Determines whether a potential cash journal will be considered first party or third party given a source and destination account
     */
    async checkPartyType(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, journalsCheckPartyType_js_1.journalsCheckPartyType)(this, request, options));
    }
}
exports.Journals = Journals;
//# sourceMappingURL=journals.js.map