"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnrollmentsAndAgreements = void 0;
const enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup_js_1 = require("../funcs/enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup.js");
const enrollmentsAndAgreementsAffirmAgreements_js_1 = require("../funcs/enrollmentsAndAgreementsAffirmAgreements.js");
const enrollmentsAndAgreementsDeactivateEnrollment_js_1 = require("../funcs/enrollmentsAndAgreementsDeactivateEnrollment.js");
const enrollmentsAndAgreementsEnrollAccount_js_1 = require("../funcs/enrollmentsAndAgreementsEnrollAccount.js");
const enrollmentsAndAgreementsListAgreements_js_1 = require("../funcs/enrollmentsAndAgreementsListAgreements.js");
const enrollmentsAndAgreementsListAvailableEnrollments_js_1 = require("../funcs/enrollmentsAndAgreementsListAvailableEnrollments.js");
const enrollmentsAndAgreementsListEnrollments_js_1 = require("../funcs/enrollmentsAndAgreementsListEnrollments.js");
const enrollmentsAndAgreementsListEntitlements_js_1 = require("../funcs/enrollmentsAndAgreementsListEntitlements.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class EnrollmentsAndAgreements extends sdks_js_1.ClientSDK {
    /**
     * Enroll Account
     *
     * @remarks
     * Adds an Enrollment to an Account.
     */
    async enrollAccount(enrollAccountRequestCreate, accountId, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsEnrollAccount_js_1.enrollmentsAndAgreementsEnrollAccount)(this, enrollAccountRequestCreate, accountId, options));
    }
    /**
     * List Available Enrollments
     *
     * @remarks
     * Get a list of Enrollments available for an Account.
     */
    async listAvailableEnrollments(accountId, pageSize, pageToken, filter, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsListAvailableEnrollments_js_1.enrollmentsAndAgreementsListAvailableEnrollments)(this, accountId, pageSize, pageToken, filter, options));
    }
    /**
     * List Available Enrollments (by Account Group)
     *
     * @remarks
     * Get a list of Enrollments available for an Account.
     */
    async accountsListAvailableEnrollmentsByAccountGroup(accountGroupId, pageSize, pageToken, filter, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup_js_1.enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup)(this, accountGroupId, pageSize, pageToken, filter, options));
    }
    /**
     * Deactivate Enrollment
     *
     * @remarks
     * Deactivates an Account Enrollment.
     */
    async deactivateEnrollment(deactivateEnrollmentRequestCreate, accountId, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsDeactivateEnrollment_js_1.enrollmentsAndAgreementsDeactivateEnrollment)(this, deactivateEnrollmentRequestCreate, accountId, options));
    }
    /**
     * List Account Enrollments
     *
     * @remarks
     * Gets a list of Enrollments for an Account.
     */
    async listEnrollments(accountId, pageSize, pageToken, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsListEnrollments_js_1.enrollmentsAndAgreementsListEnrollments)(this, accountId, pageSize, pageToken, options));
    }
    /**
     * Affirm Agreements
     *
     * @remarks
     * Affirm Agreements for an Account.
     */
    async affirmAgreements(affirmAgreementsRequestCreate, accountId, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsAffirmAgreements_js_1.enrollmentsAndAgreementsAffirmAgreements)(this, affirmAgreementsRequestCreate, accountId, options));
    }
    /**
     * List Account Agreements
     *
     * @remarks
     * Gets a list of Agreements on an Account.
     */
    async listAgreements(accountId, pageSize, pageToken, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsListAgreements_js_1.enrollmentsAndAgreementsListAgreements)(this, accountId, pageSize, pageToken, options));
    }
    /**
     * List Account Entitlements
     *
     * @remarks
     * Gets a list of Entitlements for an Account.
     */
    async listEntitlements(accountId, pageSize, pageToken, options) {
        return (0, fp_js_1.unwrapAsync)((0, enrollmentsAndAgreementsListEntitlements_js_1.enrollmentsAndAgreementsListEntitlements)(this, accountId, pageSize, pageToken, options));
    }
}
exports.EnrollmentsAndAgreements = EnrollmentsAndAgreements;
//# sourceMappingURL=enrollmentsandagreements.js.map