/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { investorDocsBatchCreateUploadLinks } from "../funcs/investorDocsBatchCreateUploadLinks.js";
import { investorDocsListDocuments } from "../funcs/investorDocsListDocuments.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class InvestorDocs extends ClientSDK {
  /**
   * Batch Create Upload Links
   *
   * @remarks
   * Create a batch of signed links that can be used to upload files.
   */
  async batchCreateUploadLinks(
    request: components.BatchCreateUploadLinksRequestCreate,
    options?: RequestOptions,
  ): Promise<
    operations.InvestorCommunicationServiceBatchCreateUploadLinksResponse
  > {
    return unwrapAsync(investorDocsBatchCreateUploadLinks(
      this,
      request,
      options,
    ));
  }

  /**
   * List Documents
   *
   * @remarks
   * List documents that match search parameters.
   */
  async listDocuments(
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    filter?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.InvestorCommunicationServiceListDocumentsResponse> {
    return unwrapAsync(investorDocsListDocuments(
      this,
      pageSize,
      pageToken,
      filter,
      options,
    ));
  }
}
