/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountTransfersCreateTransfer } from "../funcs/accountTransfersCreateTransfer.js";
import { accountTransfersGetTransfer } from "../funcs/accountTransfersGetTransfer.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AccountTransfers extends ClientSDK {
  /**
   * Create Transfer
   *
   * @remarks
   * Creates a transfer
   */
  async createTransfer(
    transferCreate: components.TransferCreate,
    correspondentId: string,
    accountId: string,
    requestId?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountTransfersCreateTransferResponse> {
    return unwrapAsync(accountTransfersCreateTransfer(
      this,
      transferCreate,
      correspondentId,
      accountId,
      requestId,
      options,
    ));
  }

  /**
   * Get Transfer
   *
   * @remarks
   * Gets an existing transfer
   */
  async getTransfer(
    correspondentId: string,
    accountId: string,
    transferId: string,
    options?: RequestOptions,
  ): Promise<operations.AccountTransfersGetTransferResponse> {
    return unwrapAsync(accountTransfersGetTransfer(
      this,
      correspondentId,
      accountId,
      transferId,
      options,
    ));
  }
}
