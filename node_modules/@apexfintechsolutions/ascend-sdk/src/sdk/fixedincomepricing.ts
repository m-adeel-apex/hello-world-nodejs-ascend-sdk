/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { fixedIncomePricingPreviewOrderCost } from "../funcs/fixedIncomePricingPreviewOrderCost.js";
import { fixedIncomePricingRetrieveFixedIncomeMarks } from "../funcs/fixedIncomePricingRetrieveFixedIncomeMarks.js";
import { fixedIncomePricingRetrieveQuote } from "../funcs/fixedIncomePricingRetrieveQuote.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class FixedIncomePricing extends ClientSDK {
  /**
   * Preview Order Cost
   *
   * @remarks
   * Returns a calculation estimating the costs involved in ordering a given quantity of a Fixed Income asset at a specified limit price.
   */
  async previewOrderCost(
    orderCostPreviewRequestCreate: components.OrderCostPreviewRequestCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.OrderPriceServicePreviewOrderCostResponse> {
    return unwrapAsync(fixedIncomePricingPreviewOrderCost(
      this,
      orderCostPreviewRequestCreate,
      accountId,
      options,
    ));
  }

  /**
   * Retrieve Quote
   *
   * @remarks
   * Returns quote information containing the best bid/ask for the given Fixed Income asset.
   */
  async retrieveQuote(
    retrieveQuoteRequestCreate: components.RetrieveQuoteRequestCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.OrderPriceServiceRetrieveQuoteResponse> {
    return unwrapAsync(fixedIncomePricingRetrieveQuote(
      this,
      retrieveQuoteRequestCreate,
      accountId,
      options,
    ));
  }

  /**
   * Retrieve Fixed Income Marks
   *
   * @remarks
   * Returns marks for a specified set of Fixed Income assets (up to 100 per request)
   */
  async retrieveFixedIncomeMarks(
    retrieveFixedIncomeMarksRequestCreate:
      components.RetrieveFixedIncomeMarksRequestCreate,
    correspondentId: string,
    options?: RequestOptions,
  ): Promise<operations.OrderPriceServiceRetrieveFixedIncomeMarksResponse> {
    return unwrapAsync(fixedIncomePricingRetrieveFixedIncomeMarks(
      this,
      retrieveFixedIncomeMarksRequestCreate,
      correspondentId,
      options,
    ));
  }
}
