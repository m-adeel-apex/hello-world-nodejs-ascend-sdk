/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { scheduleTransfersCancelAchDepositSchedule } from "../funcs/scheduleTransfersCancelAchDepositSchedule.js";
import { scheduleTransfersCancelAchWithdrawalSchedule } from "../funcs/scheduleTransfersCancelAchWithdrawalSchedule.js";
import { scheduleTransfersCancelWireWithdrawalSchedule } from "../funcs/scheduleTransfersCancelWireWithdrawalSchedule.js";
import { scheduleTransfersCreateAchDepositSchedule } from "../funcs/scheduleTransfersCreateAchDepositSchedule.js";
import { scheduleTransfersCreateAchWithdrawalSchedule } from "../funcs/scheduleTransfersCreateAchWithdrawalSchedule.js";
import { scheduleTransfersCreateWireWithdrawalSchedule } from "../funcs/scheduleTransfersCreateWireWithdrawalSchedule.js";
import { scheduleTransfersGetAchDepositSchedule } from "../funcs/scheduleTransfersGetAchDepositSchedule.js";
import { scheduleTransfersGetAchWithdrawalSchedule } from "../funcs/scheduleTransfersGetAchWithdrawalSchedule.js";
import { scheduleTransfersGetWireWithdrawalSchedule } from "../funcs/scheduleTransfersGetWireWithdrawalSchedule.js";
import { scheduleTransfersListAchDepositSchedules } from "../funcs/scheduleTransfersListAchDepositSchedules.js";
import { scheduleTransfersListAchWithdrawalSchedules } from "../funcs/scheduleTransfersListAchWithdrawalSchedules.js";
import { scheduleTransfersListScheduleSummaries } from "../funcs/scheduleTransfersListScheduleSummaries.js";
import { scheduleTransfersListWireWithdrawalSchedules } from "../funcs/scheduleTransfersListWireWithdrawalSchedules.js";
import { scheduleTransfersUpdateAchDepositSchedule } from "../funcs/scheduleTransfersUpdateAchDepositSchedule.js";
import { scheduleTransfersUpdateAchWithdrawalSchedule } from "../funcs/scheduleTransfersUpdateAchWithdrawalSchedule.js";
import { scheduleTransfersUpdateWireWithdrawalSchedule } from "../funcs/scheduleTransfersUpdateWireWithdrawalSchedule.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class ScheduleTransfers extends ClientSDK {
  /**
   * List Schedule Summaries
   *
   * @remarks
   * Lists transfer schedule summaries that match the filter in the request
   */
  async listScheduleSummaries(
    filter?: string | undefined,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.TransferScheduleSummariesListScheduleSummariesResponse
  > {
    return unwrapAsync(scheduleTransfersListScheduleSummaries(
      this,
      filter,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * Create ACH Deposit Schedule
   *
   * @remarks
   * Creates an ACH deposit transfer schedule
   */
  async createAchDepositSchedule(
    achDepositScheduleCreate: components.AchDepositScheduleCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.AchDepositSchedulesCreateAchDepositScheduleResponse> {
    return unwrapAsync(scheduleTransfersCreateAchDepositSchedule(
      this,
      achDepositScheduleCreate,
      accountId,
      options,
    ));
  }

  /**
   * List ACH Deposit Schedules
   *
   * @remarks
   * Return a list of ACH deposit schedules for the specified account and filter params
   */
  async listAchDepositSchedules(
    accountId: string,
    filter?: string | undefined,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AchDepositSchedulesListAchDepositSchedulesResponse> {
    return unwrapAsync(scheduleTransfersListAchDepositSchedules(
      this,
      accountId,
      filter,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * Get ACH Deposit Schedule
   *
   * @remarks
   * Gets an ACH deposit transfer schedule
   */
  async getAchDepositSchedule(
    accountId: string,
    achDepositScheduleId: string,
    options?: RequestOptions,
  ): Promise<operations.AchDepositSchedulesGetAchDepositScheduleResponse> {
    return unwrapAsync(scheduleTransfersGetAchDepositSchedule(
      this,
      accountId,
      achDepositScheduleId,
      options,
    ));
  }

  /**
   * Update ACH Deposit Schedules
   *
   * @remarks
   * Updates the amount of an ACH deposit transfer schedule
   */
  async updateAchDepositSchedule(
    achDepositScheduleUpdate: components.AchDepositScheduleUpdate,
    accountId: string,
    achDepositScheduleId: string,
    updateMask?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AchDepositSchedulesUpdateAchDepositScheduleResponse> {
    return unwrapAsync(scheduleTransfersUpdateAchDepositSchedule(
      this,
      achDepositScheduleUpdate,
      accountId,
      achDepositScheduleId,
      updateMask,
      options,
    ));
  }

  /**
   * Cancel ACH Deposit Schedule
   *
   * @remarks
   * Cancels an ACH deposit transfer schedule
   */
  async cancelAchDepositSchedule(
    cancelAchDepositScheduleRequestCreate:
      components.CancelAchDepositScheduleRequestCreate,
    accountId: string,
    achDepositScheduleId: string,
    options?: RequestOptions,
  ): Promise<operations.AchDepositSchedulesCancelAchDepositScheduleResponse> {
    return unwrapAsync(scheduleTransfersCancelAchDepositSchedule(
      this,
      cancelAchDepositScheduleRequestCreate,
      accountId,
      achDepositScheduleId,
      options,
    ));
  }

  /**
   * Create ACH Withdrawal Schedule
   *
   * @remarks
   * Creates an ACH withdrawal transfer schedule
   */
  async createAchWithdrawalSchedule(
    achWithdrawalScheduleCreate: components.AchWithdrawalScheduleCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<
    operations.AchWithdrawalSchedulesCreateAchWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersCreateAchWithdrawalSchedule(
      this,
      achWithdrawalScheduleCreate,
      accountId,
      options,
    ));
  }

  /**
   * List ACH Withdrawal Schedules
   *
   * @remarks
   * Return a list of ACH withdrawal schedules for the specified account and filter params
   */
  async listAchWithdrawalSchedules(
    accountId: string,
    filter?: string | undefined,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.AchWithdrawalSchedulesListAchWithdrawalSchedulesResponse
  > {
    return unwrapAsync(scheduleTransfersListAchWithdrawalSchedules(
      this,
      accountId,
      filter,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * Get ACH Withdrawal Schedule
   *
   * @remarks
   * Gets an ACH withdrawal transfer schedule
   */
  async getAchWithdrawalSchedule(
    accountId: string,
    achWithdrawalScheduleId: string,
    options?: RequestOptions,
  ): Promise<
    operations.AchWithdrawalSchedulesGetAchWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersGetAchWithdrawalSchedule(
      this,
      accountId,
      achWithdrawalScheduleId,
      options,
    ));
  }

  /**
   * Update ACH Withdrawal Schedule
   *
   * @remarks
   * Updates the amount of an ACH withdrawal transfer schedule
   */
  async updateAchWithdrawalSchedule(
    achWithdrawalScheduleUpdate: components.AchWithdrawalScheduleUpdate,
    accountId: string,
    achWithdrawalScheduleId: string,
    updateMask?: string | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.AchWithdrawalSchedulesUpdateAchWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersUpdateAchWithdrawalSchedule(
      this,
      achWithdrawalScheduleUpdate,
      accountId,
      achWithdrawalScheduleId,
      updateMask,
      options,
    ));
  }

  /**
   * Cancel ACH Withdrawal Schedule
   *
   * @remarks
   * Cancels an ACH withdrawal transfer schedule
   */
  async cancelAchWithdrawalSchedule(
    cancelAchWithdrawalScheduleRequestCreate:
      components.CancelAchWithdrawalScheduleRequestCreate,
    accountId: string,
    achWithdrawalScheduleId: string,
    options?: RequestOptions,
  ): Promise<
    operations.AchWithdrawalSchedulesCancelAchWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersCancelAchWithdrawalSchedule(
      this,
      cancelAchWithdrawalScheduleRequestCreate,
      accountId,
      achWithdrawalScheduleId,
      options,
    ));
  }

  /**
   * Create Wire Withdrawal Schedule
   *
   * @remarks
   * Creates a Wire withdrawal transfer schedule
   */
  async createWireWithdrawalSchedule(
    wireWithdrawalScheduleCreate: components.WireWithdrawalScheduleCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<
    operations.WireWithdrawalSchedulesCreateWireWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersCreateWireWithdrawalSchedule(
      this,
      wireWithdrawalScheduleCreate,
      accountId,
      options,
    ));
  }

  /**
   * List Wire Withdrawal Schedules
   *
   * @remarks
   * Return a list of Wire withdrawal schedules for the specified account and filter params
   */
  async listWireWithdrawalSchedules(
    accountId: string,
    filter?: string | undefined,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.WireWithdrawalSchedulesListWireWithdrawalSchedulesResponse
  > {
    return unwrapAsync(scheduleTransfersListWireWithdrawalSchedules(
      this,
      accountId,
      filter,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * Get Wire Withdrawal Schedule
   *
   * @remarks
   * Gets a Wire withdrawal transfer schedule
   */
  async getWireWithdrawalSchedule(
    accountId: string,
    wireWithdrawalScheduleId: string,
    options?: RequestOptions,
  ): Promise<
    operations.WireWithdrawalSchedulesGetWireWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersGetWireWithdrawalSchedule(
      this,
      accountId,
      wireWithdrawalScheduleId,
      options,
    ));
  }

  /**
   * Update Wire Withdrawal Schedule
   *
   * @remarks
   * Updates the amount of a Wire withdrawal transfer schedule
   */
  async updateWireWithdrawalSchedule(
    wireWithdrawalScheduleUpdate: components.WireWithdrawalScheduleUpdate,
    accountId: string,
    wireWithdrawalScheduleId: string,
    updateMask?: string | undefined,
    options?: RequestOptions,
  ): Promise<
    operations.WireWithdrawalSchedulesUpdateWireWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersUpdateWireWithdrawalSchedule(
      this,
      wireWithdrawalScheduleUpdate,
      accountId,
      wireWithdrawalScheduleId,
      updateMask,
      options,
    ));
  }

  /**
   * Cancel Wire Withdrawal Schedule
   *
   * @remarks
   * Cancels a Wire withdrawal transfer schedule
   */
  async cancelWireWithdrawalSchedule(
    cancelWireWithdrawalScheduleRequestCreate:
      components.CancelWireWithdrawalScheduleRequestCreate,
    accountId: string,
    wireWithdrawalScheduleId: string,
    options?: RequestOptions,
  ): Promise<
    operations.WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse
  > {
    return unwrapAsync(scheduleTransfersCancelWireWithdrawalSchedule(
      this,
      cancelWireWithdrawalScheduleRequestCreate,
      accountId,
      wireWithdrawalScheduleId,
      options,
    ));
  }
}
