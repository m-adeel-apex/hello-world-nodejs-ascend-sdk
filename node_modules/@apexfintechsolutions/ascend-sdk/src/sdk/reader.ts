/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { readerGetEventMessage } from "../funcs/readerGetEventMessage.js";
import { readerListEventMessages } from "../funcs/readerListEventMessages.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Reader extends ClientSDK {
  /**
   * List Event Messages
   *
   * @remarks
   * Gets a list of events.
   */
  async listEventMessages(
    filter?: string | undefined,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.ReaderListEventMessagesResponse> {
    return unwrapAsync(readerListEventMessages(
      this,
      filter,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * Get Event Message
   *
   * @remarks
   * Gets the details of a specific event.
   */
  async getEventMessage(
    messageId: string,
    options?: RequestOptions,
  ): Promise<operations.ReaderGetEventMessageResponse> {
    return unwrapAsync(readerGetEventMessage(
      this,
      messageId,
      options,
    ));
  }
}
