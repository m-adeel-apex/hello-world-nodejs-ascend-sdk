/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountCreationCreateAccount } from "../funcs/accountCreationCreateAccount.js";
import { accountCreationGetAccount } from "../funcs/accountCreationGetAccount.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AccountCreation extends ClientSDK {
  /**
   * Create Account
   *
   * @remarks
   * CREATE Creates an account.
   */
  async createAccount(
    request: components.AccountRequestCreate,
    options?: RequestOptions,
  ): Promise<operations.AccountsCreateAccountResponse> {
    return unwrapAsync(accountCreationCreateAccount(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Account
   *
   * @remarks
   * READ Get Account
   */
  async getAccount(
    accountId: string,
    view?: operations.QueryParamView | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountsGetAccountResponse> {
    return unwrapAsync(accountCreationGetAccount(
      this,
      accountId,
      view,
      options,
    ));
  }
}
