/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { wiresCancelWireWithdrawal } from "../funcs/wiresCancelWireWithdrawal.js";
import { wiresCreateWireWithdrawal } from "../funcs/wiresCreateWireWithdrawal.js";
import { wiresGetWireDeposit } from "../funcs/wiresGetWireDeposit.js";
import { wiresGetWireWithdrawal } from "../funcs/wiresGetWireWithdrawal.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Wires extends ClientSDK {
  /**
   * Get Wire Deposit
   *
   * @remarks
   * Gets an existing wire deposit
   */
  async getWireDeposit(
    accountId: string,
    wireDepositId: string,
    options?: RequestOptions,
  ): Promise<operations.WireDepositsGetWireDepositResponse> {
    return unwrapAsync(wiresGetWireDeposit(
      this,
      accountId,
      wireDepositId,
      options,
    ));
  }

  /**
   * Create Wire Withdrawal
   *
   * @remarks
   * Creates a wire withdrawal
   */
  async createWireWithdrawal(
    wireWithdrawalCreate: components.WireWithdrawalCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.WireWithdrawalsCreateWireWithdrawalResponse> {
    return unwrapAsync(wiresCreateWireWithdrawal(
      this,
      wireWithdrawalCreate,
      accountId,
      options,
    ));
  }

  /**
   * Get Wire Withdrawal
   *
   * @remarks
   * Gets an existing wire withdrawal
   */
  async getWireWithdrawal(
    accountId: string,
    wireWithdrawalId: string,
    options?: RequestOptions,
  ): Promise<operations.WireWithdrawalsGetWireWithdrawalResponse> {
    return unwrapAsync(wiresGetWireWithdrawal(
      this,
      accountId,
      wireWithdrawalId,
      options,
    ));
  }

  /**
   * Cancel Wire Withdrawal
   *
   * @remarks
   * Cancels an existing wire withdrawal
   */
  async cancelWireWithdrawal(
    cancelWireWithdrawalRequestCreate:
      components.CancelWireWithdrawalRequestCreate,
    accountId: string,
    wireWithdrawalId: string,
    options?: RequestOptions,
  ): Promise<operations.WireWithdrawalsCancelWireWithdrawalResponse> {
    return unwrapAsync(wiresCancelWireWithdrawal(
      this,
      cancelWireWithdrawalRequestCreate,
      accountId,
      wireWithdrawalId,
      options,
    ));
  }
}
