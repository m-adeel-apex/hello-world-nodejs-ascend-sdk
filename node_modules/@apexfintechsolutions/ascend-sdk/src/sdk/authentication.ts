/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { authenticationGenerateServiceAccountToken } from "../funcs/authenticationGenerateServiceAccountToken.js";
import { authenticationListSigningKeys } from "../funcs/authenticationListSigningKeys.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Authentication extends ClientSDK {
  /**
   * Generate Service Account Token
   *
   * @remarks
   * Creates an access token for a service account.
   */
  async generateServiceAccountToken(
    security: operations.AuthenticationGenerateServiceAccountTokenSecurity,
    request: components.GenerateServiceAccountTokenRequestCreate,
    options?: RequestOptions,
  ): Promise<operations.AuthenticationGenerateServiceAccountTokenResponse> {
    return unwrapAsync(authenticationGenerateServiceAccountToken(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * List Signing Keys
   *
   * @remarks
   * Gets the public signing keys used to verify JSON Web Tokens generated by this service.
   */
  async listSigningKeys(
    security: operations.AuthenticationListSigningKeysSecurity,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AuthenticationListSigningKeysResponse> {
    return unwrapAsync(authenticationListSigningKeys(
      this,
      security,
      pageSize,
      pageToken,
      options,
    ));
  }
}
