/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup } from "../funcs/enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup.js";
import { enrollmentsAndAgreementsAffirmAgreements } from "../funcs/enrollmentsAndAgreementsAffirmAgreements.js";
import { enrollmentsAndAgreementsDeactivateEnrollment } from "../funcs/enrollmentsAndAgreementsDeactivateEnrollment.js";
import { enrollmentsAndAgreementsEnrollAccount } from "../funcs/enrollmentsAndAgreementsEnrollAccount.js";
import { enrollmentsAndAgreementsListAgreements } from "../funcs/enrollmentsAndAgreementsListAgreements.js";
import { enrollmentsAndAgreementsListAvailableEnrollments } from "../funcs/enrollmentsAndAgreementsListAvailableEnrollments.js";
import { enrollmentsAndAgreementsListEnrollments } from "../funcs/enrollmentsAndAgreementsListEnrollments.js";
import { enrollmentsAndAgreementsListEntitlements } from "../funcs/enrollmentsAndAgreementsListEntitlements.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class EnrollmentsAndAgreements extends ClientSDK {
  /**
   * Enroll Account
   *
   * @remarks
   * Adds an Enrollment to an Account.
   */
  async enrollAccount(
    enrollAccountRequestCreate: components.EnrollAccountRequestCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.AccountsEnrollAccountResponse> {
    return unwrapAsync(enrollmentsAndAgreementsEnrollAccount(
      this,
      enrollAccountRequestCreate,
      accountId,
      options,
    ));
  }

  /**
   * List Available Enrollments
   *
   * @remarks
   * Get a list of Enrollments available for an Account.
   */
  async listAvailableEnrollments(
    accountId: string,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    filter?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountsListAvailableEnrollmentsResponse> {
    return unwrapAsync(enrollmentsAndAgreementsListAvailableEnrollments(
      this,
      accountId,
      pageSize,
      pageToken,
      filter,
      options,
    ));
  }

  /**
   * List Available Enrollments (by Account Group)
   *
   * @remarks
   * Get a list of Enrollments available for an Account.
   */
  async accountsListAvailableEnrollmentsByAccountGroup(
    accountGroupId: string,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    filter?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountsListAvailableEnrollments1Response> {
    return unwrapAsync(
      enrollmentsAndAgreementsAccountsListAvailableEnrollmentsByAccountGroup(
        this,
        accountGroupId,
        pageSize,
        pageToken,
        filter,
        options,
      ),
    );
  }

  /**
   * Deactivate Enrollment
   *
   * @remarks
   * Deactivates an Account Enrollment.
   */
  async deactivateEnrollment(
    deactivateEnrollmentRequestCreate:
      components.DeactivateEnrollmentRequestCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.AccountsDeactivateEnrollmentResponse> {
    return unwrapAsync(enrollmentsAndAgreementsDeactivateEnrollment(
      this,
      deactivateEnrollmentRequestCreate,
      accountId,
      options,
    ));
  }

  /**
   * List Account Enrollments
   *
   * @remarks
   * Gets a list of Enrollments for an Account.
   */
  async listEnrollments(
    accountId: string,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountsListEnrollmentsResponse> {
    return unwrapAsync(enrollmentsAndAgreementsListEnrollments(
      this,
      accountId,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * Affirm Agreements
   *
   * @remarks
   * Affirm Agreements for an Account.
   */
  async affirmAgreements(
    affirmAgreementsRequestCreate: components.AffirmAgreementsRequestCreate,
    accountId: string,
    options?: RequestOptions,
  ): Promise<operations.AccountsAffirmAgreementsResponse> {
    return unwrapAsync(enrollmentsAndAgreementsAffirmAgreements(
      this,
      affirmAgreementsRequestCreate,
      accountId,
      options,
    ));
  }

  /**
   * List Account Agreements
   *
   * @remarks
   * Gets a list of Agreements on an Account.
   */
  async listAgreements(
    accountId: string,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountsListAgreementsResponse> {
    return unwrapAsync(enrollmentsAndAgreementsListAgreements(
      this,
      accountId,
      pageSize,
      pageToken,
      options,
    ));
  }

  /**
   * List Account Entitlements
   *
   * @remarks
   * Gets a list of Entitlements for an Account.
   */
  async listEntitlements(
    accountId: string,
    pageSize?: number | undefined,
    pageToken?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.AccountsListEntitlementsResponse> {
    return unwrapAsync(enrollmentsAndAgreementsListEntitlements(
      this,
      accountId,
      pageSize,
      pageToken,
      options,
    ));
  }
}
