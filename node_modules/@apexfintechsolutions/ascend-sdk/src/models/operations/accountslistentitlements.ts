/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountsListEntitlementsRequest = {
  /**
   * The account id.
   */
  accountId: string;
  /**
   * The maximum number of entitlements to return.
   */
  pageSize?: number | undefined;
  /**
   * A page token, received from a previous `ListEntitlements` call. Provide this to retrieve the subsequent page.
   *
   * @remarks
   *
   *  When paginating, all other parameters provided to `ListEntitlements` must match the call that provided the page token.
   */
  pageToken?: string | undefined;
};

export type AccountsListEntitlementsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  listEntitlementsResponse?: components.ListEntitlementsResponse | undefined;
  /**
   * INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const AccountsListEntitlementsRequest$inboundSchema: z.ZodType<
  AccountsListEntitlementsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_id: z.string(),
  page_size: z.number().int().optional(),
  page_token: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
    "page_size": "pageSize",
    "page_token": "pageToken",
  });
});

/** @internal */
export type AccountsListEntitlementsRequest$Outbound = {
  account_id: string;
  page_size?: number | undefined;
  page_token?: string | undefined;
};

/** @internal */
export const AccountsListEntitlementsRequest$outboundSchema: z.ZodType<
  AccountsListEntitlementsRequest$Outbound,
  z.ZodTypeDef,
  AccountsListEntitlementsRequest
> = z.object({
  accountId: z.string(),
  pageSize: z.number().int().optional(),
  pageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
    pageSize: "page_size",
    pageToken: "page_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsListEntitlementsRequest$ {
  /** @deprecated use `AccountsListEntitlementsRequest$inboundSchema` instead. */
  export const inboundSchema = AccountsListEntitlementsRequest$inboundSchema;
  /** @deprecated use `AccountsListEntitlementsRequest$outboundSchema` instead. */
  export const outboundSchema = AccountsListEntitlementsRequest$outboundSchema;
  /** @deprecated use `AccountsListEntitlementsRequest$Outbound` instead. */
  export type Outbound = AccountsListEntitlementsRequest$Outbound;
}

/** @internal */
export const AccountsListEntitlementsResponse$inboundSchema: z.ZodType<
  AccountsListEntitlementsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  ListEntitlementsResponse: components.ListEntitlementsResponse$inboundSchema
    .optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "ListEntitlementsResponse": "listEntitlementsResponse",
    "Status": "status",
  });
});

/** @internal */
export type AccountsListEntitlementsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  ListEntitlementsResponse?:
    | components.ListEntitlementsResponse$Outbound
    | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const AccountsListEntitlementsResponse$outboundSchema: z.ZodType<
  AccountsListEntitlementsResponse$Outbound,
  z.ZodTypeDef,
  AccountsListEntitlementsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  listEntitlementsResponse: components.ListEntitlementsResponse$outboundSchema
    .optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    listEntitlementsResponse: "ListEntitlementsResponse",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsListEntitlementsResponse$ {
  /** @deprecated use `AccountsListEntitlementsResponse$inboundSchema` instead. */
  export const inboundSchema = AccountsListEntitlementsResponse$inboundSchema;
  /** @deprecated use `AccountsListEntitlementsResponse$outboundSchema` instead. */
  export const outboundSchema = AccountsListEntitlementsResponse$outboundSchema;
  /** @deprecated use `AccountsListEntitlementsResponse$Outbound` instead. */
  export type Outbound = AccountsListEntitlementsResponse$Outbound;
}
