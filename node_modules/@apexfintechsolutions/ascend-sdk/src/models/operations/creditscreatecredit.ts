/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CreditsCreateCreditRequest = {
  /**
   * The account id.
   */
  accountId: string;
  transfersCreditCreate: components.TransfersCreditCreate;
};

export type CreditsCreateCreditResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  transfersCredit?: components.TransfersCredit | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const CreditsCreateCreditRequest$inboundSchema: z.ZodType<
  CreditsCreateCreditRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_id: z.string(),
  TransfersCreditCreate: components.TransfersCreditCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
    "TransfersCreditCreate": "transfersCreditCreate",
  });
});

/** @internal */
export type CreditsCreateCreditRequest$Outbound = {
  account_id: string;
  TransfersCreditCreate: components.TransfersCreditCreate$Outbound;
};

/** @internal */
export const CreditsCreateCreditRequest$outboundSchema: z.ZodType<
  CreditsCreateCreditRequest$Outbound,
  z.ZodTypeDef,
  CreditsCreateCreditRequest
> = z.object({
  accountId: z.string(),
  transfersCreditCreate: components.TransfersCreditCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
    transfersCreditCreate: "TransfersCreditCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreditsCreateCreditRequest$ {
  /** @deprecated use `CreditsCreateCreditRequest$inboundSchema` instead. */
  export const inboundSchema = CreditsCreateCreditRequest$inboundSchema;
  /** @deprecated use `CreditsCreateCreditRequest$outboundSchema` instead. */
  export const outboundSchema = CreditsCreateCreditRequest$outboundSchema;
  /** @deprecated use `CreditsCreateCreditRequest$Outbound` instead. */
  export type Outbound = CreditsCreateCreditRequest$Outbound;
}

/** @internal */
export const CreditsCreateCreditResponse$inboundSchema: z.ZodType<
  CreditsCreateCreditResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  TransfersCredit: components.TransfersCredit$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "TransfersCredit": "transfersCredit",
    "Status": "status",
  });
});

/** @internal */
export type CreditsCreateCreditResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  TransfersCredit?: components.TransfersCredit$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const CreditsCreateCreditResponse$outboundSchema: z.ZodType<
  CreditsCreateCreditResponse$Outbound,
  z.ZodTypeDef,
  CreditsCreateCreditResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  transfersCredit: components.TransfersCredit$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    transfersCredit: "TransfersCredit",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreditsCreateCreditResponse$ {
  /** @deprecated use `CreditsCreateCreditResponse$inboundSchema` instead. */
  export const inboundSchema = CreditsCreateCreditResponse$inboundSchema;
  /** @deprecated use `CreditsCreateCreditResponse$outboundSchema` instead. */
  export const outboundSchema = CreditsCreateCreditResponse$outboundSchema;
  /** @deprecated use `CreditsCreateCreditResponse$Outbound` instead. */
  export type Outbound = CreditsCreateCreditResponse$Outbound;
}
