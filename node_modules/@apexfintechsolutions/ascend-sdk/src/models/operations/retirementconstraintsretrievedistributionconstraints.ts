/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type RetirementConstraintsRetrieveDistributionConstraintsRequest = {
  /**
   * The account id.
   */
  accountId: string;
  retrieveDistributionConstraintsRequestCreate:
    components.RetrieveDistributionConstraintsRequestCreate;
};

export type RetirementConstraintsRetrieveDistributionConstraintsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  distributionConstraints?: components.DistributionConstraints | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const RetirementConstraintsRetrieveDistributionConstraintsRequest$inboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveDistributionConstraintsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account_id: z.string(),
    RetrieveDistributionConstraintsRequestCreate:
      components.RetrieveDistributionConstraintsRequestCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
      "RetrieveDistributionConstraintsRequestCreate":
        "retrieveDistributionConstraintsRequestCreate",
    });
  });

/** @internal */
export type RetirementConstraintsRetrieveDistributionConstraintsRequest$Outbound =
  {
    account_id: string;
    RetrieveDistributionConstraintsRequestCreate:
      components.RetrieveDistributionConstraintsRequestCreate$Outbound;
  };

/** @internal */
export const RetirementConstraintsRetrieveDistributionConstraintsRequest$outboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveDistributionConstraintsRequest$Outbound,
    z.ZodTypeDef,
    RetirementConstraintsRetrieveDistributionConstraintsRequest
  > = z.object({
    accountId: z.string(),
    retrieveDistributionConstraintsRequestCreate:
      components.RetrieveDistributionConstraintsRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
      retrieveDistributionConstraintsRequestCreate:
        "RetrieveDistributionConstraintsRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetirementConstraintsRetrieveDistributionConstraintsRequest$ {
  /** @deprecated use `RetirementConstraintsRetrieveDistributionConstraintsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RetirementConstraintsRetrieveDistributionConstraintsRequest$inboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveDistributionConstraintsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RetirementConstraintsRetrieveDistributionConstraintsRequest$outboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveDistributionConstraintsRequest$Outbound` instead. */
  export type Outbound =
    RetirementConstraintsRetrieveDistributionConstraintsRequest$Outbound;
}

/** @internal */
export const RetirementConstraintsRetrieveDistributionConstraintsResponse$inboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveDistributionConstraintsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    DistributionConstraints: components.DistributionConstraints$inboundSchema
      .optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "DistributionConstraints": "distributionConstraints",
      "Status": "status",
    });
  });

/** @internal */
export type RetirementConstraintsRetrieveDistributionConstraintsResponse$Outbound =
  {
    HttpMeta: components.HTTPMetadata$Outbound;
    DistributionConstraints?:
      | components.DistributionConstraints$Outbound
      | undefined;
    Status?: components.Status$Outbound | undefined;
  };

/** @internal */
export const RetirementConstraintsRetrieveDistributionConstraintsResponse$outboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveDistributionConstraintsResponse$Outbound,
    z.ZodTypeDef,
    RetirementConstraintsRetrieveDistributionConstraintsResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    distributionConstraints: components.DistributionConstraints$outboundSchema
      .optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      distributionConstraints: "DistributionConstraints",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetirementConstraintsRetrieveDistributionConstraintsResponse$ {
  /** @deprecated use `RetirementConstraintsRetrieveDistributionConstraintsResponse$inboundSchema` instead. */
  export const inboundSchema =
    RetirementConstraintsRetrieveDistributionConstraintsResponse$inboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveDistributionConstraintsResponse$outboundSchema` instead. */
  export const outboundSchema =
    RetirementConstraintsRetrieveDistributionConstraintsResponse$outboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveDistributionConstraintsResponse$Outbound` instead. */
  export type Outbound =
    RetirementConstraintsRetrieveDistributionConstraintsResponse$Outbound;
}
