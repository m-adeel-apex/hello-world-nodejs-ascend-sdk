/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CashJournalsGetCashJournalRequest = {
  /**
   * The cashJournal id.
   */
  cashJournalId: string;
};

export type CashJournalsGetCashJournalResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  cashJournal?: components.CashJournal | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const CashJournalsGetCashJournalRequest$inboundSchema: z.ZodType<
  CashJournalsGetCashJournalRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  cashJournal_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "cashJournal_id": "cashJournalId",
  });
});

/** @internal */
export type CashJournalsGetCashJournalRequest$Outbound = {
  cashJournal_id: string;
};

/** @internal */
export const CashJournalsGetCashJournalRequest$outboundSchema: z.ZodType<
  CashJournalsGetCashJournalRequest$Outbound,
  z.ZodTypeDef,
  CashJournalsGetCashJournalRequest
> = z.object({
  cashJournalId: z.string(),
}).transform((v) => {
  return remap$(v, {
    cashJournalId: "cashJournal_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CashJournalsGetCashJournalRequest$ {
  /** @deprecated use `CashJournalsGetCashJournalRequest$inboundSchema` instead. */
  export const inboundSchema = CashJournalsGetCashJournalRequest$inboundSchema;
  /** @deprecated use `CashJournalsGetCashJournalRequest$outboundSchema` instead. */
  export const outboundSchema =
    CashJournalsGetCashJournalRequest$outboundSchema;
  /** @deprecated use `CashJournalsGetCashJournalRequest$Outbound` instead. */
  export type Outbound = CashJournalsGetCashJournalRequest$Outbound;
}

/** @internal */
export const CashJournalsGetCashJournalResponse$inboundSchema: z.ZodType<
  CashJournalsGetCashJournalResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CashJournal: components.CashJournal$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CashJournal": "cashJournal",
    "Status": "status",
  });
});

/** @internal */
export type CashJournalsGetCashJournalResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CashJournal?: components.CashJournal$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const CashJournalsGetCashJournalResponse$outboundSchema: z.ZodType<
  CashJournalsGetCashJournalResponse$Outbound,
  z.ZodTypeDef,
  CashJournalsGetCashJournalResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  cashJournal: components.CashJournal$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    cashJournal: "CashJournal",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CashJournalsGetCashJournalResponse$ {
  /** @deprecated use `CashJournalsGetCashJournalResponse$inboundSchema` instead. */
  export const inboundSchema = CashJournalsGetCashJournalResponse$inboundSchema;
  /** @deprecated use `CashJournalsGetCashJournalResponse$outboundSchema` instead. */
  export const outboundSchema =
    CashJournalsGetCashJournalResponse$outboundSchema;
  /** @deprecated use `CashJournalsGetCashJournalResponse$Outbound` instead. */
  export type Outbound = CashJournalsGetCashJournalResponse$Outbound;
}
