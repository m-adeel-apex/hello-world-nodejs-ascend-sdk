/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type CashJournalsCheckPartyTypeResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  checkPartyTypeResponse?: components.CheckPartyTypeResponse | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const CashJournalsCheckPartyTypeResponse$inboundSchema: z.ZodType<
  CashJournalsCheckPartyTypeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CheckPartyTypeResponse: components.CheckPartyTypeResponse$inboundSchema
    .optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CheckPartyTypeResponse": "checkPartyTypeResponse",
    "Status": "status",
  });
});

/** @internal */
export type CashJournalsCheckPartyTypeResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CheckPartyTypeResponse?:
    | components.CheckPartyTypeResponse$Outbound
    | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const CashJournalsCheckPartyTypeResponse$outboundSchema: z.ZodType<
  CashJournalsCheckPartyTypeResponse$Outbound,
  z.ZodTypeDef,
  CashJournalsCheckPartyTypeResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  checkPartyTypeResponse: components.CheckPartyTypeResponse$outboundSchema
    .optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    checkPartyTypeResponse: "CheckPartyTypeResponse",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CashJournalsCheckPartyTypeResponse$ {
  /** @deprecated use `CashJournalsCheckPartyTypeResponse$inboundSchema` instead. */
  export const inboundSchema = CashJournalsCheckPartyTypeResponse$inboundSchema;
  /** @deprecated use `CashJournalsCheckPartyTypeResponse$outboundSchema` instead. */
  export const outboundSchema =
    CashJournalsCheckPartyTypeResponse$outboundSchema;
  /** @deprecated use `CashJournalsCheckPartyTypeResponse$Outbound` instead. */
  export type Outbound = CashJournalsCheckPartyTypeResponse$Outbound;
}
