/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type BasketOrdersServiceCreateBasketRequest = {
  /**
   * The correspondent id.
   */
  correspondentId: string;
  basketCreate: components.BasketCreate;
};

export type BasketOrdersServiceCreateBasketResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  basket?: components.Basket | undefined;
  /**
   * INVALID_ARGUMENT: There was an issue with one or more fields in the request.  The message field will contain details about which field failed validation and why.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const BasketOrdersServiceCreateBasketRequest$inboundSchema: z.ZodType<
  BasketOrdersServiceCreateBasketRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  correspondent_id: z.string(),
  BasketCreate: components.BasketCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "correspondent_id": "correspondentId",
    "BasketCreate": "basketCreate",
  });
});

/** @internal */
export type BasketOrdersServiceCreateBasketRequest$Outbound = {
  correspondent_id: string;
  BasketCreate: components.BasketCreate$Outbound;
};

/** @internal */
export const BasketOrdersServiceCreateBasketRequest$outboundSchema: z.ZodType<
  BasketOrdersServiceCreateBasketRequest$Outbound,
  z.ZodTypeDef,
  BasketOrdersServiceCreateBasketRequest
> = z.object({
  correspondentId: z.string(),
  basketCreate: components.BasketCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    correspondentId: "correspondent_id",
    basketCreate: "BasketCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasketOrdersServiceCreateBasketRequest$ {
  /** @deprecated use `BasketOrdersServiceCreateBasketRequest$inboundSchema` instead. */
  export const inboundSchema =
    BasketOrdersServiceCreateBasketRequest$inboundSchema;
  /** @deprecated use `BasketOrdersServiceCreateBasketRequest$outboundSchema` instead. */
  export const outboundSchema =
    BasketOrdersServiceCreateBasketRequest$outboundSchema;
  /** @deprecated use `BasketOrdersServiceCreateBasketRequest$Outbound` instead. */
  export type Outbound = BasketOrdersServiceCreateBasketRequest$Outbound;
}

/** @internal */
export const BasketOrdersServiceCreateBasketResponse$inboundSchema: z.ZodType<
  BasketOrdersServiceCreateBasketResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Basket: components.Basket$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Basket": "basket",
    "Status": "status",
  });
});

/** @internal */
export type BasketOrdersServiceCreateBasketResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Basket?: components.Basket$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const BasketOrdersServiceCreateBasketResponse$outboundSchema: z.ZodType<
  BasketOrdersServiceCreateBasketResponse$Outbound,
  z.ZodTypeDef,
  BasketOrdersServiceCreateBasketResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  basket: components.Basket$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    basket: "Basket",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasketOrdersServiceCreateBasketResponse$ {
  /** @deprecated use `BasketOrdersServiceCreateBasketResponse$inboundSchema` instead. */
  export const inboundSchema =
    BasketOrdersServiceCreateBasketResponse$inboundSchema;
  /** @deprecated use `BasketOrdersServiceCreateBasketResponse$outboundSchema` instead. */
  export const outboundSchema =
    BasketOrdersServiceCreateBasketResponse$outboundSchema;
  /** @deprecated use `BasketOrdersServiceCreateBasketResponse$Outbound` instead. */
  export type Outbound = BasketOrdersServiceCreateBasketResponse$Outbound;
}
