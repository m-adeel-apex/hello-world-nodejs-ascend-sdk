/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type BankRelationshipsReissueMicroDepositsRequest = {
  /**
   * The account id.
   */
  accountId: string;
  /**
   * The bankRelationship id.
   */
  bankRelationshipId: string;
  reissueMicroDepositsRequestCreate:
    components.ReissueMicroDepositsRequestCreate;
};

export type BankRelationshipsReissueMicroDepositsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  bankRelationship?: components.BankRelationship | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const BankRelationshipsReissueMicroDepositsRequest$inboundSchema:
  z.ZodType<
    BankRelationshipsReissueMicroDepositsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account_id: z.string(),
    bankRelationship_id: z.string(),
    ReissueMicroDepositsRequestCreate:
      components.ReissueMicroDepositsRequestCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
      "bankRelationship_id": "bankRelationshipId",
      "ReissueMicroDepositsRequestCreate": "reissueMicroDepositsRequestCreate",
    });
  });

/** @internal */
export type BankRelationshipsReissueMicroDepositsRequest$Outbound = {
  account_id: string;
  bankRelationship_id: string;
  ReissueMicroDepositsRequestCreate:
    components.ReissueMicroDepositsRequestCreate$Outbound;
};

/** @internal */
export const BankRelationshipsReissueMicroDepositsRequest$outboundSchema:
  z.ZodType<
    BankRelationshipsReissueMicroDepositsRequest$Outbound,
    z.ZodTypeDef,
    BankRelationshipsReissueMicroDepositsRequest
  > = z.object({
    accountId: z.string(),
    bankRelationshipId: z.string(),
    reissueMicroDepositsRequestCreate:
      components.ReissueMicroDepositsRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
      bankRelationshipId: "bankRelationship_id",
      reissueMicroDepositsRequestCreate: "ReissueMicroDepositsRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankRelationshipsReissueMicroDepositsRequest$ {
  /** @deprecated use `BankRelationshipsReissueMicroDepositsRequest$inboundSchema` instead. */
  export const inboundSchema =
    BankRelationshipsReissueMicroDepositsRequest$inboundSchema;
  /** @deprecated use `BankRelationshipsReissueMicroDepositsRequest$outboundSchema` instead. */
  export const outboundSchema =
    BankRelationshipsReissueMicroDepositsRequest$outboundSchema;
  /** @deprecated use `BankRelationshipsReissueMicroDepositsRequest$Outbound` instead. */
  export type Outbound = BankRelationshipsReissueMicroDepositsRequest$Outbound;
}

/** @internal */
export const BankRelationshipsReissueMicroDepositsResponse$inboundSchema:
  z.ZodType<
    BankRelationshipsReissueMicroDepositsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    BankRelationship: components.BankRelationship$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "BankRelationship": "bankRelationship",
      "Status": "status",
    });
  });

/** @internal */
export type BankRelationshipsReissueMicroDepositsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  BankRelationship?: components.BankRelationship$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const BankRelationshipsReissueMicroDepositsResponse$outboundSchema:
  z.ZodType<
    BankRelationshipsReissueMicroDepositsResponse$Outbound,
    z.ZodTypeDef,
    BankRelationshipsReissueMicroDepositsResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    bankRelationship: components.BankRelationship$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      bankRelationship: "BankRelationship",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankRelationshipsReissueMicroDepositsResponse$ {
  /** @deprecated use `BankRelationshipsReissueMicroDepositsResponse$inboundSchema` instead. */
  export const inboundSchema =
    BankRelationshipsReissueMicroDepositsResponse$inboundSchema;
  /** @deprecated use `BankRelationshipsReissueMicroDepositsResponse$outboundSchema` instead. */
  export const outboundSchema =
    BankRelationshipsReissueMicroDepositsResponse$outboundSchema;
  /** @deprecated use `BankRelationshipsReissueMicroDepositsResponse$Outbound` instead. */
  export type Outbound = BankRelationshipsReissueMicroDepositsResponse$Outbound;
}
