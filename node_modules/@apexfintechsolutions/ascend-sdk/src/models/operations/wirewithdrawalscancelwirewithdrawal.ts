/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type WireWithdrawalsCancelWireWithdrawalRequest = {
  /**
   * The account id.
   */
  accountId: string;
  /**
   * The wireWithdrawal id.
   */
  wireWithdrawalId: string;
  cancelWireWithdrawalRequestCreate:
    components.CancelWireWithdrawalRequestCreate;
};

export type WireWithdrawalsCancelWireWithdrawalResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  wireWithdrawal?: components.WireWithdrawal | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const WireWithdrawalsCancelWireWithdrawalRequest$inboundSchema:
  z.ZodType<WireWithdrawalsCancelWireWithdrawalRequest, z.ZodTypeDef, unknown> =
    z.object({
      account_id: z.string(),
      wireWithdrawal_id: z.string(),
      CancelWireWithdrawalRequestCreate:
        components.CancelWireWithdrawalRequestCreate$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "account_id": "accountId",
        "wireWithdrawal_id": "wireWithdrawalId",
        "CancelWireWithdrawalRequestCreate":
          "cancelWireWithdrawalRequestCreate",
      });
    });

/** @internal */
export type WireWithdrawalsCancelWireWithdrawalRequest$Outbound = {
  account_id: string;
  wireWithdrawal_id: string;
  CancelWireWithdrawalRequestCreate:
    components.CancelWireWithdrawalRequestCreate$Outbound;
};

/** @internal */
export const WireWithdrawalsCancelWireWithdrawalRequest$outboundSchema:
  z.ZodType<
    WireWithdrawalsCancelWireWithdrawalRequest$Outbound,
    z.ZodTypeDef,
    WireWithdrawalsCancelWireWithdrawalRequest
  > = z.object({
    accountId: z.string(),
    wireWithdrawalId: z.string(),
    cancelWireWithdrawalRequestCreate:
      components.CancelWireWithdrawalRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
      wireWithdrawalId: "wireWithdrawal_id",
      cancelWireWithdrawalRequestCreate: "CancelWireWithdrawalRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireWithdrawalsCancelWireWithdrawalRequest$ {
  /** @deprecated use `WireWithdrawalsCancelWireWithdrawalRequest$inboundSchema` instead. */
  export const inboundSchema =
    WireWithdrawalsCancelWireWithdrawalRequest$inboundSchema;
  /** @deprecated use `WireWithdrawalsCancelWireWithdrawalRequest$outboundSchema` instead. */
  export const outboundSchema =
    WireWithdrawalsCancelWireWithdrawalRequest$outboundSchema;
  /** @deprecated use `WireWithdrawalsCancelWireWithdrawalRequest$Outbound` instead. */
  export type Outbound = WireWithdrawalsCancelWireWithdrawalRequest$Outbound;
}

/** @internal */
export const WireWithdrawalsCancelWireWithdrawalResponse$inboundSchema:
  z.ZodType<
    WireWithdrawalsCancelWireWithdrawalResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    WireWithdrawal: components.WireWithdrawal$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "WireWithdrawal": "wireWithdrawal",
      "Status": "status",
    });
  });

/** @internal */
export type WireWithdrawalsCancelWireWithdrawalResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  WireWithdrawal?: components.WireWithdrawal$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const WireWithdrawalsCancelWireWithdrawalResponse$outboundSchema:
  z.ZodType<
    WireWithdrawalsCancelWireWithdrawalResponse$Outbound,
    z.ZodTypeDef,
    WireWithdrawalsCancelWireWithdrawalResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    wireWithdrawal: components.WireWithdrawal$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      wireWithdrawal: "WireWithdrawal",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireWithdrawalsCancelWireWithdrawalResponse$ {
  /** @deprecated use `WireWithdrawalsCancelWireWithdrawalResponse$inboundSchema` instead. */
  export const inboundSchema =
    WireWithdrawalsCancelWireWithdrawalResponse$inboundSchema;
  /** @deprecated use `WireWithdrawalsCancelWireWithdrawalResponse$outboundSchema` instead. */
  export const outboundSchema =
    WireWithdrawalsCancelWireWithdrawalResponse$outboundSchema;
  /** @deprecated use `WireWithdrawalsCancelWireWithdrawalResponse$Outbound` instead. */
  export type Outbound = WireWithdrawalsCancelWireWithdrawalResponse$Outbound;
}
