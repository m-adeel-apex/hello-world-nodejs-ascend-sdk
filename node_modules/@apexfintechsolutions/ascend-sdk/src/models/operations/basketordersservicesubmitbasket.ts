/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type BasketOrdersServiceSubmitBasketRequest = {
  /**
   * The correspondent id.
   */
  correspondentId: string;
  /**
   * The basket id.
   */
  basketId: string;
  submitBasketRequestCreate: components.SubmitBasketRequestCreate;
};

export type BasketOrdersServiceSubmitBasketResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  basket?: components.Basket | undefined;
  /**
   * INVALID_ARGUMENT: There was an issue with one or more fields in the request.  The message field will contain details about which field failed validation and why.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const BasketOrdersServiceSubmitBasketRequest$inboundSchema: z.ZodType<
  BasketOrdersServiceSubmitBasketRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  correspondent_id: z.string(),
  basket_id: z.string(),
  SubmitBasketRequestCreate: components.SubmitBasketRequestCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "correspondent_id": "correspondentId",
    "basket_id": "basketId",
    "SubmitBasketRequestCreate": "submitBasketRequestCreate",
  });
});

/** @internal */
export type BasketOrdersServiceSubmitBasketRequest$Outbound = {
  correspondent_id: string;
  basket_id: string;
  SubmitBasketRequestCreate: components.SubmitBasketRequestCreate$Outbound;
};

/** @internal */
export const BasketOrdersServiceSubmitBasketRequest$outboundSchema: z.ZodType<
  BasketOrdersServiceSubmitBasketRequest$Outbound,
  z.ZodTypeDef,
  BasketOrdersServiceSubmitBasketRequest
> = z.object({
  correspondentId: z.string(),
  basketId: z.string(),
  submitBasketRequestCreate:
    components.SubmitBasketRequestCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    correspondentId: "correspondent_id",
    basketId: "basket_id",
    submitBasketRequestCreate: "SubmitBasketRequestCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasketOrdersServiceSubmitBasketRequest$ {
  /** @deprecated use `BasketOrdersServiceSubmitBasketRequest$inboundSchema` instead. */
  export const inboundSchema =
    BasketOrdersServiceSubmitBasketRequest$inboundSchema;
  /** @deprecated use `BasketOrdersServiceSubmitBasketRequest$outboundSchema` instead. */
  export const outboundSchema =
    BasketOrdersServiceSubmitBasketRequest$outboundSchema;
  /** @deprecated use `BasketOrdersServiceSubmitBasketRequest$Outbound` instead. */
  export type Outbound = BasketOrdersServiceSubmitBasketRequest$Outbound;
}

/** @internal */
export const BasketOrdersServiceSubmitBasketResponse$inboundSchema: z.ZodType<
  BasketOrdersServiceSubmitBasketResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Basket: components.Basket$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Basket": "basket",
    "Status": "status",
  });
});

/** @internal */
export type BasketOrdersServiceSubmitBasketResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Basket?: components.Basket$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const BasketOrdersServiceSubmitBasketResponse$outboundSchema: z.ZodType<
  BasketOrdersServiceSubmitBasketResponse$Outbound,
  z.ZodTypeDef,
  BasketOrdersServiceSubmitBasketResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  basket: components.Basket$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    basket: "Basket",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BasketOrdersServiceSubmitBasketResponse$ {
  /** @deprecated use `BasketOrdersServiceSubmitBasketResponse$inboundSchema` instead. */
  export const inboundSchema =
    BasketOrdersServiceSubmitBasketResponse$inboundSchema;
  /** @deprecated use `BasketOrdersServiceSubmitBasketResponse$outboundSchema` instead. */
  export const outboundSchema =
    BasketOrdersServiceSubmitBasketResponse$outboundSchema;
  /** @deprecated use `BasketOrdersServiceSubmitBasketResponse$Outbound` instead. */
  export type Outbound = BasketOrdersServiceSubmitBasketResponse$Outbound;
}
