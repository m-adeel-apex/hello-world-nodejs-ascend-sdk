/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type RetirementConstraintsRetrieveContributionConstraintsRequest = {
  /**
   * The account id.
   */
  accountId: string;
  retrieveContributionConstraintsRequestCreate:
    components.RetrieveContributionConstraintsRequestCreate;
};

export type RetirementConstraintsRetrieveContributionConstraintsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  contributionConstraints?: components.ContributionConstraints | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const RetirementConstraintsRetrieveContributionConstraintsRequest$inboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveContributionConstraintsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account_id: z.string(),
    RetrieveContributionConstraintsRequestCreate:
      components.RetrieveContributionConstraintsRequestCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
      "RetrieveContributionConstraintsRequestCreate":
        "retrieveContributionConstraintsRequestCreate",
    });
  });

/** @internal */
export type RetirementConstraintsRetrieveContributionConstraintsRequest$Outbound =
  {
    account_id: string;
    RetrieveContributionConstraintsRequestCreate:
      components.RetrieveContributionConstraintsRequestCreate$Outbound;
  };

/** @internal */
export const RetirementConstraintsRetrieveContributionConstraintsRequest$outboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveContributionConstraintsRequest$Outbound,
    z.ZodTypeDef,
    RetirementConstraintsRetrieveContributionConstraintsRequest
  > = z.object({
    accountId: z.string(),
    retrieveContributionConstraintsRequestCreate:
      components.RetrieveContributionConstraintsRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
      retrieveContributionConstraintsRequestCreate:
        "RetrieveContributionConstraintsRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetirementConstraintsRetrieveContributionConstraintsRequest$ {
  /** @deprecated use `RetirementConstraintsRetrieveContributionConstraintsRequest$inboundSchema` instead. */
  export const inboundSchema =
    RetirementConstraintsRetrieveContributionConstraintsRequest$inboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveContributionConstraintsRequest$outboundSchema` instead. */
  export const outboundSchema =
    RetirementConstraintsRetrieveContributionConstraintsRequest$outboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveContributionConstraintsRequest$Outbound` instead. */
  export type Outbound =
    RetirementConstraintsRetrieveContributionConstraintsRequest$Outbound;
}

/** @internal */
export const RetirementConstraintsRetrieveContributionConstraintsResponse$inboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveContributionConstraintsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ContributionConstraints: components.ContributionConstraints$inboundSchema
      .optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "ContributionConstraints": "contributionConstraints",
      "Status": "status",
    });
  });

/** @internal */
export type RetirementConstraintsRetrieveContributionConstraintsResponse$Outbound =
  {
    HttpMeta: components.HTTPMetadata$Outbound;
    ContributionConstraints?:
      | components.ContributionConstraints$Outbound
      | undefined;
    Status?: components.Status$Outbound | undefined;
  };

/** @internal */
export const RetirementConstraintsRetrieveContributionConstraintsResponse$outboundSchema:
  z.ZodType<
    RetirementConstraintsRetrieveContributionConstraintsResponse$Outbound,
    z.ZodTypeDef,
    RetirementConstraintsRetrieveContributionConstraintsResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    contributionConstraints: components.ContributionConstraints$outboundSchema
      .optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      contributionConstraints: "ContributionConstraints",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetirementConstraintsRetrieveContributionConstraintsResponse$ {
  /** @deprecated use `RetirementConstraintsRetrieveContributionConstraintsResponse$inboundSchema` instead. */
  export const inboundSchema =
    RetirementConstraintsRetrieveContributionConstraintsResponse$inboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveContributionConstraintsResponse$outboundSchema` instead. */
  export const outboundSchema =
    RetirementConstraintsRetrieveContributionConstraintsResponse$outboundSchema;
  /** @deprecated use `RetirementConstraintsRetrieveContributionConstraintsResponse$Outbound` instead. */
  export type Outbound =
    RetirementConstraintsRetrieveContributionConstraintsResponse$Outbound;
}
