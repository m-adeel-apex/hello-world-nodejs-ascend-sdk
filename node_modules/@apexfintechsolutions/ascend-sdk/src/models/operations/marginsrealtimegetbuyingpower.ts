/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type MarginsRealTimeGetBuyingPowerRequest = {
  /**
   * The account id.
   */
  accountId: string;
};

export type MarginsRealTimeGetBuyingPowerResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  buyingPower?: components.BuyingPower | undefined;
  /**
   * INVALID_ARGUMENT: The request was not well formed. Check the error message for more details.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const MarginsRealTimeGetBuyingPowerRequest$inboundSchema: z.ZodType<
  MarginsRealTimeGetBuyingPowerRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
  });
});

/** @internal */
export type MarginsRealTimeGetBuyingPowerRequest$Outbound = {
  account_id: string;
};

/** @internal */
export const MarginsRealTimeGetBuyingPowerRequest$outboundSchema: z.ZodType<
  MarginsRealTimeGetBuyingPowerRequest$Outbound,
  z.ZodTypeDef,
  MarginsRealTimeGetBuyingPowerRequest
> = z.object({
  accountId: z.string(),
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarginsRealTimeGetBuyingPowerRequest$ {
  /** @deprecated use `MarginsRealTimeGetBuyingPowerRequest$inboundSchema` instead. */
  export const inboundSchema =
    MarginsRealTimeGetBuyingPowerRequest$inboundSchema;
  /** @deprecated use `MarginsRealTimeGetBuyingPowerRequest$outboundSchema` instead. */
  export const outboundSchema =
    MarginsRealTimeGetBuyingPowerRequest$outboundSchema;
  /** @deprecated use `MarginsRealTimeGetBuyingPowerRequest$Outbound` instead. */
  export type Outbound = MarginsRealTimeGetBuyingPowerRequest$Outbound;
}

/** @internal */
export const MarginsRealTimeGetBuyingPowerResponse$inboundSchema: z.ZodType<
  MarginsRealTimeGetBuyingPowerResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  BuyingPower: components.BuyingPower$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "BuyingPower": "buyingPower",
    "Status": "status",
  });
});

/** @internal */
export type MarginsRealTimeGetBuyingPowerResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  BuyingPower?: components.BuyingPower$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const MarginsRealTimeGetBuyingPowerResponse$outboundSchema: z.ZodType<
  MarginsRealTimeGetBuyingPowerResponse$Outbound,
  z.ZodTypeDef,
  MarginsRealTimeGetBuyingPowerResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  buyingPower: components.BuyingPower$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    buyingPower: "BuyingPower",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MarginsRealTimeGetBuyingPowerResponse$ {
  /** @deprecated use `MarginsRealTimeGetBuyingPowerResponse$inboundSchema` instead. */
  export const inboundSchema =
    MarginsRealTimeGetBuyingPowerResponse$inboundSchema;
  /** @deprecated use `MarginsRealTimeGetBuyingPowerResponse$outboundSchema` instead. */
  export const outboundSchema =
    MarginsRealTimeGetBuyingPowerResponse$outboundSchema;
  /** @deprecated use `MarginsRealTimeGetBuyingPowerResponse$Outbound` instead. */
  export type Outbound = MarginsRealTimeGetBuyingPowerResponse$Outbound;
}
