/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest = {
  /**
   * The account id.
   */
  accountId: string;
  /**
   * The wireWithdrawalSchedule id.
   */
  wireWithdrawalScheduleId: string;
  cancelWireWithdrawalScheduleRequestCreate:
    components.CancelWireWithdrawalScheduleRequestCreate;
};

export type WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  wireWithdrawalSchedule?: components.WireWithdrawalSchedule | undefined;
  /**
   * INVALID_ARGUMENT: The request has an invalid argument.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$inboundSchema:
  z.ZodType<
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    account_id: z.string(),
    wireWithdrawalSchedule_id: z.string(),
    CancelWireWithdrawalScheduleRequestCreate:
      components.CancelWireWithdrawalScheduleRequestCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "account_id": "accountId",
      "wireWithdrawalSchedule_id": "wireWithdrawalScheduleId",
      "CancelWireWithdrawalScheduleRequestCreate":
        "cancelWireWithdrawalScheduleRequestCreate",
    });
  });

/** @internal */
export type WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$Outbound =
  {
    account_id: string;
    wireWithdrawalSchedule_id: string;
    CancelWireWithdrawalScheduleRequestCreate:
      components.CancelWireWithdrawalScheduleRequestCreate$Outbound;
  };

/** @internal */
export const WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$outboundSchema:
  z.ZodType<
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$Outbound,
    z.ZodTypeDef,
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest
  > = z.object({
    accountId: z.string(),
    wireWithdrawalScheduleId: z.string(),
    cancelWireWithdrawalScheduleRequestCreate:
      components.CancelWireWithdrawalScheduleRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      accountId: "account_id",
      wireWithdrawalScheduleId: "wireWithdrawalSchedule_id",
      cancelWireWithdrawalScheduleRequestCreate:
        "CancelWireWithdrawalScheduleRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$ {
  /** @deprecated use `WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$inboundSchema` instead. */
  export const inboundSchema =
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$inboundSchema;
  /** @deprecated use `WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$outboundSchema` instead. */
  export const outboundSchema =
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$outboundSchema;
  /** @deprecated use `WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$Outbound` instead. */
  export type Outbound =
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleRequest$Outbound;
}

/** @internal */
export const WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$inboundSchema:
  z.ZodType<
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    WireWithdrawalSchedule: components.WireWithdrawalSchedule$inboundSchema
      .optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "WireWithdrawalSchedule": "wireWithdrawalSchedule",
      "Status": "status",
    });
  });

/** @internal */
export type WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$Outbound =
  {
    HttpMeta: components.HTTPMetadata$Outbound;
    WireWithdrawalSchedule?:
      | components.WireWithdrawalSchedule$Outbound
      | undefined;
    Status?: components.Status$Outbound | undefined;
  };

/** @internal */
export const WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$outboundSchema:
  z.ZodType<
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$Outbound,
    z.ZodTypeDef,
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    wireWithdrawalSchedule: components.WireWithdrawalSchedule$outboundSchema
      .optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      wireWithdrawalSchedule: "WireWithdrawalSchedule",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$ {
  /** @deprecated use `WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$inboundSchema` instead. */
  export const inboundSchema =
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$inboundSchema;
  /** @deprecated use `WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$outboundSchema` instead. */
  export const outboundSchema =
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$outboundSchema;
  /** @deprecated use `WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$Outbound` instead. */
  export type Outbound =
    WireWithdrawalSchedulesCancelWireWithdrawalScheduleResponse$Outbound;
}
