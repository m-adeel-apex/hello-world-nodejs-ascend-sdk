/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AssetsListAssetsCorrespondentRequest = {
  /**
   * The correspondent id.
   */
  correspondentId: string;
  /**
   * The maximum number of assets to return. The service may return fewer than this value. Default is 100 (subject to change) The maximum is 1000, values exceeding this will be set to 1000 (subject to change)
   */
  pageSize?: number | undefined;
  /**
   * A page token, received from a previous `ListAssets` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAssets` must match the call that provided the page token in order to maintain a stable result set.
   */
  pageToken?: string | undefined;
  /**
   * A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information;
   */
  filter?: string | undefined;
};

export type AssetsListAssetsCorrespondentResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  listAssetsResponse?: components.ListAssetsResponse | undefined;
  /**
   * INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const AssetsListAssetsCorrespondentRequest$inboundSchema: z.ZodType<
  AssetsListAssetsCorrespondentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  correspondent_id: z.string(),
  page_size: z.number().int().optional(),
  page_token: z.string().optional(),
  filter: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "correspondent_id": "correspondentId",
    "page_size": "pageSize",
    "page_token": "pageToken",
  });
});

/** @internal */
export type AssetsListAssetsCorrespondentRequest$Outbound = {
  correspondent_id: string;
  page_size?: number | undefined;
  page_token?: string | undefined;
  filter?: string | undefined;
};

/** @internal */
export const AssetsListAssetsCorrespondentRequest$outboundSchema: z.ZodType<
  AssetsListAssetsCorrespondentRequest$Outbound,
  z.ZodTypeDef,
  AssetsListAssetsCorrespondentRequest
> = z.object({
  correspondentId: z.string(),
  pageSize: z.number().int().optional(),
  pageToken: z.string().optional(),
  filter: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    correspondentId: "correspondent_id",
    pageSize: "page_size",
    pageToken: "page_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetsListAssetsCorrespondentRequest$ {
  /** @deprecated use `AssetsListAssetsCorrespondentRequest$inboundSchema` instead. */
  export const inboundSchema =
    AssetsListAssetsCorrespondentRequest$inboundSchema;
  /** @deprecated use `AssetsListAssetsCorrespondentRequest$outboundSchema` instead. */
  export const outboundSchema =
    AssetsListAssetsCorrespondentRequest$outboundSchema;
  /** @deprecated use `AssetsListAssetsCorrespondentRequest$Outbound` instead. */
  export type Outbound = AssetsListAssetsCorrespondentRequest$Outbound;
}

/** @internal */
export const AssetsListAssetsCorrespondentResponse$inboundSchema: z.ZodType<
  AssetsListAssetsCorrespondentResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  ListAssetsResponse: components.ListAssetsResponse$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "ListAssetsResponse": "listAssetsResponse",
    "Status": "status",
  });
});

/** @internal */
export type AssetsListAssetsCorrespondentResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  ListAssetsResponse?: components.ListAssetsResponse$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const AssetsListAssetsCorrespondentResponse$outboundSchema: z.ZodType<
  AssetsListAssetsCorrespondentResponse$Outbound,
  z.ZodTypeDef,
  AssetsListAssetsCorrespondentResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  listAssetsResponse: components.ListAssetsResponse$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    listAssetsResponse: "ListAssetsResponse",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AssetsListAssetsCorrespondentResponse$ {
  /** @deprecated use `AssetsListAssetsCorrespondentResponse$inboundSchema` instead. */
  export const inboundSchema =
    AssetsListAssetsCorrespondentResponse$inboundSchema;
  /** @deprecated use `AssetsListAssetsCorrespondentResponse$outboundSchema` instead. */
  export const outboundSchema =
    AssetsListAssetsCorrespondentResponse$outboundSchema;
  /** @deprecated use `AssetsListAssetsCorrespondentResponse$Outbound` instead. */
  export type Outbound = AssetsListAssetsCorrespondentResponse$Outbound;
}
