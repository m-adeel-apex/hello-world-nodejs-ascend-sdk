/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type WatchlistServiceGetWatchlistItemRequest = {
  /**
   * The watchlist id.
   */
  watchlistId: string;
  /**
   * The item id.
   */
  itemId: string;
};

export type WatchlistServiceGetWatchlistItemResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  watchlistItem?: components.WatchlistItem | undefined;
  /**
   * INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const WatchlistServiceGetWatchlistItemRequest$inboundSchema: z.ZodType<
  WatchlistServiceGetWatchlistItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  watchlist_id: z.string(),
  item_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "watchlist_id": "watchlistId",
    "item_id": "itemId",
  });
});

/** @internal */
export type WatchlistServiceGetWatchlistItemRequest$Outbound = {
  watchlist_id: string;
  item_id: string;
};

/** @internal */
export const WatchlistServiceGetWatchlistItemRequest$outboundSchema: z.ZodType<
  WatchlistServiceGetWatchlistItemRequest$Outbound,
  z.ZodTypeDef,
  WatchlistServiceGetWatchlistItemRequest
> = z.object({
  watchlistId: z.string(),
  itemId: z.string(),
}).transform((v) => {
  return remap$(v, {
    watchlistId: "watchlist_id",
    itemId: "item_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WatchlistServiceGetWatchlistItemRequest$ {
  /** @deprecated use `WatchlistServiceGetWatchlistItemRequest$inboundSchema` instead. */
  export const inboundSchema =
    WatchlistServiceGetWatchlistItemRequest$inboundSchema;
  /** @deprecated use `WatchlistServiceGetWatchlistItemRequest$outboundSchema` instead. */
  export const outboundSchema =
    WatchlistServiceGetWatchlistItemRequest$outboundSchema;
  /** @deprecated use `WatchlistServiceGetWatchlistItemRequest$Outbound` instead. */
  export type Outbound = WatchlistServiceGetWatchlistItemRequest$Outbound;
}

/** @internal */
export const WatchlistServiceGetWatchlistItemResponse$inboundSchema: z.ZodType<
  WatchlistServiceGetWatchlistItemResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  WatchlistItem: components.WatchlistItem$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "WatchlistItem": "watchlistItem",
    "Status": "status",
  });
});

/** @internal */
export type WatchlistServiceGetWatchlistItemResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  WatchlistItem?: components.WatchlistItem$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const WatchlistServiceGetWatchlistItemResponse$outboundSchema: z.ZodType<
  WatchlistServiceGetWatchlistItemResponse$Outbound,
  z.ZodTypeDef,
  WatchlistServiceGetWatchlistItemResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  watchlistItem: components.WatchlistItem$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    watchlistItem: "WatchlistItem",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WatchlistServiceGetWatchlistItemResponse$ {
  /** @deprecated use `WatchlistServiceGetWatchlistItemResponse$inboundSchema` instead. */
  export const inboundSchema =
    WatchlistServiceGetWatchlistItemResponse$inboundSchema;
  /** @deprecated use `WatchlistServiceGetWatchlistItemResponse$outboundSchema` instead. */
  export const outboundSchema =
    WatchlistServiceGetWatchlistItemResponse$outboundSchema;
  /** @deprecated use `WatchlistServiceGetWatchlistItemResponse$Outbound` instead. */
  export type Outbound = WatchlistServiceGetWatchlistItemResponse$Outbound;
}
