/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AccountsAffirmAgreementsRequest = {
  /**
   * The account id.
   */
  accountId: string;
  affirmAgreementsRequestCreate: components.AffirmAgreementsRequestCreate;
};

export type AccountsAffirmAgreementsResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  affirmAgreementsResponse?: components.AffirmAgreementsResponse | undefined;
  /**
   * INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const AccountsAffirmAgreementsRequest$inboundSchema: z.ZodType<
  AccountsAffirmAgreementsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_id: z.string(),
  AffirmAgreementsRequestCreate:
    components.AffirmAgreementsRequestCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
    "AffirmAgreementsRequestCreate": "affirmAgreementsRequestCreate",
  });
});

/** @internal */
export type AccountsAffirmAgreementsRequest$Outbound = {
  account_id: string;
  AffirmAgreementsRequestCreate:
    components.AffirmAgreementsRequestCreate$Outbound;
};

/** @internal */
export const AccountsAffirmAgreementsRequest$outboundSchema: z.ZodType<
  AccountsAffirmAgreementsRequest$Outbound,
  z.ZodTypeDef,
  AccountsAffirmAgreementsRequest
> = z.object({
  accountId: z.string(),
  affirmAgreementsRequestCreate:
    components.AffirmAgreementsRequestCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
    affirmAgreementsRequestCreate: "AffirmAgreementsRequestCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsAffirmAgreementsRequest$ {
  /** @deprecated use `AccountsAffirmAgreementsRequest$inboundSchema` instead. */
  export const inboundSchema = AccountsAffirmAgreementsRequest$inboundSchema;
  /** @deprecated use `AccountsAffirmAgreementsRequest$outboundSchema` instead. */
  export const outboundSchema = AccountsAffirmAgreementsRequest$outboundSchema;
  /** @deprecated use `AccountsAffirmAgreementsRequest$Outbound` instead. */
  export type Outbound = AccountsAffirmAgreementsRequest$Outbound;
}

/** @internal */
export const AccountsAffirmAgreementsResponse$inboundSchema: z.ZodType<
  AccountsAffirmAgreementsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  AffirmAgreementsResponse: components.AffirmAgreementsResponse$inboundSchema
    .optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "AffirmAgreementsResponse": "affirmAgreementsResponse",
    "Status": "status",
  });
});

/** @internal */
export type AccountsAffirmAgreementsResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  AffirmAgreementsResponse?:
    | components.AffirmAgreementsResponse$Outbound
    | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const AccountsAffirmAgreementsResponse$outboundSchema: z.ZodType<
  AccountsAffirmAgreementsResponse$Outbound,
  z.ZodTypeDef,
  AccountsAffirmAgreementsResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  affirmAgreementsResponse: components.AffirmAgreementsResponse$outboundSchema
    .optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    affirmAgreementsResponse: "AffirmAgreementsResponse",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountsAffirmAgreementsResponse$ {
  /** @deprecated use `AccountsAffirmAgreementsResponse$inboundSchema` instead. */
  export const inboundSchema = AccountsAffirmAgreementsResponse$inboundSchema;
  /** @deprecated use `AccountsAffirmAgreementsResponse$outboundSchema` instead. */
  export const outboundSchema = AccountsAffirmAgreementsResponse$outboundSchema;
  /** @deprecated use `AccountsAffirmAgreementsResponse$Outbound` instead. */
  export type Outbound = AccountsAffirmAgreementsResponse$Outbound;
}
