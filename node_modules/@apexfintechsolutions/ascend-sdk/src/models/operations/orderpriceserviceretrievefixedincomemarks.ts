/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type OrderPriceServiceRetrieveFixedIncomeMarksRequest = {
  /**
   * The correspondent id.
   */
  correspondentId: string;
  retrieveFixedIncomeMarksRequestCreate:
    components.RetrieveFixedIncomeMarksRequestCreate;
};

export type OrderPriceServiceRetrieveFixedIncomeMarksResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  retrieveFixedIncomeMarksResponse?:
    | components.RetrieveFixedIncomeMarksResponse
    | undefined;
  /**
   * INVALID_ARGUMENT: There was an issue with one or more fields in the request.  The message field will contain details about which field failed validation and why.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const OrderPriceServiceRetrieveFixedIncomeMarksRequest$inboundSchema:
  z.ZodType<
    OrderPriceServiceRetrieveFixedIncomeMarksRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    correspondent_id: z.string(),
    RetrieveFixedIncomeMarksRequestCreate:
      components.RetrieveFixedIncomeMarksRequestCreate$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "correspondent_id": "correspondentId",
      "RetrieveFixedIncomeMarksRequestCreate":
        "retrieveFixedIncomeMarksRequestCreate",
    });
  });

/** @internal */
export type OrderPriceServiceRetrieveFixedIncomeMarksRequest$Outbound = {
  correspondent_id: string;
  RetrieveFixedIncomeMarksRequestCreate:
    components.RetrieveFixedIncomeMarksRequestCreate$Outbound;
};

/** @internal */
export const OrderPriceServiceRetrieveFixedIncomeMarksRequest$outboundSchema:
  z.ZodType<
    OrderPriceServiceRetrieveFixedIncomeMarksRequest$Outbound,
    z.ZodTypeDef,
    OrderPriceServiceRetrieveFixedIncomeMarksRequest
  > = z.object({
    correspondentId: z.string(),
    retrieveFixedIncomeMarksRequestCreate:
      components.RetrieveFixedIncomeMarksRequestCreate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      correspondentId: "correspondent_id",
      retrieveFixedIncomeMarksRequestCreate:
        "RetrieveFixedIncomeMarksRequestCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrderPriceServiceRetrieveFixedIncomeMarksRequest$ {
  /** @deprecated use `OrderPriceServiceRetrieveFixedIncomeMarksRequest$inboundSchema` instead. */
  export const inboundSchema =
    OrderPriceServiceRetrieveFixedIncomeMarksRequest$inboundSchema;
  /** @deprecated use `OrderPriceServiceRetrieveFixedIncomeMarksRequest$outboundSchema` instead. */
  export const outboundSchema =
    OrderPriceServiceRetrieveFixedIncomeMarksRequest$outboundSchema;
  /** @deprecated use `OrderPriceServiceRetrieveFixedIncomeMarksRequest$Outbound` instead. */
  export type Outbound =
    OrderPriceServiceRetrieveFixedIncomeMarksRequest$Outbound;
}

/** @internal */
export const OrderPriceServiceRetrieveFixedIncomeMarksResponse$inboundSchema:
  z.ZodType<
    OrderPriceServiceRetrieveFixedIncomeMarksResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    RetrieveFixedIncomeMarksResponse: components
      .RetrieveFixedIncomeMarksResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "HttpMeta": "httpMeta",
      "RetrieveFixedIncomeMarksResponse": "retrieveFixedIncomeMarksResponse",
      "Status": "status",
    });
  });

/** @internal */
export type OrderPriceServiceRetrieveFixedIncomeMarksResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  RetrieveFixedIncomeMarksResponse?:
    | components.RetrieveFixedIncomeMarksResponse$Outbound
    | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const OrderPriceServiceRetrieveFixedIncomeMarksResponse$outboundSchema:
  z.ZodType<
    OrderPriceServiceRetrieveFixedIncomeMarksResponse$Outbound,
    z.ZodTypeDef,
    OrderPriceServiceRetrieveFixedIncomeMarksResponse
  > = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    retrieveFixedIncomeMarksResponse: components
      .RetrieveFixedIncomeMarksResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      httpMeta: "HttpMeta",
      retrieveFixedIncomeMarksResponse: "RetrieveFixedIncomeMarksResponse",
      status: "Status",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrderPriceServiceRetrieveFixedIncomeMarksResponse$ {
  /** @deprecated use `OrderPriceServiceRetrieveFixedIncomeMarksResponse$inboundSchema` instead. */
  export const inboundSchema =
    OrderPriceServiceRetrieveFixedIncomeMarksResponse$inboundSchema;
  /** @deprecated use `OrderPriceServiceRetrieveFixedIncomeMarksResponse$outboundSchema` instead. */
  export const outboundSchema =
    OrderPriceServiceRetrieveFixedIncomeMarksResponse$outboundSchema;
  /** @deprecated use `OrderPriceServiceRetrieveFixedIncomeMarksResponse$Outbound` instead. */
  export type Outbound =
    OrderPriceServiceRetrieveFixedIncomeMarksResponse$Outbound;
}
