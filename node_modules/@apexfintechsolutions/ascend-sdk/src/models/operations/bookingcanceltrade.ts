/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type BookingCancelTradeRequest = {
  /**
   * The account id.
   */
  accountId: string;
  /**
   * The trade id.
   */
  tradeId: string;
  cancelTradeRequestCreate: components.CancelTradeRequestCreate;
};

export type BookingCancelTradeResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  cancelTradeResponse?: components.CancelTradeResponse | undefined;
  /**
   * INVALID_ARGUMENT: The request is not valid.
   *
   * @remarks
   * FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
   */
  status?: components.Status | undefined;
};

/** @internal */
export const BookingCancelTradeRequest$inboundSchema: z.ZodType<
  BookingCancelTradeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  account_id: z.string(),
  trade_id: z.string(),
  CancelTradeRequestCreate: components.CancelTradeRequestCreate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "account_id": "accountId",
    "trade_id": "tradeId",
    "CancelTradeRequestCreate": "cancelTradeRequestCreate",
  });
});

/** @internal */
export type BookingCancelTradeRequest$Outbound = {
  account_id: string;
  trade_id: string;
  CancelTradeRequestCreate: components.CancelTradeRequestCreate$Outbound;
};

/** @internal */
export const BookingCancelTradeRequest$outboundSchema: z.ZodType<
  BookingCancelTradeRequest$Outbound,
  z.ZodTypeDef,
  BookingCancelTradeRequest
> = z.object({
  accountId: z.string(),
  tradeId: z.string(),
  cancelTradeRequestCreate: components.CancelTradeRequestCreate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    accountId: "account_id",
    tradeId: "trade_id",
    cancelTradeRequestCreate: "CancelTradeRequestCreate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BookingCancelTradeRequest$ {
  /** @deprecated use `BookingCancelTradeRequest$inboundSchema` instead. */
  export const inboundSchema = BookingCancelTradeRequest$inboundSchema;
  /** @deprecated use `BookingCancelTradeRequest$outboundSchema` instead. */
  export const outboundSchema = BookingCancelTradeRequest$outboundSchema;
  /** @deprecated use `BookingCancelTradeRequest$Outbound` instead. */
  export type Outbound = BookingCancelTradeRequest$Outbound;
}

/** @internal */
export const BookingCancelTradeResponse$inboundSchema: z.ZodType<
  BookingCancelTradeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  CancelTradeResponse: components.CancelTradeResponse$inboundSchema.optional(),
  Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "CancelTradeResponse": "cancelTradeResponse",
    "Status": "status",
  });
});

/** @internal */
export type BookingCancelTradeResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  CancelTradeResponse?: components.CancelTradeResponse$Outbound | undefined;
  Status?: components.Status$Outbound | undefined;
};

/** @internal */
export const BookingCancelTradeResponse$outboundSchema: z.ZodType<
  BookingCancelTradeResponse$Outbound,
  z.ZodTypeDef,
  BookingCancelTradeResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  cancelTradeResponse: components.CancelTradeResponse$outboundSchema.optional(),
  status: components.Status$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    cancelTradeResponse: "CancelTradeResponse",
    status: "Status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BookingCancelTradeResponse$ {
  /** @deprecated use `BookingCancelTradeResponse$inboundSchema` instead. */
  export const inboundSchema = BookingCancelTradeResponse$inboundSchema;
  /** @deprecated use `BookingCancelTradeResponse$outboundSchema` instead. */
  export const outboundSchema = BookingCancelTradeResponse$outboundSchema;
  /** @deprecated use `BookingCancelTradeResponse$Outbound` instead. */
  export type Outbound = BookingCancelTradeResponse$Outbound;
}
