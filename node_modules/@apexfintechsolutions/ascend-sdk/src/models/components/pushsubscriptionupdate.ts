/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  HttpPushCallbackUpdate,
  HttpPushCallbackUpdate$inboundSchema,
  HttpPushCallbackUpdate$Outbound,
  HttpPushCallbackUpdate$outboundSchema,
} from "./httppushcallbackupdate.js";

/**
 * Configuration information about a push subscription
 */
export type PushSubscriptionUpdate = {
  /**
   * The user-defined name for the subscription
   */
  displayName?: string | undefined;
  /**
   * Filter for event types; ["\*"] matches all values; Suffix wildcards using "\*" (e.g. ["account.\*"]) are supported
   */
  eventTypes?: Array<string> | undefined;
  /**
   * Configuration information about an HTTP target callback
   */
  httpCallback?: HttpPushCallbackUpdate | undefined;
};

/** @internal */
export const PushSubscriptionUpdate$inboundSchema: z.ZodType<
  PushSubscriptionUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  display_name: z.string().optional(),
  event_types: z.array(z.string()).optional(),
  http_callback: HttpPushCallbackUpdate$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "display_name": "displayName",
    "event_types": "eventTypes",
    "http_callback": "httpCallback",
  });
});

/** @internal */
export type PushSubscriptionUpdate$Outbound = {
  display_name?: string | undefined;
  event_types?: Array<string> | undefined;
  http_callback?: HttpPushCallbackUpdate$Outbound | undefined;
};

/** @internal */
export const PushSubscriptionUpdate$outboundSchema: z.ZodType<
  PushSubscriptionUpdate$Outbound,
  z.ZodTypeDef,
  PushSubscriptionUpdate
> = z.object({
  displayName: z.string().optional(),
  eventTypes: z.array(z.string()).optional(),
  httpCallback: HttpPushCallbackUpdate$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    displayName: "display_name",
    eventTypes: "event_types",
    httpCallback: "http_callback",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PushSubscriptionUpdate$ {
  /** @deprecated use `PushSubscriptionUpdate$inboundSchema` instead. */
  export const inboundSchema = PushSubscriptionUpdate$inboundSchema;
  /** @deprecated use `PushSubscriptionUpdate$outboundSchema` instead. */
  export const outboundSchema = PushSubscriptionUpdate$outboundSchema;
  /** @deprecated use `PushSubscriptionUpdate$Outbound` instead. */
  export type Outbound = PushSubscriptionUpdate$Outbound;
}
