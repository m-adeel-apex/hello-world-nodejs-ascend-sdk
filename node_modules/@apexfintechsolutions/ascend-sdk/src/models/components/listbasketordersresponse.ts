/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  BasketOrder,
  BasketOrder$inboundSchema,
  BasketOrder$Outbound,
  BasketOrder$outboundSchema,
} from "./basketorder.js";

/**
 * The response message for listing basket orders within a basket
 */
export type ListBasketOrdersResponse = {
  /**
   * The basket orders in the basket
   */
  basketOrders?: Array<BasketOrder> | undefined;
  /**
   * A token to retrieve the next page of results. Pass this value in the `page_token` field in the subsequent call to `ListBasketOrders` method to retrieve the next page of results.
   */
  nextPageToken?: string | undefined;
};

/** @internal */
export const ListBasketOrdersResponse$inboundSchema: z.ZodType<
  ListBasketOrdersResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  basket_orders: z.array(BasketOrder$inboundSchema).optional(),
  next_page_token: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "basket_orders": "basketOrders",
    "next_page_token": "nextPageToken",
  });
});

/** @internal */
export type ListBasketOrdersResponse$Outbound = {
  basket_orders?: Array<BasketOrder$Outbound> | undefined;
  next_page_token?: string | undefined;
};

/** @internal */
export const ListBasketOrdersResponse$outboundSchema: z.ZodType<
  ListBasketOrdersResponse$Outbound,
  z.ZodTypeDef,
  ListBasketOrdersResponse
> = z.object({
  basketOrders: z.array(BasketOrder$outboundSchema).optional(),
  nextPageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    basketOrders: "basket_orders",
    nextPageToken: "next_page_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListBasketOrdersResponse$ {
  /** @deprecated use `ListBasketOrdersResponse$inboundSchema` instead. */
  export const inboundSchema = ListBasketOrdersResponse$inboundSchema;
  /** @deprecated use `ListBasketOrdersResponse$outboundSchema` instead. */
  export const outboundSchema = ListBasketOrdersResponse$outboundSchema;
  /** @deprecated use `ListBasketOrdersResponse$Outbound` instead. */
  export type Outbound = ListBasketOrdersResponse$Outbound;
}
