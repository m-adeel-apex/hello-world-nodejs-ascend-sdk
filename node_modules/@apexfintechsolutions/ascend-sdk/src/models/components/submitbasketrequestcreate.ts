/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The message to submit a basket for execution in the market
 */
export type SubmitBasketRequestCreate = {
  /**
   * Format: correspondents/{correspondent}/baskets/{basket}
   */
  name: string;
};

/** @internal */
export const SubmitBasketRequestCreate$inboundSchema: z.ZodType<
  SubmitBasketRequestCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
});

/** @internal */
export type SubmitBasketRequestCreate$Outbound = {
  name: string;
};

/** @internal */
export const SubmitBasketRequestCreate$outboundSchema: z.ZodType<
  SubmitBasketRequestCreate$Outbound,
  z.ZodTypeDef,
  SubmitBasketRequestCreate
> = z.object({
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubmitBasketRequestCreate$ {
  /** @deprecated use `SubmitBasketRequestCreate$inboundSchema` instead. */
  export const inboundSchema = SubmitBasketRequestCreate$inboundSchema;
  /** @deprecated use `SubmitBasketRequestCreate$outboundSchema` instead. */
  export const outboundSchema = SubmitBasketRequestCreate$outboundSchema;
  /** @deprecated use `SubmitBasketRequestCreate$Outbound` instead. */
  export type Outbound = SubmitBasketRequestCreate$Outbound;
}
