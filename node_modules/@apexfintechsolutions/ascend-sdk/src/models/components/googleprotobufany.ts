/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { collectExtraKeys as collectExtraKeys$ } from "../../lib/schemas.js";

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type GoogleProtobufAny = {
  /**
   * The type of the serialized message.
   */
  atType?: string | undefined;
  additionalProperties: { [k: string]: any };
};

/** @internal */
export const GoogleProtobufAny$inboundSchema: z.ZodType<
  GoogleProtobufAny,
  z.ZodTypeDef,
  unknown
> = collectExtraKeys$(
  z.object({
    "@type": z.string().optional(),
  }).catchall(z.any()),
  "additionalProperties",
).transform((v) => {
  return remap$(v, {
    "@type": "atType",
  });
});

/** @internal */
export type GoogleProtobufAny$Outbound = {
  "@type"?: string | undefined;
  [additionalProperties: string]: unknown;
};

/** @internal */
export const GoogleProtobufAny$outboundSchema: z.ZodType<
  GoogleProtobufAny$Outbound,
  z.ZodTypeDef,
  GoogleProtobufAny
> = z.object({
  atType: z.string().optional(),
  additionalProperties: z.record(z.any()),
}).transform((v) => {
  return {
    ...v.additionalProperties,
    ...remap$(v, {
      atType: "@type",
      additionalProperties: null,
    }),
  };
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GoogleProtobufAny$ {
  /** @deprecated use `GoogleProtobufAny$inboundSchema` instead. */
  export const inboundSchema = GoogleProtobufAny$inboundSchema;
  /** @deprecated use `GoogleProtobufAny$outboundSchema` instead. */
  export const outboundSchema = GoogleProtobufAny$outboundSchema;
  /** @deprecated use `GoogleProtobufAny$Outbound` instead. */
  export type Outbound = GoogleProtobufAny$Outbound;
}
