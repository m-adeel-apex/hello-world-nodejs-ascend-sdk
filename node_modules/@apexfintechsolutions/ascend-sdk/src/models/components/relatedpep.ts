/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ImmediateFamilyMember,
  ImmediateFamilyMember$inboundSchema,
  ImmediateFamilyMember$Outbound,
  ImmediateFamilyMember$outboundSchema,
} from "./immediatefamilymember.js";

/**
 * Detail around the related politically exposed Person
 */
export type RelatedPep = {
  /**
   * Information about the immediate family members of the related politically exposed person
   */
  immediateFamilyMembers?: Array<ImmediateFamilyMember> | undefined;
  /**
   * The organization a politically exposed person is associated with causing them to be considered politically exposed
   */
  organization?: string | undefined;
  /**
   * The name of the related politically exposed person
   */
  pepName?: string | undefined;
  /**
   * The title of the related politically exposed person
   */
  title?: string | undefined;
};

/** @internal */
export const RelatedPep$inboundSchema: z.ZodType<
  RelatedPep,
  z.ZodTypeDef,
  unknown
> = z.object({
  immediate_family_members: z.array(ImmediateFamilyMember$inboundSchema)
    .optional(),
  organization: z.string().optional(),
  pep_name: z.string().optional(),
  title: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "immediate_family_members": "immediateFamilyMembers",
    "pep_name": "pepName",
  });
});

/** @internal */
export type RelatedPep$Outbound = {
  immediate_family_members?: Array<ImmediateFamilyMember$Outbound> | undefined;
  organization?: string | undefined;
  pep_name?: string | undefined;
  title?: string | undefined;
};

/** @internal */
export const RelatedPep$outboundSchema: z.ZodType<
  RelatedPep$Outbound,
  z.ZodTypeDef,
  RelatedPep
> = z.object({
  immediateFamilyMembers: z.array(ImmediateFamilyMember$outboundSchema)
    .optional(),
  organization: z.string().optional(),
  pepName: z.string().optional(),
  title: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    immediateFamilyMembers: "immediate_family_members",
    pepName: "pep_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RelatedPep$ {
  /** @deprecated use `RelatedPep$inboundSchema` instead. */
  export const inboundSchema = RelatedPep$inboundSchema;
  /** @deprecated use `RelatedPep$outboundSchema` instead. */
  export const outboundSchema = RelatedPep$outboundSchema;
  /** @deprecated use `RelatedPep$Outbound` instead. */
  export type Outbound = RelatedPep$Outbound;
}
