/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  DistributionConstraintsDistributionTypeInfo,
  DistributionConstraintsDistributionTypeInfo$inboundSchema,
  DistributionConstraintsDistributionTypeInfo$Outbound,
  DistributionConstraintsDistributionTypeInfo$outboundSchema,
} from "./distributionconstraintsdistributiontypeinfo.js";

/**
 * Retirement distribution constraints when withdrawing money from an Apex account
 */
export type DistributionConstraints = {
  /**
   * Whether a full distribution withdrawal is allowed
   */
  fullDistributionAllowed?: boolean | undefined;
  /**
   * Valid distribution types
   */
  validTypes?: Array<DistributionConstraintsDistributionTypeInfo> | undefined;
};

/** @internal */
export const DistributionConstraints$inboundSchema: z.ZodType<
  DistributionConstraints,
  z.ZodTypeDef,
  unknown
> = z.object({
  full_distribution_allowed: z.boolean().optional(),
  valid_types: z.array(
    DistributionConstraintsDistributionTypeInfo$inboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "full_distribution_allowed": "fullDistributionAllowed",
    "valid_types": "validTypes",
  });
});

/** @internal */
export type DistributionConstraints$Outbound = {
  full_distribution_allowed?: boolean | undefined;
  valid_types?:
    | Array<DistributionConstraintsDistributionTypeInfo$Outbound>
    | undefined;
};

/** @internal */
export const DistributionConstraints$outboundSchema: z.ZodType<
  DistributionConstraints$Outbound,
  z.ZodTypeDef,
  DistributionConstraints
> = z.object({
  fullDistributionAllowed: z.boolean().optional(),
  validTypes: z.array(
    DistributionConstraintsDistributionTypeInfo$outboundSchema,
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    fullDistributionAllowed: "full_distribution_allowed",
    validTypes: "valid_types",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DistributionConstraints$ {
  /** @deprecated use `DistributionConstraints$inboundSchema` instead. */
  export const inboundSchema = DistributionConstraints$inboundSchema;
  /** @deprecated use `DistributionConstraints$outboundSchema` instead. */
  export const outboundSchema = DistributionConstraints$outboundSchema;
  /** @deprecated use `DistributionConstraints$Outbound` instead. */
  export type Outbound = DistributionConstraints$Outbound;
}
