/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  DecimalCreate,
  DecimalCreate$inboundSchema,
  DecimalCreate$Outbound,
  DecimalCreate$outboundSchema,
} from "./decimalcreate.js";
import {
  RetirementContributionCreate,
  RetirementContributionCreate$inboundSchema,
  RetirementContributionCreate$Outbound,
  RetirementContributionCreate$outboundSchema,
} from "./retirementcontributioncreate.js";

/**
 * A deposit transfer using the ACH mechanism.
 */
export type AchDepositCreate = {
  /**
   * A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].
   *
   * @remarks
   *
   *  [BigDecimal]:
   *  https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
   *  [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
   */
  amount: DecimalCreate;
  /**
   * The bank relationship to be used for the ACH deposit.
   */
  bankRelationship: string;
  /**
   * The external identifier supplied by the API caller. Each request must have a unique pairing of `client_transfer_id` and `account`.
   */
  clientTransferId: string;
  /**
   * The memo that will appear on the customer's bank statement.
   */
  memo?: string | undefined;
  /**
   * A contribution to a retirement account.
   */
  retirementContribution?: RetirementContributionCreate | undefined;
};

/** @internal */
export const AchDepositCreate$inboundSchema: z.ZodType<
  AchDepositCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: DecimalCreate$inboundSchema,
  bank_relationship: z.string(),
  client_transfer_id: z.string(),
  memo: z.string().optional(),
  retirement_contribution: RetirementContributionCreate$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "bank_relationship": "bankRelationship",
    "client_transfer_id": "clientTransferId",
    "retirement_contribution": "retirementContribution",
  });
});

/** @internal */
export type AchDepositCreate$Outbound = {
  amount: DecimalCreate$Outbound;
  bank_relationship: string;
  client_transfer_id: string;
  memo?: string | undefined;
  retirement_contribution?: RetirementContributionCreate$Outbound | undefined;
};

/** @internal */
export const AchDepositCreate$outboundSchema: z.ZodType<
  AchDepositCreate$Outbound,
  z.ZodTypeDef,
  AchDepositCreate
> = z.object({
  amount: DecimalCreate$outboundSchema,
  bankRelationship: z.string(),
  clientTransferId: z.string(),
  memo: z.string().optional(),
  retirementContribution: RetirementContributionCreate$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    bankRelationship: "bank_relationship",
    clientTransferId: "client_transfer_id",
    retirementContribution: "retirement_contribution",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AchDepositCreate$ {
  /** @deprecated use `AchDepositCreate$inboundSchema` instead. */
  export const inboundSchema = AchDepositCreate$inboundSchema;
  /** @deprecated use `AchDepositCreate$outboundSchema` instead. */
  export const outboundSchema = AchDepositCreate$outboundSchema;
  /** @deprecated use `AchDepositCreate$Outbound` instead. */
  export type Outbound = AchDepositCreate$Outbound;
}
