/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  Entry,
  Entry$inboundSchema,
  Entry$Outbound,
  Entry$outboundSchema,
} from "./entry.js";

/**
 * ListEntriesResponse
 */
export type ListEntriesResponse = {
  /**
   * An array of entries, empty if no results are found
   */
  entries?: Array<Entry> | undefined;
  /**
   * The next page token returned by this call. Can be provided in another request to retrieve the subsequent page
   */
  nextPageToken?: string | undefined;
};

/** @internal */
export const ListEntriesResponse$inboundSchema: z.ZodType<
  ListEntriesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  entries: z.array(Entry$inboundSchema).optional(),
  next_page_token: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "next_page_token": "nextPageToken",
  });
});

/** @internal */
export type ListEntriesResponse$Outbound = {
  entries?: Array<Entry$Outbound> | undefined;
  next_page_token?: string | undefined;
};

/** @internal */
export const ListEntriesResponse$outboundSchema: z.ZodType<
  ListEntriesResponse$Outbound,
  z.ZodTypeDef,
  ListEntriesResponse
> = z.object({
  entries: z.array(Entry$outboundSchema).optional(),
  nextPageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    nextPageToken: "next_page_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListEntriesResponse$ {
  /** @deprecated use `ListEntriesResponse$inboundSchema` instead. */
  export const inboundSchema = ListEntriesResponse$inboundSchema;
  /** @deprecated use `ListEntriesResponse$outboundSchema` instead. */
  export const outboundSchema = ListEntriesResponse$outboundSchema;
  /** @deprecated use `ListEntriesResponse$Outbound` instead. */
  export type Outbound = ListEntriesResponse$Outbound;
}
