/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import {
  DecimalCreate,
  DecimalCreate$inboundSchema,
  DecimalCreate$Outbound,
  DecimalCreate$outboundSchema,
} from "./decimalcreate.js";

/**
 * The type of commission value being specified. Only the type of "AMOUNT" is supported.
 */
export enum CommissionCreateType {
  CommissionTypeUnspecified = "COMMISSION_TYPE_UNSPECIFIED",
  Amount = "AMOUNT",
}
/**
 * The type of commission value being specified. Only the type of "AMOUNT" is supported.
 */
export type CommissionCreateTypeOpen = OpenEnum<typeof CommissionCreateType>;

/**
 * A custom commission applied to an order
 */
export type CommissionCreate = {
  /**
   * The type of commission value being specified. Only the type of "AMOUNT" is supported.
   */
  type: CommissionCreateTypeOpen;
  /**
   * A representation of a decimal value, such as 2.5. Clients may convert values into language-native decimal formats, such as Java's [BigDecimal][] or Python's [decimal.Decimal][].
   *
   * @remarks
   *
   *  [BigDecimal]:
   *  https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/math/BigDecimal.html
   *  [decimal.Decimal]: https://docs.python.org/3/library/decimal.html
   */
  value: DecimalCreate;
};

/** @internal */
export const CommissionCreateType$inboundSchema: z.ZodType<
  CommissionCreateTypeOpen,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(CommissionCreateType),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const CommissionCreateType$outboundSchema: z.ZodType<
  CommissionCreateTypeOpen,
  z.ZodTypeDef,
  CommissionCreateTypeOpen
> = z.union([
  z.nativeEnum(CommissionCreateType),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommissionCreateType$ {
  /** @deprecated use `CommissionCreateType$inboundSchema` instead. */
  export const inboundSchema = CommissionCreateType$inboundSchema;
  /** @deprecated use `CommissionCreateType$outboundSchema` instead. */
  export const outboundSchema = CommissionCreateType$outboundSchema;
}

/** @internal */
export const CommissionCreate$inboundSchema: z.ZodType<
  CommissionCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CommissionCreateType$inboundSchema,
  value: DecimalCreate$inboundSchema,
});

/** @internal */
export type CommissionCreate$Outbound = {
  type: string;
  value: DecimalCreate$Outbound;
};

/** @internal */
export const CommissionCreate$outboundSchema: z.ZodType<
  CommissionCreate$Outbound,
  z.ZodTypeDef,
  CommissionCreate
> = z.object({
  type: CommissionCreateType$outboundSchema,
  value: DecimalCreate$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CommissionCreate$ {
  /** @deprecated use `CommissionCreate$inboundSchema` instead. */
  export const inboundSchema = CommissionCreate$inboundSchema;
  /** @deprecated use `CommissionCreate$outboundSchema` instead. */
  export const outboundSchema = CommissionCreate$outboundSchema;
  /** @deprecated use `CommissionCreate$Outbound` instead. */
  export type Outbound = CommissionCreate$Outbound;
}
