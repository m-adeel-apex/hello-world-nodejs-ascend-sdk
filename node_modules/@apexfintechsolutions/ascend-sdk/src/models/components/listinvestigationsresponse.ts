/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  Investigation,
  Investigation$inboundSchema,
  Investigation$Outbound,
  Investigation$outboundSchema,
} from "./investigation.js";

/**
 * ListInvestigationStatesResponse
 */
export type ListInvestigationsResponse = {
  /**
   * List of investigations matching request search criteria
   */
  investigations?: Array<Investigation> | undefined;
  /**
   * The next pagination token in the Search response; an empty value means no more results
   */
  nextPageToken?: string | undefined;
};

/** @internal */
export const ListInvestigationsResponse$inboundSchema: z.ZodType<
  ListInvestigationsResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  investigations: z.array(Investigation$inboundSchema).optional(),
  next_page_token: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "next_page_token": "nextPageToken",
  });
});

/** @internal */
export type ListInvestigationsResponse$Outbound = {
  investigations?: Array<Investigation$Outbound> | undefined;
  next_page_token?: string | undefined;
};

/** @internal */
export const ListInvestigationsResponse$outboundSchema: z.ZodType<
  ListInvestigationsResponse$Outbound,
  z.ZodTypeDef,
  ListInvestigationsResponse
> = z.object({
  investigations: z.array(Investigation$outboundSchema).optional(),
  nextPageToken: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    nextPageToken: "next_page_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListInvestigationsResponse$ {
  /** @deprecated use `ListInvestigationsResponse$inboundSchema` instead. */
  export const inboundSchema = ListInvestigationsResponse$inboundSchema;
  /** @deprecated use `ListInvestigationsResponse$outboundSchema` instead. */
  export const outboundSchema = ListInvestigationsResponse$outboundSchema;
  /** @deprecated use `ListInvestigationsResponse$Outbound` instead. */
  export type Outbound = ListInvestigationsResponse$Outbound;
}
