"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerIdentification$ = exports.CustomerIdentification$outboundSchema = exports.CustomerIdentification$inboundSchema = exports.CheckTypes$ = exports.CheckTypes$outboundSchema = exports.CheckTypes$inboundSchema = exports.CheckTypes = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const customeridentificationresult_js_1 = require("./customeridentificationresult.js");
var CheckTypes;
(function (CheckTypes) {
    CheckTypes["CheckTypeUnspecified"] = "CHECK_TYPE_UNSPECIFIED";
    CheckTypes["Database"] = "DATABASE";
    CheckTypes["Documentary"] = "DOCUMENTARY";
})(CheckTypes || (exports.CheckTypes = CheckTypes = {}));
/** @internal */
exports.CheckTypes$inboundSchema = z
    .union([
    z.nativeEnum(CheckTypes),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.CheckTypes$outboundSchema = z.union([
    z.nativeEnum(CheckTypes),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckTypes$;
(function (CheckTypes$) {
    /** @deprecated use `CheckTypes$inboundSchema` instead. */
    CheckTypes$.inboundSchema = exports.CheckTypes$inboundSchema;
    /** @deprecated use `CheckTypes$outboundSchema` instead. */
    CheckTypes$.outboundSchema = exports.CheckTypes$outboundSchema;
})(CheckTypes$ || (exports.CheckTypes$ = CheckTypes$ = {}));
/** @internal */
exports.CustomerIdentification$inboundSchema = z.object({
    check_types: z.array(exports.CheckTypes$inboundSchema).optional(),
    name: z.string().optional(),
    results: z.array(customeridentificationresult_js_1.CustomerIdentificationResult$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "check_types": "checkTypes",
    });
});
/** @internal */
exports.CustomerIdentification$outboundSchema = z.object({
    checkTypes: z.array(exports.CheckTypes$outboundSchema).optional(),
    name: z.string().optional(),
    results: z.array(customeridentificationresult_js_1.CustomerIdentificationResult$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        checkTypes: "check_types",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerIdentification$;
(function (CustomerIdentification$) {
    /** @deprecated use `CustomerIdentification$inboundSchema` instead. */
    CustomerIdentification$.inboundSchema = exports.CustomerIdentification$inboundSchema;
    /** @deprecated use `CustomerIdentification$outboundSchema` instead. */
    CustomerIdentification$.outboundSchema = exports.CustomerIdentification$outboundSchema;
})(CustomerIdentification$ || (exports.CustomerIdentification$ = CustomerIdentification$ = {}));
//# sourceMappingURL=customeridentification.js.map