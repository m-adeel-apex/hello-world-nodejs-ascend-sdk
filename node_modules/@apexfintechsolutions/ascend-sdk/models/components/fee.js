"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fee$ = exports.Fee$outboundSchema = exports.Fee$inboundSchema = exports.FeeType$ = exports.FeeType$outboundSchema = exports.FeeType$inboundSchema = exports.FeeAmount$ = exports.FeeAmount$outboundSchema = exports.FeeAmount$inboundSchema = exports.FeeType = void 0;
const z = __importStar(require("zod"));
const enums_js_1 = require("../../types/enums.js");
/**
 * The type of fee being assessed
 */
var FeeType;
(function (FeeType) {
    FeeType["FeeTypeUnspecified"] = "FEE_TYPE_UNSPECIFIED";
    FeeType["ClientClearing"] = "CLIENT_CLEARING";
    FeeType["Liquidity"] = "LIQUIDITY";
    FeeType["GeneralPurpose"] = "GENERAL_PURPOSE";
    FeeType["Commission"] = "COMMISSION";
    FeeType["Orf"] = "ORF";
    FeeType["Taf"] = "TAF";
    FeeType["Sec"] = "SEC";
    FeeType["AccountClosing"] = "ACCOUNT_CLOSING";
    FeeType["AccountIra"] = "ACCOUNT_IRA";
    FeeType["AchReturn"] = "ACH_RETURN";
    FeeType["Advisory"] = "ADVISORY";
    FeeType["CheckFee"] = "CHECK_FEE";
    FeeType["Exchange"] = "EXCHANGE";
    FeeType["Management"] = "MANAGEMENT";
    FeeType["Overnight"] = "OVERNIGHT";
    FeeType["Platform"] = "PLATFORM";
    FeeType["Statement"] = "STATEMENT";
    FeeType["StopPayment"] = "STOP_PAYMENT";
    FeeType["WireFee"] = "WIRE_FEE";
    FeeType["Inactivity"] = "INACTIVITY";
    FeeType["AmaService"] = "AMA_SERVICE";
    FeeType["NoticeOfChange"] = "NOTICE_OF_CHANGE";
    FeeType["AccountTransfer"] = "ACCOUNT_TRANSFER";
    FeeType["AgencyProcessing"] = "AGENCY_PROCESSING";
    FeeType["RtpFee"] = "RTP_FEE";
    FeeType["DomesticWireDepositFee"] = "DOMESTIC_WIRE_DEPOSIT_FEE";
    FeeType["DomesticWireWithdrawalFee"] = "DOMESTIC_WIRE_WITHDRAWAL_FEE";
    FeeType["InternationalWireDepositFee"] = "INTERNATIONAL_WIRE_DEPOSIT_FEE";
    FeeType["InternationalWireWithdrawalFee"] = "INTERNATIONAL_WIRE_WITHDRAWAL_FEE";
    FeeType["BrokerFee"] = "BROKER_FEE";
})(FeeType || (exports.FeeType = FeeType = {}));
/** @internal */
exports.FeeAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.FeeAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeeAmount$;
(function (FeeAmount$) {
    /** @deprecated use `FeeAmount$inboundSchema` instead. */
    FeeAmount$.inboundSchema = exports.FeeAmount$inboundSchema;
    /** @deprecated use `FeeAmount$outboundSchema` instead. */
    FeeAmount$.outboundSchema = exports.FeeAmount$outboundSchema;
})(FeeAmount$ || (exports.FeeAmount$ = FeeAmount$ = {}));
/** @internal */
exports.FeeType$inboundSchema = z
    .union([
    z.nativeEnum(FeeType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.FeeType$outboundSchema = z.union([
    z.nativeEnum(FeeType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FeeType$;
(function (FeeType$) {
    /** @deprecated use `FeeType$inboundSchema` instead. */
    FeeType$.inboundSchema = exports.FeeType$inboundSchema;
    /** @deprecated use `FeeType$outboundSchema` instead. */
    FeeType$.outboundSchema = exports.FeeType$outboundSchema;
})(FeeType$ || (exports.FeeType$ = FeeType$ = {}));
/** @internal */
exports.Fee$inboundSchema = z
    .object({
    amount: z.nullable(z.lazy(() => exports.FeeAmount$inboundSchema)).optional(),
    type: exports.FeeType$inboundSchema.optional(),
});
/** @internal */
exports.Fee$outboundSchema = z
    .object({
    amount: z.nullable(z.lazy(() => exports.FeeAmount$outboundSchema)).optional(),
    type: exports.FeeType$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Fee$;
(function (Fee$) {
    /** @deprecated use `Fee$inboundSchema` instead. */
    Fee$.inboundSchema = exports.Fee$inboundSchema;
    /** @deprecated use `Fee$outboundSchema` instead. */
    Fee$.outboundSchema = exports.Fee$outboundSchema;
})(Fee$ || (exports.Fee$ = Fee$ = {}));
//# sourceMappingURL=fee.js.map