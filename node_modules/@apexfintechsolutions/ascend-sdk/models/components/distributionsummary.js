"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributionSummary$ = exports.DistributionSummary$outboundSchema = exports.DistributionSummary$inboundSchema = exports.DistributionSummaryRolloverAmount$ = exports.DistributionSummaryRolloverAmount$outboundSchema = exports.DistributionSummaryRolloverAmount$inboundSchema = exports.RequiredMinimumDistribution$ = exports.RequiredMinimumDistribution$outboundSchema = exports.RequiredMinimumDistribution$inboundSchema = exports.RemainingDistributionRequired$ = exports.RemainingDistributionRequired$outboundSchema = exports.RemainingDistributionRequired$inboundSchema = exports.PriorYearEndAccountBalance$ = exports.PriorYearEndAccountBalance$outboundSchema = exports.PriorYearEndAccountBalance$inboundSchema = exports.LifeExpectancyFactor$ = exports.LifeExpectancyFactor$outboundSchema = exports.LifeExpectancyFactor$inboundSchema = exports.DistributionSummaryAmount$ = exports.DistributionSummaryAmount$outboundSchema = exports.DistributionSummaryAmount$inboundSchema = exports.DistributionSummaryRegularAmount$ = exports.DistributionSummaryRegularAmount$outboundSchema = exports.DistributionSummaryRegularAmount$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
/** @internal */
exports.DistributionSummaryRegularAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.DistributionSummaryRegularAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DistributionSummaryRegularAmount$;
(function (DistributionSummaryRegularAmount$) {
    /** @deprecated use `DistributionSummaryRegularAmount$inboundSchema` instead. */
    DistributionSummaryRegularAmount$.inboundSchema = exports.DistributionSummaryRegularAmount$inboundSchema;
    /** @deprecated use `DistributionSummaryRegularAmount$outboundSchema` instead. */
    DistributionSummaryRegularAmount$.outboundSchema = exports.DistributionSummaryRegularAmount$outboundSchema;
})(DistributionSummaryRegularAmount$ || (exports.DistributionSummaryRegularAmount$ = DistributionSummaryRegularAmount$ = {}));
/** @internal */
exports.DistributionSummaryAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.DistributionSummaryAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DistributionSummaryAmount$;
(function (DistributionSummaryAmount$) {
    /** @deprecated use `DistributionSummaryAmount$inboundSchema` instead. */
    DistributionSummaryAmount$.inboundSchema = exports.DistributionSummaryAmount$inboundSchema;
    /** @deprecated use `DistributionSummaryAmount$outboundSchema` instead. */
    DistributionSummaryAmount$.outboundSchema = exports.DistributionSummaryAmount$outboundSchema;
})(DistributionSummaryAmount$ || (exports.DistributionSummaryAmount$ = DistributionSummaryAmount$ = {}));
/** @internal */
exports.LifeExpectancyFactor$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.LifeExpectancyFactor$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LifeExpectancyFactor$;
(function (LifeExpectancyFactor$) {
    /** @deprecated use `LifeExpectancyFactor$inboundSchema` instead. */
    LifeExpectancyFactor$.inboundSchema = exports.LifeExpectancyFactor$inboundSchema;
    /** @deprecated use `LifeExpectancyFactor$outboundSchema` instead. */
    LifeExpectancyFactor$.outboundSchema = exports.LifeExpectancyFactor$outboundSchema;
})(LifeExpectancyFactor$ || (exports.LifeExpectancyFactor$ = LifeExpectancyFactor$ = {}));
/** @internal */
exports.PriorYearEndAccountBalance$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.PriorYearEndAccountBalance$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PriorYearEndAccountBalance$;
(function (PriorYearEndAccountBalance$) {
    /** @deprecated use `PriorYearEndAccountBalance$inboundSchema` instead. */
    PriorYearEndAccountBalance$.inboundSchema = exports.PriorYearEndAccountBalance$inboundSchema;
    /** @deprecated use `PriorYearEndAccountBalance$outboundSchema` instead. */
    PriorYearEndAccountBalance$.outboundSchema = exports.PriorYearEndAccountBalance$outboundSchema;
})(PriorYearEndAccountBalance$ || (exports.PriorYearEndAccountBalance$ = PriorYearEndAccountBalance$ = {}));
/** @internal */
exports.RemainingDistributionRequired$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RemainingDistributionRequired$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RemainingDistributionRequired$;
(function (RemainingDistributionRequired$) {
    /** @deprecated use `RemainingDistributionRequired$inboundSchema` instead. */
    RemainingDistributionRequired$.inboundSchema = exports.RemainingDistributionRequired$inboundSchema;
    /** @deprecated use `RemainingDistributionRequired$outboundSchema` instead. */
    RemainingDistributionRequired$.outboundSchema = exports.RemainingDistributionRequired$outboundSchema;
})(RemainingDistributionRequired$ || (exports.RemainingDistributionRequired$ = RemainingDistributionRequired$ = {}));
/** @internal */
exports.RequiredMinimumDistribution$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.DistributionSummaryAmount$inboundSchema))
        .optional(),
    life_expectancy_factor: z.nullable(z.lazy(() => exports.LifeExpectancyFactor$inboundSchema)).optional(),
    prior_year_end_account_balance: z.nullable(z.lazy(() => exports.PriorYearEndAccountBalance$inboundSchema)).optional(),
    remaining_distribution_required: z.nullable(z.lazy(() => exports.RemainingDistributionRequired$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "life_expectancy_factor": "lifeExpectancyFactor",
        "prior_year_end_account_balance": "priorYearEndAccountBalance",
        "remaining_distribution_required": "remainingDistributionRequired",
    });
});
/** @internal */
exports.RequiredMinimumDistribution$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.DistributionSummaryAmount$outboundSchema))
        .optional(),
    lifeExpectancyFactor: z.nullable(z.lazy(() => exports.LifeExpectancyFactor$outboundSchema)).optional(),
    priorYearEndAccountBalance: z.nullable(z.lazy(() => exports.PriorYearEndAccountBalance$outboundSchema)).optional(),
    remainingDistributionRequired: z.nullable(z.lazy(() => exports.RemainingDistributionRequired$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        lifeExpectancyFactor: "life_expectancy_factor",
        priorYearEndAccountBalance: "prior_year_end_account_balance",
        remainingDistributionRequired: "remaining_distribution_required",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RequiredMinimumDistribution$;
(function (RequiredMinimumDistribution$) {
    /** @deprecated use `RequiredMinimumDistribution$inboundSchema` instead. */
    RequiredMinimumDistribution$.inboundSchema = exports.RequiredMinimumDistribution$inboundSchema;
    /** @deprecated use `RequiredMinimumDistribution$outboundSchema` instead. */
    RequiredMinimumDistribution$.outboundSchema = exports.RequiredMinimumDistribution$outboundSchema;
})(RequiredMinimumDistribution$ || (exports.RequiredMinimumDistribution$ = RequiredMinimumDistribution$ = {}));
/** @internal */
exports.DistributionSummaryRolloverAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.DistributionSummaryRolloverAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DistributionSummaryRolloverAmount$;
(function (DistributionSummaryRolloverAmount$) {
    /** @deprecated use `DistributionSummaryRolloverAmount$inboundSchema` instead. */
    DistributionSummaryRolloverAmount$.inboundSchema = exports.DistributionSummaryRolloverAmount$inboundSchema;
    /** @deprecated use `DistributionSummaryRolloverAmount$outboundSchema` instead. */
    DistributionSummaryRolloverAmount$.outboundSchema = exports.DistributionSummaryRolloverAmount$outboundSchema;
})(DistributionSummaryRolloverAmount$ || (exports.DistributionSummaryRolloverAmount$ = DistributionSummaryRolloverAmount$ = {}));
/** @internal */
exports.DistributionSummary$inboundSchema = z.object({
    name: z.string().optional(),
    regular_amount: z.nullable(z.lazy(() => exports.DistributionSummaryRegularAmount$inboundSchema)).optional(),
    required_minimum_distribution: z.nullable(z.lazy(() => exports.RequiredMinimumDistribution$inboundSchema)).optional(),
    rollover_amount: z.nullable(z.lazy(() => exports.DistributionSummaryRolloverAmount$inboundSchema)).optional(),
    tax_year: z.number().int().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "regular_amount": "regularAmount",
        "required_minimum_distribution": "requiredMinimumDistribution",
        "rollover_amount": "rolloverAmount",
        "tax_year": "taxYear",
    });
});
/** @internal */
exports.DistributionSummary$outboundSchema = z.object({
    name: z.string().optional(),
    regularAmount: z.nullable(z.lazy(() => exports.DistributionSummaryRegularAmount$outboundSchema)).optional(),
    requiredMinimumDistribution: z.nullable(z.lazy(() => exports.RequiredMinimumDistribution$outboundSchema)).optional(),
    rolloverAmount: z.nullable(z.lazy(() => exports.DistributionSummaryRolloverAmount$outboundSchema)).optional(),
    taxYear: z.number().int().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        regularAmount: "regular_amount",
        requiredMinimumDistribution: "required_minimum_distribution",
        rolloverAmount: "rollover_amount",
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DistributionSummary$;
(function (DistributionSummary$) {
    /** @deprecated use `DistributionSummary$inboundSchema` instead. */
    DistributionSummary$.inboundSchema = exports.DistributionSummary$inboundSchema;
    /** @deprecated use `DistributionSummary$outboundSchema` instead. */
    DistributionSummary$.outboundSchema = exports.DistributionSummary$outboundSchema;
})(DistributionSummary$ || (exports.DistributionSummary$ = DistributionSummary$ = {}));
//# sourceMappingURL=distributionsummary.js.map