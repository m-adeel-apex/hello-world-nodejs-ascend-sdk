"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RebookTradeAllocationResponsePriceAdjustment$outboundSchema = exports.RebookTradeAllocationResponsePriceAdjustment$inboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentType$ = exports.RebookTradeAllocationResponsePriceAdjustmentType$outboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentType$inboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentAmount$ = exports.RebookTradeAllocationResponsePriceAdjustmentAmount$outboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentAmount$inboundSchema = exports.RebookTradeAllocationResponsePrice$ = exports.RebookTradeAllocationResponsePrice$outboundSchema = exports.RebookTradeAllocationResponsePrice$inboundSchema = exports.RebookTradeAllocationResponsePrevailingMarketPrice$ = exports.RebookTradeAllocationResponsePrevailingMarketPrice$outboundSchema = exports.RebookTradeAllocationResponsePrevailingMarketPrice$inboundSchema = exports.RebookTradeAllocationResponseIdentifierType$ = exports.RebookTradeAllocationResponseIdentifierType$outboundSchema = exports.RebookTradeAllocationResponseIdentifierType$inboundSchema = exports.RebookTradeAllocationResponseGrossAmount$ = exports.RebookTradeAllocationResponseGrossAmount$outboundSchema = exports.RebookTradeAllocationResponseGrossAmount$inboundSchema = exports.RebookTradeAllocationResponseCommissionAmount$ = exports.RebookTradeAllocationResponseCommissionAmount$outboundSchema = exports.RebookTradeAllocationResponseCommissionAmount$inboundSchema = exports.RebookTradeAllocationResponseBrokerCapacity$ = exports.RebookTradeAllocationResponseBrokerCapacity$outboundSchema = exports.RebookTradeAllocationResponseBrokerCapacity$inboundSchema = exports.RebookTradeAllocationResponseAssetType$ = exports.RebookTradeAllocationResponseAssetType$outboundSchema = exports.RebookTradeAllocationResponseAssetType$inboundSchema = exports.RebookTradeAllocationResponseAccruedInterestAmount$ = exports.RebookTradeAllocationResponseAccruedInterestAmount$outboundSchema = exports.RebookTradeAllocationResponseAccruedInterestAmount$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued = exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide = exports.RebookTradeAllocationResponseOriginalTradeAllocationState = exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions = exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType = exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType = exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity = exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType = exports.RebookTradeAllocationResponseWhenIssued = exports.RebookTradeAllocationResponseToSide = exports.RebookTradeAllocationResponseState = exports.RebookTradeAllocationResponseSpecialInstructions = exports.RebookTradeAllocationResponseSideModifier = exports.RebookTradeAllocationResponsePriceAdjustmentType = exports.RebookTradeAllocationResponseIdentifierType = exports.RebookTradeAllocationResponseBrokerCapacity = exports.RebookTradeAllocationResponseAssetType = void 0;
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$inboundSchema = exports.NewTradeAllocation$ = exports.NewTradeAllocation$outboundSchema = exports.NewTradeAllocation$inboundSchema = exports.RebookTradeAllocationResponseWhenIssued$ = exports.RebookTradeAllocationResponseWhenIssued$outboundSchema = exports.RebookTradeAllocationResponseWhenIssued$inboundSchema = exports.RebookTradeAllocationResponseToSide$ = exports.RebookTradeAllocationResponseToSide$outboundSchema = exports.RebookTradeAllocationResponseToSide$inboundSchema = exports.RebookTradeAllocationResponseState$ = exports.RebookTradeAllocationResponseState$outboundSchema = exports.RebookTradeAllocationResponseState$inboundSchema = exports.RebookTradeAllocationResponseSpecialInstructions$ = exports.RebookTradeAllocationResponseSpecialInstructions$outboundSchema = exports.RebookTradeAllocationResponseSpecialInstructions$inboundSchema = exports.RebookTradeAllocationResponseSideModifier$ = exports.RebookTradeAllocationResponseSideModifier$outboundSchema = exports.RebookTradeAllocationResponseSideModifier$inboundSchema = exports.RebookTradeAllocationResponseSettlementDate$ = exports.RebookTradeAllocationResponseSettlementDate$outboundSchema = exports.RebookTradeAllocationResponseSettlementDate$inboundSchema = exports.RebookTradeAllocationResponseQuantity$ = exports.RebookTradeAllocationResponseQuantity$outboundSchema = exports.RebookTradeAllocationResponseQuantity$inboundSchema = exports.RebookTradeAllocationResponsePriceAdjustment$ = void 0;
exports.RebookTradeAllocationResponse$ = exports.RebookTradeAllocationResponse$outboundSchema = exports.RebookTradeAllocationResponse$inboundSchema = exports.OriginalTradeAllocation$ = exports.OriginalTradeAllocation$outboundSchema = exports.OriginalTradeAllocation$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationState$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationState$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationState$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$ = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$outboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const bondyield_js_1 = require("./bondyield.js");
const fee_js_1 = require("./fee.js");
const lot_js_1 = require("./lot.js");
/**
 * Type of the asset being traded. Required for SYMBOL and CUSIP.
 */
var RebookTradeAllocationResponseAssetType;
(function (RebookTradeAllocationResponseAssetType) {
    RebookTradeAllocationResponseAssetType["AssetTypeUnspecified"] = "ASSET_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseAssetType["Equity"] = "EQUITY";
    RebookTradeAllocationResponseAssetType["FixedIncome"] = "FIXED_INCOME";
})(RebookTradeAllocationResponseAssetType || (exports.RebookTradeAllocationResponseAssetType = RebookTradeAllocationResponseAssetType = {}));
/**
 * Broker capacity for the trade.
 */
var RebookTradeAllocationResponseBrokerCapacity;
(function (RebookTradeAllocationResponseBrokerCapacity) {
    RebookTradeAllocationResponseBrokerCapacity["CapacityUnspecified"] = "CAPACITY_UNSPECIFIED";
    RebookTradeAllocationResponseBrokerCapacity["Agency"] = "AGENCY";
    RebookTradeAllocationResponseBrokerCapacity["Principal"] = "PRINCIPAL";
    RebookTradeAllocationResponseBrokerCapacity["Mixed"] = "MIXED";
})(RebookTradeAllocationResponseBrokerCapacity || (exports.RebookTradeAllocationResponseBrokerCapacity = RebookTradeAllocationResponseBrokerCapacity = {}));
/**
 * Identifier type for the asset being traded.
 */
var RebookTradeAllocationResponseIdentifierType;
(function (RebookTradeAllocationResponseIdentifierType) {
    RebookTradeAllocationResponseIdentifierType["IdentifierTypeUnspecified"] = "IDENTIFIER_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseIdentifierType["AssetId"] = "ASSET_ID";
    RebookTradeAllocationResponseIdentifierType["Symbol"] = "SYMBOL";
    RebookTradeAllocationResponseIdentifierType["Cusip"] = "CUSIP";
    RebookTradeAllocationResponseIdentifierType["Isin"] = "ISIN";
})(RebookTradeAllocationResponseIdentifierType || (exports.RebookTradeAllocationResponseIdentifierType = RebookTradeAllocationResponseIdentifierType = {}));
/**
 * The type of price adjustment being applied by the broker to the net price of the security.
 */
var RebookTradeAllocationResponsePriceAdjustmentType;
(function (RebookTradeAllocationResponsePriceAdjustmentType) {
    RebookTradeAllocationResponsePriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponsePriceAdjustmentType["Markup"] = "MARKUP";
    RebookTradeAllocationResponsePriceAdjustmentType["Markdown"] = "MARKDOWN";
    RebookTradeAllocationResponsePriceAdjustmentType["GrossCredit"] = "GROSS_CREDIT";
})(RebookTradeAllocationResponsePriceAdjustmentType || (exports.RebookTradeAllocationResponsePriceAdjustmentType = RebookTradeAllocationResponsePriceAdjustmentType = {}));
/**
 * Side modifier for the trade allocation.
 */
var RebookTradeAllocationResponseSideModifier;
(function (RebookTradeAllocationResponseSideModifier) {
    RebookTradeAllocationResponseSideModifier["SideModifierUnspecified"] = "SIDE_MODIFIER_UNSPECIFIED";
    RebookTradeAllocationResponseSideModifier["Short"] = "SHORT";
    RebookTradeAllocationResponseSideModifier["ShortExempt"] = "SHORT_EXEMPT";
    RebookTradeAllocationResponseSideModifier["ShortCover"] = "SHORT_COVER";
    RebookTradeAllocationResponseSideModifier["Open"] = "OPEN";
    RebookTradeAllocationResponseSideModifier["Close"] = "CLOSE";
})(RebookTradeAllocationResponseSideModifier || (exports.RebookTradeAllocationResponseSideModifier = RebookTradeAllocationResponseSideModifier = {}));
var RebookTradeAllocationResponseSpecialInstructions;
(function (RebookTradeAllocationResponseSpecialInstructions) {
    RebookTradeAllocationResponseSpecialInstructions["SpecialInstructionsUnspecified"] = "SPECIAL_INSTRUCTIONS_UNSPECIFIED";
    RebookTradeAllocationResponseSpecialInstructions["Rule144"] = "RULE_144";
    RebookTradeAllocationResponseSpecialInstructions["WithDividend"] = "WITH_DIVIDEND";
    RebookTradeAllocationResponseSpecialInstructions["WithRights"] = "WITH_RIGHTS";
    RebookTradeAllocationResponseSpecialInstructions["CloseContract"] = "CLOSE_CONTRACT";
    RebookTradeAllocationResponseSpecialInstructions["CoverShort"] = "COVER_SHORT";
    RebookTradeAllocationResponseSpecialInstructions["CrossTrade"] = "CROSS_TRADE";
    RebookTradeAllocationResponseSpecialInstructions["OpenContractCovered"] = "OPEN_CONTRACT_COVERED";
    RebookTradeAllocationResponseSpecialInstructions["DiscretionExercised"] = "DISCRETION_EXERCISED";
    RebookTradeAllocationResponseSpecialInstructions["DiscretionNotExercised"] = "DISCRETION_NOT_EXERCISED";
    RebookTradeAllocationResponseSpecialInstructions["OptionAssignment"] = "OPTION_ASSIGNMENT";
    RebookTradeAllocationResponseSpecialInstructions["EmployeeStockOption"] = "EMPLOYEE_STOCK_OPTION";
    RebookTradeAllocationResponseSpecialInstructions["InvestmentBanking"] = "INVESTMENT_BANKING";
    RebookTradeAllocationResponseSpecialInstructions["BrokerDealerOrder"] = "BROKER_DEALER_ORDER";
    RebookTradeAllocationResponseSpecialInstructions["MakeMarketInSecurity"] = "MAKE_MARKET_IN_SECURITY";
    RebookTradeAllocationResponseSpecialInstructions["MakeMarketSolicited"] = "MAKE_MARKET_SOLICITED";
    RebookTradeAllocationResponseSpecialInstructions["MakeMarketUnsolicited"] = "MAKE_MARKET_UNSOLICITED";
    RebookTradeAllocationResponseSpecialInstructions["CustomerDirected"] = "CUSTOMER_DIRECTED";
    RebookTradeAllocationResponseSpecialInstructions["FullyRegistered"] = "FULLY_REGISTERED";
    RebookTradeAllocationResponseSpecialInstructions["OpenContract"] = "OPEN_CONTRACT";
    RebookTradeAllocationResponseSpecialInstructions["OddlotDiffOnRequest"] = "ODDLOT_DIFF_ON_REQUEST";
    RebookTradeAllocationResponseSpecialInstructions["ProspectusEnclosed"] = "PROSPECTUS_ENCLOSED";
    RebookTradeAllocationResponseSpecialInstructions["ProspectusSeparateMail"] = "PROSPECTUS_SEPARATE_MAIL";
    RebookTradeAllocationResponseSpecialInstructions["Solicited"] = "SOLICITED";
    RebookTradeAllocationResponseSpecialInstructions["Unsolicited"] = "UNSOLICITED";
    RebookTradeAllocationResponseSpecialInstructions["XDividend"] = "X_DIVIDEND";
    RebookTradeAllocationResponseSpecialInstructions["ActingAsPrincipal"] = "ACTING_AS_PRINCIPAL";
    RebookTradeAllocationResponseSpecialInstructions["AveragePrice"] = "AVERAGE_PRICE";
    RebookTradeAllocationResponseSpecialInstructions["BrokerLiquidation"] = "BROKER_LIQUIDATION";
    RebookTradeAllocationResponseSpecialInstructions["CouponBooks"] = "COUPON_BOOKS";
    RebookTradeAllocationResponseSpecialInstructions["HasPostageFee"] = "HAS_POSTAGE_FEE";
    RebookTradeAllocationResponseSpecialInstructions["InternetOrder"] = "INTERNET_ORDER";
    RebookTradeAllocationResponseSpecialInstructions["MarginSellout"] = "MARGIN_SELLOUT";
    RebookTradeAllocationResponseSpecialInstructions["MarketMakersAsPrincipal"] = "MARKET_MAKERS_AS_PRINCIPAL";
    RebookTradeAllocationResponseSpecialInstructions["NegativeNetProceed"] = "NEGATIVE_NET_PROCEED";
    RebookTradeAllocationResponseSpecialInstructions["PreFigIndicator"] = "PRE_FIG_INDICATOR";
    RebookTradeAllocationResponseSpecialInstructions["RisklessPrincipalInstruction"] = "RISKLESS_PRINCIPAL_INSTRUCTION";
    RebookTradeAllocationResponseSpecialInstructions["ShortInstruction"] = "SHORT_INSTRUCTION";
    RebookTradeAllocationResponseSpecialInstructions["ThirdMarket"] = "THIRD_MARKET";
    RebookTradeAllocationResponseSpecialInstructions["SuppressMsrbTransmission"] = "SUPPRESS_MSRB_TRANSMISSION";
    RebookTradeAllocationResponseSpecialInstructions["SuppressTraceReporting"] = "SUPPRESS_TRACE_REPORTING";
    RebookTradeAllocationResponseSpecialInstructions["SuppressEmailNotification"] = "SUPPRESS_EMAIL_NOTIFICATION";
    RebookTradeAllocationResponseSpecialInstructions["StockReward"] = "STOCK_REWARD";
    RebookTradeAllocationResponseSpecialInstructions["SuppressRegFees"] = "SUPPRESS_REG_FEES";
    RebookTradeAllocationResponseSpecialInstructions["SuppressSecFee"] = "SUPPRESS_SEC_FEE";
    RebookTradeAllocationResponseSpecialInstructions["SuppressTafFee"] = "SUPPRESS_TAF_FEE";
    RebookTradeAllocationResponseSpecialInstructions["DividendReinvestment"] = "DIVIDEND_REINVESTMENT";
})(RebookTradeAllocationResponseSpecialInstructions || (exports.RebookTradeAllocationResponseSpecialInstructions = RebookTradeAllocationResponseSpecialInstructions = {}));
/**
 * The state that the trade allocation is in.
 */
var RebookTradeAllocationResponseState;
(function (RebookTradeAllocationResponseState) {
    RebookTradeAllocationResponseState["StateUnspecified"] = "STATE_UNSPECIFIED";
    RebookTradeAllocationResponseState["Creating"] = "CREATING";
    RebookTradeAllocationResponseState["Rebooking"] = "REBOOKING";
    RebookTradeAllocationResponseState["Canceling"] = "CANCELING";
    RebookTradeAllocationResponseState["Booked"] = "BOOKED";
    RebookTradeAllocationResponseState["Rebooked"] = "REBOOKED";
    RebookTradeAllocationResponseState["Canceled"] = "CANCELED";
    RebookTradeAllocationResponseState["Failed"] = "FAILED";
})(RebookTradeAllocationResponseState || (exports.RebookTradeAllocationResponseState = RebookTradeAllocationResponseState = {}));
/**
 * Denotes the side of the position going into the to_account_id. A to_side of SELL indicates the position will be allocated with a BUY out of the from_account, and a SELL into the to_account.
 */
var RebookTradeAllocationResponseToSide;
(function (RebookTradeAllocationResponseToSide) {
    RebookTradeAllocationResponseToSide["SideUnspecified"] = "SIDE_UNSPECIFIED";
    RebookTradeAllocationResponseToSide["Buy"] = "BUY";
    RebookTradeAllocationResponseToSide["Sell"] = "SELL";
})(RebookTradeAllocationResponseToSide || (exports.RebookTradeAllocationResponseToSide = RebookTradeAllocationResponseToSide = {}));
/**
 * Denotes that this trade allocation was either when_issued or when_distributed.
 */
var RebookTradeAllocationResponseWhenIssued;
(function (RebookTradeAllocationResponseWhenIssued) {
    RebookTradeAllocationResponseWhenIssued["WhenIssuedTypeUnspecified"] = "WHEN_ISSUED_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseWhenIssued["WhenIssued"] = "WHEN_ISSUED";
    RebookTradeAllocationResponseWhenIssued["WhenDistributed"] = "WHEN_DISTRIBUTED";
})(RebookTradeAllocationResponseWhenIssued || (exports.RebookTradeAllocationResponseWhenIssued = RebookTradeAllocationResponseWhenIssued = {}));
/**
 * Type of the asset being traded. Required for SYMBOL and CUSIP.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationAssetType;
(function (RebookTradeAllocationResponseOriginalTradeAllocationAssetType) {
    RebookTradeAllocationResponseOriginalTradeAllocationAssetType["AssetTypeUnspecified"] = "ASSET_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationAssetType["Equity"] = "EQUITY";
    RebookTradeAllocationResponseOriginalTradeAllocationAssetType["FixedIncome"] = "FIXED_INCOME";
})(RebookTradeAllocationResponseOriginalTradeAllocationAssetType || (exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType = RebookTradeAllocationResponseOriginalTradeAllocationAssetType = {}));
/**
 * Broker capacity for the trade.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity;
(function (RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity) {
    RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity["CapacityUnspecified"] = "CAPACITY_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity["Agency"] = "AGENCY";
    RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity["Principal"] = "PRINCIPAL";
    RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity["Mixed"] = "MIXED";
})(RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity || (exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity = RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity = {}));
/**
 * Identifier type for the asset being traded.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType;
(function (RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType) {
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType["IdentifierTypeUnspecified"] = "IDENTIFIER_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType["AssetId"] = "ASSET_ID";
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType["Symbol"] = "SYMBOL";
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType["Cusip"] = "CUSIP";
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType["Isin"] = "ISIN";
})(RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType || (exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType = RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType = {}));
/**
 * The type of price adjustment being applied by the broker to the net price of the security.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType;
(function (RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType) {
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType["Markup"] = "MARKUP";
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType["Markdown"] = "MARKDOWN";
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType["GrossCredit"] = "GROSS_CREDIT";
})(RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType || (exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType = RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType = {}));
/**
 * Side modifier for the trade allocation.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationSideModifier;
(function (RebookTradeAllocationResponseOriginalTradeAllocationSideModifier) {
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier["SideModifierUnspecified"] = "SIDE_MODIFIER_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier["Short"] = "SHORT";
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier["ShortExempt"] = "SHORT_EXEMPT";
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier["ShortCover"] = "SHORT_COVER";
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier["Open"] = "OPEN";
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier["Close"] = "CLOSE";
})(RebookTradeAllocationResponseOriginalTradeAllocationSideModifier || (exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier = RebookTradeAllocationResponseOriginalTradeAllocationSideModifier = {}));
var RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions;
(function (RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions) {
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SpecialInstructionsUnspecified"] = "SPECIAL_INSTRUCTIONS_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["Rule144"] = "RULE_144";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["WithDividend"] = "WITH_DIVIDEND";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["WithRights"] = "WITH_RIGHTS";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["CloseContract"] = "CLOSE_CONTRACT";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["CoverShort"] = "COVER_SHORT";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["CrossTrade"] = "CROSS_TRADE";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["OpenContractCovered"] = "OPEN_CONTRACT_COVERED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["DiscretionExercised"] = "DISCRETION_EXERCISED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["DiscretionNotExercised"] = "DISCRETION_NOT_EXERCISED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["OptionAssignment"] = "OPTION_ASSIGNMENT";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["EmployeeStockOption"] = "EMPLOYEE_STOCK_OPTION";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["InvestmentBanking"] = "INVESTMENT_BANKING";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["BrokerDealerOrder"] = "BROKER_DEALER_ORDER";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["MakeMarketInSecurity"] = "MAKE_MARKET_IN_SECURITY";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["MakeMarketSolicited"] = "MAKE_MARKET_SOLICITED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["MakeMarketUnsolicited"] = "MAKE_MARKET_UNSOLICITED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["CustomerDirected"] = "CUSTOMER_DIRECTED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["FullyRegistered"] = "FULLY_REGISTERED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["OpenContract"] = "OPEN_CONTRACT";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["OddlotDiffOnRequest"] = "ODDLOT_DIFF_ON_REQUEST";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["ProspectusEnclosed"] = "PROSPECTUS_ENCLOSED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["ProspectusSeparateMail"] = "PROSPECTUS_SEPARATE_MAIL";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["Solicited"] = "SOLICITED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["Unsolicited"] = "UNSOLICITED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["XDividend"] = "X_DIVIDEND";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["ActingAsPrincipal"] = "ACTING_AS_PRINCIPAL";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["AveragePrice"] = "AVERAGE_PRICE";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["BrokerLiquidation"] = "BROKER_LIQUIDATION";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["CouponBooks"] = "COUPON_BOOKS";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["HasPostageFee"] = "HAS_POSTAGE_FEE";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["InternetOrder"] = "INTERNET_ORDER";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["MarginSellout"] = "MARGIN_SELLOUT";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["MarketMakersAsPrincipal"] = "MARKET_MAKERS_AS_PRINCIPAL";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["NegativeNetProceed"] = "NEGATIVE_NET_PROCEED";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["PreFigIndicator"] = "PRE_FIG_INDICATOR";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["RisklessPrincipalInstruction"] = "RISKLESS_PRINCIPAL_INSTRUCTION";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["ShortInstruction"] = "SHORT_INSTRUCTION";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["ThirdMarket"] = "THIRD_MARKET";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SuppressMsrbTransmission"] = "SUPPRESS_MSRB_TRANSMISSION";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SuppressTraceReporting"] = "SUPPRESS_TRACE_REPORTING";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SuppressEmailNotification"] = "SUPPRESS_EMAIL_NOTIFICATION";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["StockReward"] = "STOCK_REWARD";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SuppressRegFees"] = "SUPPRESS_REG_FEES";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SuppressSecFee"] = "SUPPRESS_SEC_FEE";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["SuppressTafFee"] = "SUPPRESS_TAF_FEE";
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions["DividendReinvestment"] = "DIVIDEND_REINVESTMENT";
})(RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions || (exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions = RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions = {}));
/**
 * The state that the trade allocation is in.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationState;
(function (RebookTradeAllocationResponseOriginalTradeAllocationState) {
    RebookTradeAllocationResponseOriginalTradeAllocationState["StateUnspecified"] = "STATE_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Creating"] = "CREATING";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Rebooking"] = "REBOOKING";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Canceling"] = "CANCELING";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Booked"] = "BOOKED";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Rebooked"] = "REBOOKED";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Canceled"] = "CANCELED";
    RebookTradeAllocationResponseOriginalTradeAllocationState["Failed"] = "FAILED";
})(RebookTradeAllocationResponseOriginalTradeAllocationState || (exports.RebookTradeAllocationResponseOriginalTradeAllocationState = RebookTradeAllocationResponseOriginalTradeAllocationState = {}));
/**
 * Denotes the side of the position going into the to_account_id. A to_side of SELL indicates the position will be allocated with a BUY out of the from_account, and a SELL into the to_account.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationToSide;
(function (RebookTradeAllocationResponseOriginalTradeAllocationToSide) {
    RebookTradeAllocationResponseOriginalTradeAllocationToSide["SideUnspecified"] = "SIDE_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationToSide["Buy"] = "BUY";
    RebookTradeAllocationResponseOriginalTradeAllocationToSide["Sell"] = "SELL";
})(RebookTradeAllocationResponseOriginalTradeAllocationToSide || (exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide = RebookTradeAllocationResponseOriginalTradeAllocationToSide = {}));
/**
 * Denotes that this trade allocation was either when_issued or when_distributed.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued;
(function (RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued) {
    RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued["WhenIssuedTypeUnspecified"] = "WHEN_ISSUED_TYPE_UNSPECIFIED";
    RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued["WhenIssued"] = "WHEN_ISSUED";
    RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued["WhenDistributed"] = "WHEN_DISTRIBUTED";
})(RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued || (exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued = RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued = {}));
/** @internal */
exports.RebookTradeAllocationResponseAccruedInterestAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseAccruedInterestAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseAccruedInterestAmount$;
(function (RebookTradeAllocationResponseAccruedInterestAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseAccruedInterestAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseAccruedInterestAmount$.inboundSchema = exports.RebookTradeAllocationResponseAccruedInterestAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseAccruedInterestAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseAccruedInterestAmount$.outboundSchema = exports.RebookTradeAllocationResponseAccruedInterestAmount$outboundSchema;
})(RebookTradeAllocationResponseAccruedInterestAmount$ || (exports.RebookTradeAllocationResponseAccruedInterestAmount$ = RebookTradeAllocationResponseAccruedInterestAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseAssetType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseAssetType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseAssetType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseAssetType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseAssetType$;
(function (RebookTradeAllocationResponseAssetType$) {
    /** @deprecated use `RebookTradeAllocationResponseAssetType$inboundSchema` instead. */
    RebookTradeAllocationResponseAssetType$.inboundSchema = exports.RebookTradeAllocationResponseAssetType$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseAssetType$outboundSchema` instead. */
    RebookTradeAllocationResponseAssetType$.outboundSchema = exports.RebookTradeAllocationResponseAssetType$outboundSchema;
})(RebookTradeAllocationResponseAssetType$ || (exports.RebookTradeAllocationResponseAssetType$ = RebookTradeAllocationResponseAssetType$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseBrokerCapacity),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseBrokerCapacity$;
(function (RebookTradeAllocationResponseBrokerCapacity$) {
    /** @deprecated use `RebookTradeAllocationResponseBrokerCapacity$inboundSchema` instead. */
    RebookTradeAllocationResponseBrokerCapacity$.inboundSchema = exports.RebookTradeAllocationResponseBrokerCapacity$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseBrokerCapacity$outboundSchema` instead. */
    RebookTradeAllocationResponseBrokerCapacity$.outboundSchema = exports.RebookTradeAllocationResponseBrokerCapacity$outboundSchema;
})(RebookTradeAllocationResponseBrokerCapacity$ || (exports.RebookTradeAllocationResponseBrokerCapacity$ = RebookTradeAllocationResponseBrokerCapacity$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseCommissionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseCommissionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseCommissionAmount$;
(function (RebookTradeAllocationResponseCommissionAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseCommissionAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseCommissionAmount$.inboundSchema = exports.RebookTradeAllocationResponseCommissionAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseCommissionAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseCommissionAmount$.outboundSchema = exports.RebookTradeAllocationResponseCommissionAmount$outboundSchema;
})(RebookTradeAllocationResponseCommissionAmount$ || (exports.RebookTradeAllocationResponseCommissionAmount$ = RebookTradeAllocationResponseCommissionAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseGrossAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseGrossAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseGrossAmount$;
(function (RebookTradeAllocationResponseGrossAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseGrossAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseGrossAmount$.inboundSchema = exports.RebookTradeAllocationResponseGrossAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseGrossAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseGrossAmount$.outboundSchema = exports.RebookTradeAllocationResponseGrossAmount$outboundSchema;
})(RebookTradeAllocationResponseGrossAmount$ || (exports.RebookTradeAllocationResponseGrossAmount$ = RebookTradeAllocationResponseGrossAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseIdentifierType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseIdentifierType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseIdentifierType$;
(function (RebookTradeAllocationResponseIdentifierType$) {
    /** @deprecated use `RebookTradeAllocationResponseIdentifierType$inboundSchema` instead. */
    RebookTradeAllocationResponseIdentifierType$.inboundSchema = exports.RebookTradeAllocationResponseIdentifierType$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseIdentifierType$outboundSchema` instead. */
    RebookTradeAllocationResponseIdentifierType$.outboundSchema = exports.RebookTradeAllocationResponseIdentifierType$outboundSchema;
})(RebookTradeAllocationResponseIdentifierType$ || (exports.RebookTradeAllocationResponseIdentifierType$ = RebookTradeAllocationResponseIdentifierType$ = {}));
/** @internal */
exports.RebookTradeAllocationResponsePrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponsePrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponsePrevailingMarketPrice$;
(function (RebookTradeAllocationResponsePrevailingMarketPrice$) {
    /** @deprecated use `RebookTradeAllocationResponsePrevailingMarketPrice$inboundSchema` instead. */
    RebookTradeAllocationResponsePrevailingMarketPrice$.inboundSchema = exports.RebookTradeAllocationResponsePrevailingMarketPrice$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponsePrevailingMarketPrice$outboundSchema` instead. */
    RebookTradeAllocationResponsePrevailingMarketPrice$.outboundSchema = exports.RebookTradeAllocationResponsePrevailingMarketPrice$outboundSchema;
})(RebookTradeAllocationResponsePrevailingMarketPrice$ || (exports.RebookTradeAllocationResponsePrevailingMarketPrice$ = RebookTradeAllocationResponsePrevailingMarketPrice$ = {}));
/** @internal */
exports.RebookTradeAllocationResponsePrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponsePrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponsePrice$;
(function (RebookTradeAllocationResponsePrice$) {
    /** @deprecated use `RebookTradeAllocationResponsePrice$inboundSchema` instead. */
    RebookTradeAllocationResponsePrice$.inboundSchema = exports.RebookTradeAllocationResponsePrice$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponsePrice$outboundSchema` instead. */
    RebookTradeAllocationResponsePrice$.outboundSchema = exports.RebookTradeAllocationResponsePrice$outboundSchema;
})(RebookTradeAllocationResponsePrice$ || (exports.RebookTradeAllocationResponsePrice$ = RebookTradeAllocationResponsePrice$ = {}));
/** @internal */
exports.RebookTradeAllocationResponsePriceAdjustmentAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponsePriceAdjustmentAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponsePriceAdjustmentAmount$;
(function (RebookTradeAllocationResponsePriceAdjustmentAmount$) {
    /** @deprecated use `RebookTradeAllocationResponsePriceAdjustmentAmount$inboundSchema` instead. */
    RebookTradeAllocationResponsePriceAdjustmentAmount$.inboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponsePriceAdjustmentAmount$outboundSchema` instead. */
    RebookTradeAllocationResponsePriceAdjustmentAmount$.outboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentAmount$outboundSchema;
})(RebookTradeAllocationResponsePriceAdjustmentAmount$ || (exports.RebookTradeAllocationResponsePriceAdjustmentAmount$ = RebookTradeAllocationResponsePriceAdjustmentAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponsePriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponsePriceAdjustmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponsePriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponsePriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponsePriceAdjustmentType$;
(function (RebookTradeAllocationResponsePriceAdjustmentType$) {
    /** @deprecated use `RebookTradeAllocationResponsePriceAdjustmentType$inboundSchema` instead. */
    RebookTradeAllocationResponsePriceAdjustmentType$.inboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentType$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponsePriceAdjustmentType$outboundSchema` instead. */
    RebookTradeAllocationResponsePriceAdjustmentType$.outboundSchema = exports.RebookTradeAllocationResponsePriceAdjustmentType$outboundSchema;
})(RebookTradeAllocationResponsePriceAdjustmentType$ || (exports.RebookTradeAllocationResponsePriceAdjustmentType$ = RebookTradeAllocationResponsePriceAdjustmentType$ = {}));
/** @internal */
exports.RebookTradeAllocationResponsePriceAdjustment$inboundSchema = z.object({
    price_adjustment_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePriceAdjustmentAmount$inboundSchema)).optional(),
    price_adjustment_type: exports.RebookTradeAllocationResponsePriceAdjustmentType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
exports.RebookTradeAllocationResponsePriceAdjustment$outboundSchema = z.object({
    priceAdjustmentAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePriceAdjustmentAmount$outboundSchema)).optional(),
    priceAdjustmentType: exports.RebookTradeAllocationResponsePriceAdjustmentType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponsePriceAdjustment$;
(function (RebookTradeAllocationResponsePriceAdjustment$) {
    /** @deprecated use `RebookTradeAllocationResponsePriceAdjustment$inboundSchema` instead. */
    RebookTradeAllocationResponsePriceAdjustment$.inboundSchema = exports.RebookTradeAllocationResponsePriceAdjustment$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponsePriceAdjustment$outboundSchema` instead. */
    RebookTradeAllocationResponsePriceAdjustment$.outboundSchema = exports.RebookTradeAllocationResponsePriceAdjustment$outboundSchema;
})(RebookTradeAllocationResponsePriceAdjustment$ || (exports.RebookTradeAllocationResponsePriceAdjustment$ = RebookTradeAllocationResponsePriceAdjustment$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseQuantity$;
(function (RebookTradeAllocationResponseQuantity$) {
    /** @deprecated use `RebookTradeAllocationResponseQuantity$inboundSchema` instead. */
    RebookTradeAllocationResponseQuantity$.inboundSchema = exports.RebookTradeAllocationResponseQuantity$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseQuantity$outboundSchema` instead. */
    RebookTradeAllocationResponseQuantity$.outboundSchema = exports.RebookTradeAllocationResponseQuantity$outboundSchema;
})(RebookTradeAllocationResponseQuantity$ || (exports.RebookTradeAllocationResponseQuantity$ = RebookTradeAllocationResponseQuantity$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseSettlementDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseSettlementDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseSettlementDate$;
(function (RebookTradeAllocationResponseSettlementDate$) {
    /** @deprecated use `RebookTradeAllocationResponseSettlementDate$inboundSchema` instead. */
    RebookTradeAllocationResponseSettlementDate$.inboundSchema = exports.RebookTradeAllocationResponseSettlementDate$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseSettlementDate$outboundSchema` instead. */
    RebookTradeAllocationResponseSettlementDate$.outboundSchema = exports.RebookTradeAllocationResponseSettlementDate$outboundSchema;
})(RebookTradeAllocationResponseSettlementDate$ || (exports.RebookTradeAllocationResponseSettlementDate$ = RebookTradeAllocationResponseSettlementDate$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseSideModifier$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseSideModifier),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseSideModifier$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseSideModifier),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseSideModifier$;
(function (RebookTradeAllocationResponseSideModifier$) {
    /** @deprecated use `RebookTradeAllocationResponseSideModifier$inboundSchema` instead. */
    RebookTradeAllocationResponseSideModifier$.inboundSchema = exports.RebookTradeAllocationResponseSideModifier$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseSideModifier$outboundSchema` instead. */
    RebookTradeAllocationResponseSideModifier$.outboundSchema = exports.RebookTradeAllocationResponseSideModifier$outboundSchema;
})(RebookTradeAllocationResponseSideModifier$ || (exports.RebookTradeAllocationResponseSideModifier$ = RebookTradeAllocationResponseSideModifier$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseSpecialInstructions$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseSpecialInstructions),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseSpecialInstructions$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseSpecialInstructions),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseSpecialInstructions$;
(function (RebookTradeAllocationResponseSpecialInstructions$) {
    /** @deprecated use `RebookTradeAllocationResponseSpecialInstructions$inboundSchema` instead. */
    RebookTradeAllocationResponseSpecialInstructions$.inboundSchema = exports.RebookTradeAllocationResponseSpecialInstructions$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseSpecialInstructions$outboundSchema` instead. */
    RebookTradeAllocationResponseSpecialInstructions$.outboundSchema = exports.RebookTradeAllocationResponseSpecialInstructions$outboundSchema;
})(RebookTradeAllocationResponseSpecialInstructions$ || (exports.RebookTradeAllocationResponseSpecialInstructions$ = RebookTradeAllocationResponseSpecialInstructions$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseState$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseState$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseState$;
(function (RebookTradeAllocationResponseState$) {
    /** @deprecated use `RebookTradeAllocationResponseState$inboundSchema` instead. */
    RebookTradeAllocationResponseState$.inboundSchema = exports.RebookTradeAllocationResponseState$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseState$outboundSchema` instead. */
    RebookTradeAllocationResponseState$.outboundSchema = exports.RebookTradeAllocationResponseState$outboundSchema;
})(RebookTradeAllocationResponseState$ || (exports.RebookTradeAllocationResponseState$ = RebookTradeAllocationResponseState$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseToSide$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseToSide),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseToSide$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseToSide),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseToSide$;
(function (RebookTradeAllocationResponseToSide$) {
    /** @deprecated use `RebookTradeAllocationResponseToSide$inboundSchema` instead. */
    RebookTradeAllocationResponseToSide$.inboundSchema = exports.RebookTradeAllocationResponseToSide$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseToSide$outboundSchema` instead. */
    RebookTradeAllocationResponseToSide$.outboundSchema = exports.RebookTradeAllocationResponseToSide$outboundSchema;
})(RebookTradeAllocationResponseToSide$ || (exports.RebookTradeAllocationResponseToSide$ = RebookTradeAllocationResponseToSide$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseWhenIssued$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseWhenIssued),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseWhenIssued$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseWhenIssued),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseWhenIssued$;
(function (RebookTradeAllocationResponseWhenIssued$) {
    /** @deprecated use `RebookTradeAllocationResponseWhenIssued$inboundSchema` instead. */
    RebookTradeAllocationResponseWhenIssued$.inboundSchema = exports.RebookTradeAllocationResponseWhenIssued$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseWhenIssued$outboundSchema` instead. */
    RebookTradeAllocationResponseWhenIssued$.outboundSchema = exports.RebookTradeAllocationResponseWhenIssued$outboundSchema;
})(RebookTradeAllocationResponseWhenIssued$ || (exports.RebookTradeAllocationResponseWhenIssued$ = RebookTradeAllocationResponseWhenIssued$ = {}));
/** @internal */
exports.NewTradeAllocation$inboundSchema = z.object({
    accrued_interest_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseAccruedInterestAmount$inboundSchema)).optional(),
    additional_instructions: z.string().optional(),
    asset_type: exports.RebookTradeAllocationResponseAssetType$inboundSchema.optional(),
    bond_yield: z.array(bondyield_js_1.BondYield$inboundSchema).optional(),
    broker_capacity: exports.RebookTradeAllocationResponseBrokerCapacity$inboundSchema
        .optional(),
    client_order_id: z.string().optional(),
    commission_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseCommissionAmount$inboundSchema)).optional(),
    execution_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    fees: z.array(fee_js_1.Fee$inboundSchema).optional(),
    from_account_id: z.string().optional(),
    from_activity_id: z.string().optional(),
    gross_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseGrossAmount$inboundSchema)).optional(),
    identifier: z.string().optional(),
    identifier_type: exports.RebookTradeAllocationResponseIdentifierType$inboundSchema
        .optional(),
    issuing_region_code: z.string().optional(),
    lot_matching_instructions: z.array(lot_js_1.Lot$inboundSchema).optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePrevailingMarketPrice$inboundSchema)).optional(),
    price: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePrice$inboundSchema)).optional(),
    price_adjustment: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePriceAdjustment$inboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseQuantity$inboundSchema)).optional(),
    settlement_date: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseSettlementDate$inboundSchema)).optional(),
    side_modifier: exports.RebookTradeAllocationResponseSideModifier$inboundSchema
        .optional(),
    source_application: z.string().optional(),
    special_instructions: z.array(exports.RebookTradeAllocationResponseSpecialInstructions$inboundSchema).optional(),
    state: exports.RebookTradeAllocationResponseState$inboundSchema.optional(),
    to_account_id: z.string().optional(),
    to_activity_id: z.string().optional(),
    to_side: exports.RebookTradeAllocationResponseToSide$inboundSchema.optional(),
    trade_allocation_id: z.string().optional(),
    when_issued: exports.RebookTradeAllocationResponseWhenIssued$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accrued_interest_amount": "accruedInterestAmount",
        "additional_instructions": "additionalInstructions",
        "asset_type": "assetType",
        "bond_yield": "bondYield",
        "broker_capacity": "brokerCapacity",
        "client_order_id": "clientOrderId",
        "commission_amount": "commissionAmount",
        "execution_time": "executionTime",
        "from_account_id": "fromAccountId",
        "from_activity_id": "fromActivityId",
        "gross_amount": "grossAmount",
        "identifier_type": "identifierType",
        "issuing_region_code": "issuingRegionCode",
        "lot_matching_instructions": "lotMatchingInstructions",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment": "priceAdjustment",
        "settlement_date": "settlementDate",
        "side_modifier": "sideModifier",
        "source_application": "sourceApplication",
        "special_instructions": "specialInstructions",
        "to_account_id": "toAccountId",
        "to_activity_id": "toActivityId",
        "to_side": "toSide",
        "trade_allocation_id": "tradeAllocationId",
        "when_issued": "whenIssued",
    });
});
/** @internal */
exports.NewTradeAllocation$outboundSchema = z.object({
    accruedInterestAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseAccruedInterestAmount$outboundSchema)).optional(),
    additionalInstructions: z.string().optional(),
    assetType: exports.RebookTradeAllocationResponseAssetType$outboundSchema.optional(),
    bondYield: z.array(bondyield_js_1.BondYield$outboundSchema).optional(),
    brokerCapacity: exports.RebookTradeAllocationResponseBrokerCapacity$outboundSchema
        .optional(),
    clientOrderId: z.string().optional(),
    commissionAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseCommissionAmount$outboundSchema)).optional(),
    executionTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    fees: z.array(fee_js_1.Fee$outboundSchema).optional(),
    fromAccountId: z.string().optional(),
    fromActivityId: z.string().optional(),
    grossAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseGrossAmount$outboundSchema)).optional(),
    identifier: z.string().optional(),
    identifierType: exports.RebookTradeAllocationResponseIdentifierType$outboundSchema
        .optional(),
    issuingRegionCode: z.string().optional(),
    lotMatchingInstructions: z.array(lot_js_1.Lot$outboundSchema).optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePrevailingMarketPrice$outboundSchema)).optional(),
    price: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePrice$outboundSchema)).optional(),
    priceAdjustment: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponsePriceAdjustment$outboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseQuantity$outboundSchema)).optional(),
    settlementDate: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseSettlementDate$outboundSchema)).optional(),
    sideModifier: exports.RebookTradeAllocationResponseSideModifier$outboundSchema
        .optional(),
    sourceApplication: z.string().optional(),
    specialInstructions: z.array(exports.RebookTradeAllocationResponseSpecialInstructions$outboundSchema).optional(),
    state: exports.RebookTradeAllocationResponseState$outboundSchema.optional(),
    toAccountId: z.string().optional(),
    toActivityId: z.string().optional(),
    toSide: exports.RebookTradeAllocationResponseToSide$outboundSchema.optional(),
    tradeAllocationId: z.string().optional(),
    whenIssued: exports.RebookTradeAllocationResponseWhenIssued$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accruedInterestAmount: "accrued_interest_amount",
        additionalInstructions: "additional_instructions",
        assetType: "asset_type",
        bondYield: "bond_yield",
        brokerCapacity: "broker_capacity",
        clientOrderId: "client_order_id",
        commissionAmount: "commission_amount",
        executionTime: "execution_time",
        fromAccountId: "from_account_id",
        fromActivityId: "from_activity_id",
        grossAmount: "gross_amount",
        identifierType: "identifier_type",
        issuingRegionCode: "issuing_region_code",
        lotMatchingInstructions: "lot_matching_instructions",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustment: "price_adjustment",
        settlementDate: "settlement_date",
        sideModifier: "side_modifier",
        sourceApplication: "source_application",
        specialInstructions: "special_instructions",
        toAccountId: "to_account_id",
        toActivityId: "to_activity_id",
        toSide: "to_side",
        tradeAllocationId: "trade_allocation_id",
        whenIssued: "when_issued",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewTradeAllocation$;
(function (NewTradeAllocation$) {
    /** @deprecated use `NewTradeAllocation$inboundSchema` instead. */
    NewTradeAllocation$.inboundSchema = exports.NewTradeAllocation$inboundSchema;
    /** @deprecated use `NewTradeAllocation$outboundSchema` instead. */
    NewTradeAllocation$.outboundSchema = exports.NewTradeAllocation$outboundSchema;
})(NewTradeAllocation$ || (exports.NewTradeAllocation$ = NewTradeAllocation$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$ = RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationAssetType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationAssetType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationAssetType$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationAssetType$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationAssetType$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationAssetType$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationAssetType$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationAssetType$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationAssetType$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$ = RebookTradeAllocationResponseOriginalTradeAllocationAssetType$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$ = RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$ = RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$ = RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$ = RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$ = RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationPrice$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationPrice$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPrice$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPrice$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPrice$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPrice$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationPrice$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$ = RebookTradeAllocationResponseOriginalTradeAllocationPrice$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$ = RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$ = RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$inboundSchema = z.object({
    price_adjustment_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$inboundSchema)).optional(),
    price_adjustment_type: exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$outboundSchema = z.object({
    priceAdjustmentAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentAmount$outboundSchema)).optional(),
    priceAdjustmentType: exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustmentType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$ = RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationQuantity$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationQuantity$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationQuantity$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationQuantity$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationQuantity$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationQuantity$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationQuantity$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$ = RebookTradeAllocationResponseOriginalTradeAllocationQuantity$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$ = RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationSideModifier),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationSideModifier),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$ = RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$ = RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationState$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationState$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationState$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationState$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationState$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationState$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationState$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationState$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationState$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationState$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationState$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationState$ = RebookTradeAllocationResponseOriginalTradeAllocationState$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationToSide),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationToSide),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationToSide$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationToSide$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationToSide$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationToSide$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationToSide$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationToSide$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationToSide$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$ = RebookTradeAllocationResponseOriginalTradeAllocationToSide$ = {}));
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$outboundSchema = z.union([
    z.nativeEnum(RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$;
(function (RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$) {
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$inboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$.inboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$outboundSchema` instead. */
    RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$.outboundSchema = exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$outboundSchema;
})(RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$ || (exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$ = RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$ = {}));
/** @internal */
exports.OriginalTradeAllocation$inboundSchema = z.object({
    accrued_interest_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$inboundSchema)).optional(),
    additional_instructions: z.string().optional(),
    asset_type: exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$inboundSchema
        .optional(),
    bond_yield: z.array(bondyield_js_1.BondYield$inboundSchema).optional(),
    broker_capacity: exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$inboundSchema
        .optional(),
    client_order_id: z.string().optional(),
    commission_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$inboundSchema)).optional(),
    execution_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    fees: z.array(fee_js_1.Fee$inboundSchema).optional(),
    from_account_id: z.string().optional(),
    from_activity_id: z.string().optional(),
    gross_amount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$inboundSchema)).optional(),
    identifier: z.string().optional(),
    identifier_type: exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$inboundSchema
        .optional(),
    issuing_region_code: z.string().optional(),
    lot_matching_instructions: z.array(lot_js_1.Lot$inboundSchema).optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$inboundSchema)).optional(),
    price: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$inboundSchema)).optional(),
    price_adjustment: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$inboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$inboundSchema)).optional(),
    settlement_date: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$inboundSchema)).optional(),
    side_modifier: exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$inboundSchema
        .optional(),
    source_application: z.string().optional(),
    special_instructions: z.array(exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$inboundSchema).optional(),
    state: exports.RebookTradeAllocationResponseOriginalTradeAllocationState$inboundSchema
        .optional(),
    to_account_id: z.string().optional(),
    to_activity_id: z.string().optional(),
    to_side: exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$inboundSchema
        .optional(),
    trade_allocation_id: z.string().optional(),
    when_issued: exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accrued_interest_amount": "accruedInterestAmount",
        "additional_instructions": "additionalInstructions",
        "asset_type": "assetType",
        "bond_yield": "bondYield",
        "broker_capacity": "brokerCapacity",
        "client_order_id": "clientOrderId",
        "commission_amount": "commissionAmount",
        "execution_time": "executionTime",
        "from_account_id": "fromAccountId",
        "from_activity_id": "fromActivityId",
        "gross_amount": "grossAmount",
        "identifier_type": "identifierType",
        "issuing_region_code": "issuingRegionCode",
        "lot_matching_instructions": "lotMatchingInstructions",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment": "priceAdjustment",
        "settlement_date": "settlementDate",
        "side_modifier": "sideModifier",
        "source_application": "sourceApplication",
        "special_instructions": "specialInstructions",
        "to_account_id": "toAccountId",
        "to_activity_id": "toActivityId",
        "to_side": "toSide",
        "trade_allocation_id": "tradeAllocationId",
        "when_issued": "whenIssued",
    });
});
/** @internal */
exports.OriginalTradeAllocation$outboundSchema = z.object({
    accruedInterestAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationAccruedInterestAmount$outboundSchema)).optional(),
    additionalInstructions: z.string().optional(),
    assetType: exports.RebookTradeAllocationResponseOriginalTradeAllocationAssetType$outboundSchema
        .optional(),
    bondYield: z.array(bondyield_js_1.BondYield$outboundSchema).optional(),
    brokerCapacity: exports.RebookTradeAllocationResponseOriginalTradeAllocationBrokerCapacity$outboundSchema
        .optional(),
    clientOrderId: z.string().optional(),
    commissionAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationCommissionAmount$outboundSchema)).optional(),
    executionTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    fees: z.array(fee_js_1.Fee$outboundSchema).optional(),
    fromAccountId: z.string().optional(),
    fromActivityId: z.string().optional(),
    grossAmount: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationGrossAmount$outboundSchema)).optional(),
    identifier: z.string().optional(),
    identifierType: exports.RebookTradeAllocationResponseOriginalTradeAllocationIdentifierType$outboundSchema
        .optional(),
    issuingRegionCode: z.string().optional(),
    lotMatchingInstructions: z.array(lot_js_1.Lot$outboundSchema).optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPrevailingMarketPrice$outboundSchema)).optional(),
    price: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPrice$outboundSchema)).optional(),
    priceAdjustment: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationPriceAdjustment$outboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationQuantity$outboundSchema)).optional(),
    settlementDate: z.nullable(z.lazy(() => exports.RebookTradeAllocationResponseOriginalTradeAllocationSettlementDate$outboundSchema)).optional(),
    sideModifier: exports.RebookTradeAllocationResponseOriginalTradeAllocationSideModifier$outboundSchema
        .optional(),
    sourceApplication: z.string().optional(),
    specialInstructions: z.array(exports.RebookTradeAllocationResponseOriginalTradeAllocationSpecialInstructions$outboundSchema).optional(),
    state: exports.RebookTradeAllocationResponseOriginalTradeAllocationState$outboundSchema
        .optional(),
    toAccountId: z.string().optional(),
    toActivityId: z.string().optional(),
    toSide: exports.RebookTradeAllocationResponseOriginalTradeAllocationToSide$outboundSchema
        .optional(),
    tradeAllocationId: z.string().optional(),
    whenIssued: exports.RebookTradeAllocationResponseOriginalTradeAllocationWhenIssued$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accruedInterestAmount: "accrued_interest_amount",
        additionalInstructions: "additional_instructions",
        assetType: "asset_type",
        bondYield: "bond_yield",
        brokerCapacity: "broker_capacity",
        clientOrderId: "client_order_id",
        commissionAmount: "commission_amount",
        executionTime: "execution_time",
        fromAccountId: "from_account_id",
        fromActivityId: "from_activity_id",
        grossAmount: "gross_amount",
        identifierType: "identifier_type",
        issuingRegionCode: "issuing_region_code",
        lotMatchingInstructions: "lot_matching_instructions",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustment: "price_adjustment",
        settlementDate: "settlement_date",
        sideModifier: "side_modifier",
        sourceApplication: "source_application",
        specialInstructions: "special_instructions",
        toAccountId: "to_account_id",
        toActivityId: "to_activity_id",
        toSide: "to_side",
        tradeAllocationId: "trade_allocation_id",
        whenIssued: "when_issued",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OriginalTradeAllocation$;
(function (OriginalTradeAllocation$) {
    /** @deprecated use `OriginalTradeAllocation$inboundSchema` instead. */
    OriginalTradeAllocation$.inboundSchema = exports.OriginalTradeAllocation$inboundSchema;
    /** @deprecated use `OriginalTradeAllocation$outboundSchema` instead. */
    OriginalTradeAllocation$.outboundSchema = exports.OriginalTradeAllocation$outboundSchema;
})(OriginalTradeAllocation$ || (exports.OriginalTradeAllocation$ = OriginalTradeAllocation$ = {}));
/** @internal */
exports.RebookTradeAllocationResponse$inboundSchema = z.object({
    new_trade_allocation: z.nullable(z.lazy(() => exports.NewTradeAllocation$inboundSchema)).optional(),
    original_trade_allocation: z.nullable(z.lazy(() => exports.OriginalTradeAllocation$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "new_trade_allocation": "newTradeAllocation",
        "original_trade_allocation": "originalTradeAllocation",
    });
});
/** @internal */
exports.RebookTradeAllocationResponse$outboundSchema = z.object({
    newTradeAllocation: z.nullable(z.lazy(() => exports.NewTradeAllocation$outboundSchema)).optional(),
    originalTradeAllocation: z.nullable(z.lazy(() => exports.OriginalTradeAllocation$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        newTradeAllocation: "new_trade_allocation",
        originalTradeAllocation: "original_trade_allocation",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeAllocationResponse$;
(function (RebookTradeAllocationResponse$) {
    /** @deprecated use `RebookTradeAllocationResponse$inboundSchema` instead. */
    RebookTradeAllocationResponse$.inboundSchema = exports.RebookTradeAllocationResponse$inboundSchema;
    /** @deprecated use `RebookTradeAllocationResponse$outboundSchema` instead. */
    RebookTradeAllocationResponse$.outboundSchema = exports.RebookTradeAllocationResponse$outboundSchema;
})(RebookTradeAllocationResponse$ || (exports.RebookTradeAllocationResponse$ = RebookTradeAllocationResponse$ = {}));
//# sourceMappingURL=rebooktradeallocationresponse.js.map