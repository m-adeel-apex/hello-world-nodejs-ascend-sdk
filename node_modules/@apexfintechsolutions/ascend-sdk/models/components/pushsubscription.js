"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PushSubscription$ = exports.PushSubscription$outboundSchema = exports.PushSubscription$inboundSchema = exports.State$ = exports.State$outboundSchema = exports.State$inboundSchema = exports.HttpCallback$ = exports.HttpCallback$outboundSchema = exports.HttpCallback$inboundSchema = exports.State = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The current status of the subscription
 */
var State;
(function (State) {
    State["PushSubscriptionStateUnspecified"] = "PUSH_SUBSCRIPTION_STATE_UNSPECIFIED";
    State["Creating"] = "CREATING";
    State["Active"] = "ACTIVE";
    State["Updating"] = "UPDATING";
    State["Deleting"] = "DELETING";
})(State || (exports.State = State = {}));
/** @internal */
exports.HttpCallback$inboundSchema = z.object({
    timeout_seconds: z.number().int().optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "timeout_seconds": "timeoutSeconds",
    });
});
/** @internal */
exports.HttpCallback$outboundSchema = z.object({
    timeoutSeconds: z.number().int().optional(),
    url: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        timeoutSeconds: "timeout_seconds",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var HttpCallback$;
(function (HttpCallback$) {
    /** @deprecated use `HttpCallback$inboundSchema` instead. */
    HttpCallback$.inboundSchema = exports.HttpCallback$inboundSchema;
    /** @deprecated use `HttpCallback$outboundSchema` instead. */
    HttpCallback$.outboundSchema = exports.HttpCallback$outboundSchema;
})(HttpCallback$ || (exports.HttpCallback$ = HttpCallback$ = {}));
/** @internal */
exports.State$inboundSchema = z
    .union([
    z.nativeEnum(State),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.State$outboundSchema = z.union([
    z.nativeEnum(State),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var State$;
(function (State$) {
    /** @deprecated use `State$inboundSchema` instead. */
    State$.inboundSchema = exports.State$inboundSchema;
    /** @deprecated use `State$outboundSchema` instead. */
    State$.outboundSchema = exports.State$outboundSchema;
})(State$ || (exports.State$ = State$ = {}));
/** @internal */
exports.PushSubscription$inboundSchema = z.object({
    client_id: z.string().optional(),
    correspondent_id: z.string().optional(),
    display_name: z.string().optional(),
    event_types: z.array(z.string()).optional(),
    http_callback: z.nullable(z.lazy(() => exports.HttpCallback$inboundSchema))
        .optional(),
    name: z.string().optional(),
    state: exports.State$inboundSchema.optional(),
    subscription_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "client_id": "clientId",
        "correspondent_id": "correspondentId",
        "display_name": "displayName",
        "event_types": "eventTypes",
        "http_callback": "httpCallback",
        "subscription_id": "subscriptionId",
    });
});
/** @internal */
exports.PushSubscription$outboundSchema = z.object({
    clientId: z.string().optional(),
    correspondentId: z.string().optional(),
    displayName: z.string().optional(),
    eventTypes: z.array(z.string()).optional(),
    httpCallback: z.nullable(z.lazy(() => exports.HttpCallback$outboundSchema))
        .optional(),
    name: z.string().optional(),
    state: exports.State$outboundSchema.optional(),
    subscriptionId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        clientId: "client_id",
        correspondentId: "correspondent_id",
        displayName: "display_name",
        eventTypes: "event_types",
        httpCallback: "http_callback",
        subscriptionId: "subscription_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PushSubscription$;
(function (PushSubscription$) {
    /** @deprecated use `PushSubscription$inboundSchema` instead. */
    PushSubscription$.inboundSchema = exports.PushSubscription$inboundSchema;
    /** @deprecated use `PushSubscription$outboundSchema` instead. */
    PushSubscription$.outboundSchema = exports.PushSubscription$outboundSchema;
})(PushSubscription$ || (exports.PushSubscription$ = PushSubscription$ = {}));
//# sourceMappingURL=pushsubscription.js.map