"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WatchlistItem$ = exports.WatchlistItem$outboundSchema = exports.WatchlistItem$inboundSchema = exports.DowJonesDetails$ = exports.DowJonesDetails$outboundSchema = exports.DowJonesDetails$inboundSchema = exports.LastChangedDate$ = exports.LastChangedDate$outboundSchema = exports.LastChangedDate$inboundSchema = exports.DndbDetails$ = exports.DndbDetails$outboundSchema = exports.DndbDetails$inboundSchema = exports.EndDate$ = exports.EndDate$outboundSchema = exports.EndDate$inboundSchema = exports.Dob$ = exports.Dob$outboundSchema = exports.Dob$inboundSchema = exports.CreatedDate$ = exports.CreatedDate$outboundSchema = exports.CreatedDate$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const addressdetail_js_1 = require("./addressdetail.js");
const countrydetail_js_1 = require("./countrydetail.js");
const descriptiondetail_js_1 = require("./descriptiondetail.js");
const dowjonesdate_js_1 = require("./dowjonesdate.js");
const identificationdetail_js_1 = require("./identificationdetail.js");
const namedetail_js_1 = require("./namedetail.js");
const relatedprofile_js_1 = require("./relatedprofile.js");
const roledetail_js_1 = require("./roledetail.js");
const sanctionslistdetail_js_1 = require("./sanctionslistdetail.js");
/** @internal */
exports.CreatedDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.CreatedDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CreatedDate$;
(function (CreatedDate$) {
    /** @deprecated use `CreatedDate$inboundSchema` instead. */
    CreatedDate$.inboundSchema = exports.CreatedDate$inboundSchema;
    /** @deprecated use `CreatedDate$outboundSchema` instead. */
    CreatedDate$.outboundSchema = exports.CreatedDate$outboundSchema;
})(CreatedDate$ || (exports.CreatedDate$ = CreatedDate$ = {}));
/** @internal */
exports.Dob$inboundSchema = z
    .object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.Dob$outboundSchema = z
    .object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Dob$;
(function (Dob$) {
    /** @deprecated use `Dob$inboundSchema` instead. */
    Dob$.inboundSchema = exports.Dob$inboundSchema;
    /** @deprecated use `Dob$outboundSchema` instead. */
    Dob$.outboundSchema = exports.Dob$outboundSchema;
})(Dob$ || (exports.Dob$ = Dob$ = {}));
/** @internal */
exports.EndDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.EndDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EndDate$;
(function (EndDate$) {
    /** @deprecated use `EndDate$inboundSchema` instead. */
    EndDate$.inboundSchema = exports.EndDate$inboundSchema;
    /** @deprecated use `EndDate$outboundSchema` instead. */
    EndDate$.outboundSchema = exports.EndDate$outboundSchema;
})(EndDate$ || (exports.EndDate$ = EndDate$ = {}));
/** @internal */
exports.DndbDetails$inboundSchema = z.object({
    business_nm: z.string().optional(),
    comments: z.string().optional(),
    create_user: z.string().optional(),
    created_date: z.nullable(z.lazy(() => exports.CreatedDate$inboundSchema)).optional(),
    dob: z.nullable(z.lazy(() => exports.Dob$inboundSchema)).optional(),
    email: z.string().optional(),
    end_date: z.nullable(z.lazy(() => exports.EndDate$inboundSchema)).optional(),
    first_nm: z.string().optional(),
    id: z.number().int().optional(),
    last_nm: z.string().optional(),
    middle_nm: z.string().optional(),
    ssn: z.string().optional(),
    telephone: z.string().optional(),
    tin: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "business_nm": "businessNm",
        "create_user": "createUser",
        "created_date": "createdDate",
        "end_date": "endDate",
        "first_nm": "firstNm",
        "last_nm": "lastNm",
        "middle_nm": "middleNm",
    });
});
/** @internal */
exports.DndbDetails$outboundSchema = z.object({
    businessNm: z.string().optional(),
    comments: z.string().optional(),
    createUser: z.string().optional(),
    createdDate: z.nullable(z.lazy(() => exports.CreatedDate$outboundSchema)).optional(),
    dob: z.nullable(z.lazy(() => exports.Dob$outboundSchema)).optional(),
    email: z.string().optional(),
    endDate: z.nullable(z.lazy(() => exports.EndDate$outboundSchema)).optional(),
    firstNm: z.string().optional(),
    id: z.number().int().optional(),
    lastNm: z.string().optional(),
    middleNm: z.string().optional(),
    ssn: z.string().optional(),
    telephone: z.string().optional(),
    tin: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        businessNm: "business_nm",
        createUser: "create_user",
        createdDate: "created_date",
        endDate: "end_date",
        firstNm: "first_nm",
        lastNm: "last_nm",
        middleNm: "middle_nm",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DndbDetails$;
(function (DndbDetails$) {
    /** @deprecated use `DndbDetails$inboundSchema` instead. */
    DndbDetails$.inboundSchema = exports.DndbDetails$inboundSchema;
    /** @deprecated use `DndbDetails$outboundSchema` instead. */
    DndbDetails$.outboundSchema = exports.DndbDetails$outboundSchema;
})(DndbDetails$ || (exports.DndbDetails$ = DndbDetails$ = {}));
/** @internal */
exports.LastChangedDate$inboundSchema = z.object({
    day: z.string().optional(),
    month: z.string().optional(),
    year: z.string().optional(),
});
/** @internal */
exports.LastChangedDate$outboundSchema = z.object({
    day: z.string().optional(),
    month: z.string().optional(),
    year: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LastChangedDate$;
(function (LastChangedDate$) {
    /** @deprecated use `LastChangedDate$inboundSchema` instead. */
    LastChangedDate$.inboundSchema = exports.LastChangedDate$inboundSchema;
    /** @deprecated use `LastChangedDate$outboundSchema` instead. */
    LastChangedDate$.outboundSchema = exports.LastChangedDate$outboundSchema;
})(LastChangedDate$ || (exports.LastChangedDate$ = LastChangedDate$ = {}));
/** @internal */
exports.DowJonesDetails$inboundSchema = z.object({
    active_status: z.string().optional(),
    address_details: z.array(addressdetail_js_1.AddressDetail$inboundSchema).optional(),
    birth_dates: z.array(dowjonesdate_js_1.DowJonesDate$inboundSchema).optional(),
    birth_places: z.array(z.string()).optional(),
    country_details: z.array(countrydetail_js_1.CountryDetail$inboundSchema).optional(),
    deceased: z.string().optional(),
    deceased_dates: z.array(dowjonesdate_js_1.DowJonesDate$inboundSchema).optional(),
    description_details: z.array(descriptiondetail_js_1.DescriptionDetail$inboundSchema).optional(),
    dow_jones_person_id: z.number().int().optional(),
    gender: z.string().optional(),
    identifications: z.array(identificationdetail_js_1.IdentificationDetail$inboundSchema).optional(),
    images: z.array(z.string()).optional(),
    last_changed_date: z.nullable(z.lazy(() => exports.LastChangedDate$inboundSchema))
        .optional(),
    name_details: z.array(namedetail_js_1.NameDetail$inboundSchema).optional(),
    profile_notes: z.string().optional(),
    related_profiles: z.array(relatedprofile_js_1.RelatedProfile$inboundSchema).optional(),
    role_details: z.array(roledetail_js_1.RoleDetail$inboundSchema).optional(),
    sanctions_list_details: z.array(sanctionslistdetail_js_1.SanctionsListDetail$inboundSchema).optional(),
    sources: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "active_status": "activeStatus",
        "address_details": "addressDetails",
        "birth_dates": "birthDates",
        "birth_places": "birthPlaces",
        "country_details": "countryDetails",
        "deceased_dates": "deceasedDates",
        "description_details": "descriptionDetails",
        "dow_jones_person_id": "dowJonesPersonId",
        "last_changed_date": "lastChangedDate",
        "name_details": "nameDetails",
        "profile_notes": "profileNotes",
        "related_profiles": "relatedProfiles",
        "role_details": "roleDetails",
        "sanctions_list_details": "sanctionsListDetails",
    });
});
/** @internal */
exports.DowJonesDetails$outboundSchema = z.object({
    activeStatus: z.string().optional(),
    addressDetails: z.array(addressdetail_js_1.AddressDetail$outboundSchema).optional(),
    birthDates: z.array(dowjonesdate_js_1.DowJonesDate$outboundSchema).optional(),
    birthPlaces: z.array(z.string()).optional(),
    countryDetails: z.array(countrydetail_js_1.CountryDetail$outboundSchema).optional(),
    deceased: z.string().optional(),
    deceasedDates: z.array(dowjonesdate_js_1.DowJonesDate$outboundSchema).optional(),
    descriptionDetails: z.array(descriptiondetail_js_1.DescriptionDetail$outboundSchema).optional(),
    dowJonesPersonId: z.number().int().optional(),
    gender: z.string().optional(),
    identifications: z.array(identificationdetail_js_1.IdentificationDetail$outboundSchema).optional(),
    images: z.array(z.string()).optional(),
    lastChangedDate: z.nullable(z.lazy(() => exports.LastChangedDate$outboundSchema))
        .optional(),
    nameDetails: z.array(namedetail_js_1.NameDetail$outboundSchema).optional(),
    profileNotes: z.string().optional(),
    relatedProfiles: z.array(relatedprofile_js_1.RelatedProfile$outboundSchema).optional(),
    roleDetails: z.array(roledetail_js_1.RoleDetail$outboundSchema).optional(),
    sanctionsListDetails: z.array(sanctionslistdetail_js_1.SanctionsListDetail$outboundSchema).optional(),
    sources: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        activeStatus: "active_status",
        addressDetails: "address_details",
        birthDates: "birth_dates",
        birthPlaces: "birth_places",
        countryDetails: "country_details",
        deceasedDates: "deceased_dates",
        descriptionDetails: "description_details",
        dowJonesPersonId: "dow_jones_person_id",
        lastChangedDate: "last_changed_date",
        nameDetails: "name_details",
        profileNotes: "profile_notes",
        relatedProfiles: "related_profiles",
        roleDetails: "role_details",
        sanctionsListDetails: "sanctions_list_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DowJonesDetails$;
(function (DowJonesDetails$) {
    /** @deprecated use `DowJonesDetails$inboundSchema` instead. */
    DowJonesDetails$.inboundSchema = exports.DowJonesDetails$inboundSchema;
    /** @deprecated use `DowJonesDetails$outboundSchema` instead. */
    DowJonesDetails$.outboundSchema = exports.DowJonesDetails$outboundSchema;
})(DowJonesDetails$ || (exports.DowJonesDetails$ = DowJonesDetails$ = {}));
/** @internal */
exports.WatchlistItem$inboundSchema = z.object({
    dndb_details: z.nullable(z.lazy(() => exports.DndbDetails$inboundSchema)).optional(),
    dow_jones_details: z.nullable(z.lazy(() => exports.DowJonesDetails$inboundSchema))
        .optional(),
    name: z.string().optional(),
    watchlist: z.string().optional(),
    watchlist_item: z.number().int().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "dndb_details": "dndbDetails",
        "dow_jones_details": "dowJonesDetails",
        "watchlist_item": "watchlistItem",
    });
});
/** @internal */
exports.WatchlistItem$outboundSchema = z.object({
    dndbDetails: z.nullable(z.lazy(() => exports.DndbDetails$outboundSchema)).optional(),
    dowJonesDetails: z.nullable(z.lazy(() => exports.DowJonesDetails$outboundSchema))
        .optional(),
    name: z.string().optional(),
    watchlist: z.string().optional(),
    watchlistItem: z.number().int().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        dndbDetails: "dndb_details",
        dowJonesDetails: "dow_jones_details",
        watchlistItem: "watchlist_item",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WatchlistItem$;
(function (WatchlistItem$) {
    /** @deprecated use `WatchlistItem$inboundSchema` instead. */
    WatchlistItem$.inboundSchema = exports.WatchlistItem$inboundSchema;
    /** @deprecated use `WatchlistItem$outboundSchema` instead. */
    WatchlistItem$.outboundSchema = exports.WatchlistItem$outboundSchema;
})(WatchlistItem$ || (exports.WatchlistItem$ = WatchlistItem$ = {}));
//# sourceMappingURL=watchlistitem.js.map