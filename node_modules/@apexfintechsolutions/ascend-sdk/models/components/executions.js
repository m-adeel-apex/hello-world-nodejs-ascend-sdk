"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Executions$ = exports.Executions$outboundSchema = exports.Executions$inboundSchema = exports.Quantity$ = exports.Quantity$outboundSchema = exports.Quantity$inboundSchema = exports.PrevailingMarketPrice$ = exports.PrevailingMarketPrice$outboundSchema = exports.PrevailingMarketPrice$inboundSchema = exports.GrossCreditAmount$ = exports.GrossCreditAmount$outboundSchema = exports.GrossCreditAmount$inboundSchema = exports.AccruedInterestAmount$ = exports.AccruedInterestAmount$outboundSchema = exports.AccruedInterestAmount$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const executedprice_js_1 = require("./executedprice.js");
/** @internal */
exports.AccruedInterestAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.AccruedInterestAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AccruedInterestAmount$;
(function (AccruedInterestAmount$) {
    /** @deprecated use `AccruedInterestAmount$inboundSchema` instead. */
    AccruedInterestAmount$.inboundSchema = exports.AccruedInterestAmount$inboundSchema;
    /** @deprecated use `AccruedInterestAmount$outboundSchema` instead. */
    AccruedInterestAmount$.outboundSchema = exports.AccruedInterestAmount$outboundSchema;
})(AccruedInterestAmount$ || (exports.AccruedInterestAmount$ = AccruedInterestAmount$ = {}));
/** @internal */
exports.GrossCreditAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.GrossCreditAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GrossCreditAmount$;
(function (GrossCreditAmount$) {
    /** @deprecated use `GrossCreditAmount$inboundSchema` instead. */
    GrossCreditAmount$.inboundSchema = exports.GrossCreditAmount$inboundSchema;
    /** @deprecated use `GrossCreditAmount$outboundSchema` instead. */
    GrossCreditAmount$.outboundSchema = exports.GrossCreditAmount$outboundSchema;
})(GrossCreditAmount$ || (exports.GrossCreditAmount$ = GrossCreditAmount$ = {}));
/** @internal */
exports.PrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.PrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PrevailingMarketPrice$;
(function (PrevailingMarketPrice$) {
    /** @deprecated use `PrevailingMarketPrice$inboundSchema` instead. */
    PrevailingMarketPrice$.inboundSchema = exports.PrevailingMarketPrice$inboundSchema;
    /** @deprecated use `PrevailingMarketPrice$outboundSchema` instead. */
    PrevailingMarketPrice$.outboundSchema = exports.PrevailingMarketPrice$outboundSchema;
})(PrevailingMarketPrice$ || (exports.PrevailingMarketPrice$ = PrevailingMarketPrice$ = {}));
/** @internal */
exports.Quantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.Quantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Quantity$;
(function (Quantity$) {
    /** @deprecated use `Quantity$inboundSchema` instead. */
    Quantity$.inboundSchema = exports.Quantity$inboundSchema;
    /** @deprecated use `Quantity$outboundSchema` instead. */
    Quantity$.outboundSchema = exports.Quantity$outboundSchema;
})(Quantity$ || (exports.Quantity$ = Quantity$ = {}));
/** @internal */
exports.Executions$inboundSchema = z.object({
    accrued_interest_amount: z.nullable(z.lazy(() => exports.AccruedInterestAmount$inboundSchema)).optional(),
    executed_prices: z.array(executedprice_js_1.ExecutedPrice$inboundSchema).optional(),
    executed_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    gross_credit_amount: z.nullable(z.lazy(() => exports.GrossCreditAmount$inboundSchema))
        .optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.PrevailingMarketPrice$inboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.Quantity$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accrued_interest_amount": "accruedInterestAmount",
        "executed_prices": "executedPrices",
        "executed_time": "executedTime",
        "gross_credit_amount": "grossCreditAmount",
        "prevailing_market_price": "prevailingMarketPrice",
    });
});
/** @internal */
exports.Executions$outboundSchema = z.object({
    accruedInterestAmount: z.nullable(z.lazy(() => exports.AccruedInterestAmount$outboundSchema)).optional(),
    executedPrices: z.array(executedprice_js_1.ExecutedPrice$outboundSchema).optional(),
    executedTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    grossCreditAmount: z.nullable(z.lazy(() => exports.GrossCreditAmount$outboundSchema))
        .optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.PrevailingMarketPrice$outboundSchema)).optional(),
    quantity: z.nullable(z.lazy(() => exports.Quantity$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accruedInterestAmount: "accrued_interest_amount",
        executedPrices: "executed_prices",
        executedTime: "executed_time",
        grossCreditAmount: "gross_credit_amount",
        prevailingMarketPrice: "prevailing_market_price",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Executions$;
(function (Executions$) {
    /** @deprecated use `Executions$inboundSchema` instead. */
    Executions$.inboundSchema = exports.Executions$inboundSchema;
    /** @deprecated use `Executions$outboundSchema` instead. */
    Executions$.outboundSchema = exports.Executions$outboundSchema;
})(Executions$ || (exports.Executions$ = Executions$ = {}));
//# sourceMappingURL=executions.js.map