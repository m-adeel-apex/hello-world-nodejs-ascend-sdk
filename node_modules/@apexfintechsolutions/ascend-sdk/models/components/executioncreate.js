"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExecutionCreate$ = exports.ExecutionCreate$outboundSchema = exports.ExecutionCreate$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const bondyieldcreate_js_1 = require("./bondyieldcreate.js");
const decimalcreate_js_1 = require("./decimalcreate.js");
const priceadjustmentcreate_js_1 = require("./priceadjustmentcreate.js");
/** @internal */
exports.ExecutionCreate$inboundSchema = z.object({
    accrued_interest_amount: decimalcreate_js_1.DecimalCreate$inboundSchema.optional(),
    bond_yield: z.array(bondyieldcreate_js_1.BondYieldCreate$inboundSchema).optional(),
    commission_amount: decimalcreate_js_1.DecimalCreate$inboundSchema.optional(),
    execution_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    external_id: z.string(),
    gross_amount: decimalcreate_js_1.DecimalCreate$inboundSchema.optional(),
    memo: z.string().optional(),
    prevailing_market_price: decimalcreate_js_1.DecimalCreate$inboundSchema.optional(),
    price: decimalcreate_js_1.DecimalCreate$inboundSchema,
    price_adjustment: priceadjustmentcreate_js_1.PriceAdjustmentCreate$inboundSchema.optional(),
    quantity: decimalcreate_js_1.DecimalCreate$inboundSchema,
    street_execution_id: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accrued_interest_amount": "accruedInterestAmount",
        "bond_yield": "bondYield",
        "commission_amount": "commissionAmount",
        "execution_time": "executionTime",
        "external_id": "externalId",
        "gross_amount": "grossAmount",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment": "priceAdjustment",
        "street_execution_id": "streetExecutionId",
    });
});
/** @internal */
exports.ExecutionCreate$outboundSchema = z.object({
    accruedInterestAmount: decimalcreate_js_1.DecimalCreate$outboundSchema.optional(),
    bondYield: z.array(bondyieldcreate_js_1.BondYieldCreate$outboundSchema).optional(),
    commissionAmount: decimalcreate_js_1.DecimalCreate$outboundSchema.optional(),
    executionTime: z.nullable(z.date().transform(v => v.toISOString())),
    externalId: z.string(),
    grossAmount: decimalcreate_js_1.DecimalCreate$outboundSchema.optional(),
    memo: z.string().optional(),
    prevailingMarketPrice: decimalcreate_js_1.DecimalCreate$outboundSchema.optional(),
    price: decimalcreate_js_1.DecimalCreate$outboundSchema,
    priceAdjustment: priceadjustmentcreate_js_1.PriceAdjustmentCreate$outboundSchema.optional(),
    quantity: decimalcreate_js_1.DecimalCreate$outboundSchema,
    streetExecutionId: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accruedInterestAmount: "accrued_interest_amount",
        bondYield: "bond_yield",
        commissionAmount: "commission_amount",
        executionTime: "execution_time",
        externalId: "external_id",
        grossAmount: "gross_amount",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustment: "price_adjustment",
        streetExecutionId: "street_execution_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ExecutionCreate$;
(function (ExecutionCreate$) {
    /** @deprecated use `ExecutionCreate$inboundSchema` instead. */
    ExecutionCreate$.inboundSchema = exports.ExecutionCreate$inboundSchema;
    /** @deprecated use `ExecutionCreate$outboundSchema` instead. */
    ExecutionCreate$.outboundSchema = exports.ExecutionCreate$outboundSchema;
})(ExecutionCreate$ || (exports.ExecutionCreate$ = ExecutionCreate$ = {}));
//# sourceMappingURL=executioncreate.js.map