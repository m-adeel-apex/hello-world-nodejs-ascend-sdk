"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForeignIdentificationCreate$ = exports.ForeignIdentificationCreate$outboundSchema = exports.ForeignIdentificationCreate$inboundSchema = exports.Type$ = exports.Type$outboundSchema = exports.Type$inboundSchema = exports.Type = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const datecreate_js_1 = require("./datecreate.js");
/**
 * Identification type
 */
var Type;
(function (Type) {
    Type["IdentificationTypeUnspecified"] = "IDENTIFICATION_TYPE_UNSPECIFIED";
    Type["Passport"] = "PASSPORT";
    Type["NationalId"] = "NATIONAL_ID";
    Type["DriversLicense"] = "DRIVERS_LICENSE";
})(Type || (exports.Type = Type = {}));
/** @internal */
exports.Type$inboundSchema = z
    .union([
    z.nativeEnum(Type),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.Type$outboundSchema = z.union([
    z.nativeEnum(Type),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Type$;
(function (Type$) {
    /** @deprecated use `Type$inboundSchema` instead. */
    Type$.inboundSchema = exports.Type$inboundSchema;
    /** @deprecated use `Type$outboundSchema` instead. */
    Type$.outboundSchema = exports.Type$outboundSchema;
})(Type$ || (exports.Type$ = Type$ = {}));
/** @internal */
exports.ForeignIdentificationCreate$inboundSchema = z.object({
    expiration_date: datecreate_js_1.DateCreate$inboundSchema.optional(),
    ftin: z.boolean(),
    identification_number: z.string(),
    issue_date: datecreate_js_1.DateCreate$inboundSchema.optional(),
    issuing_region_code: z.string(),
    type: exports.Type$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "expiration_date": "expirationDate",
        "identification_number": "identificationNumber",
        "issue_date": "issueDate",
        "issuing_region_code": "issuingRegionCode",
    });
});
/** @internal */
exports.ForeignIdentificationCreate$outboundSchema = z.object({
    expirationDate: datecreate_js_1.DateCreate$outboundSchema.optional(),
    ftin: z.boolean(),
    identificationNumber: z.string(),
    issueDate: datecreate_js_1.DateCreate$outboundSchema.optional(),
    issuingRegionCode: z.string(),
    type: exports.Type$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        expirationDate: "expiration_date",
        identificationNumber: "identification_number",
        issueDate: "issue_date",
        issuingRegionCode: "issuing_region_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ForeignIdentificationCreate$;
(function (ForeignIdentificationCreate$) {
    /** @deprecated use `ForeignIdentificationCreate$inboundSchema` instead. */
    ForeignIdentificationCreate$.inboundSchema = exports.ForeignIdentificationCreate$inboundSchema;
    /** @deprecated use `ForeignIdentificationCreate$outboundSchema` instead. */
    ForeignIdentificationCreate$.outboundSchema = exports.ForeignIdentificationCreate$outboundSchema;
})(ForeignIdentificationCreate$ || (exports.ForeignIdentificationCreate$ = ForeignIdentificationCreate$ = {}));
//# sourceMappingURL=foreignidentificationcreate.js.map