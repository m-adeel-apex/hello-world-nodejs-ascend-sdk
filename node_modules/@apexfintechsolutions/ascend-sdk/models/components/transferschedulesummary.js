"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.StartDate$inboundSchema = exports.TransferScheduleSummaryRetirementDistribution$ = exports.TransferScheduleSummaryRetirementDistribution$outboundSchema = exports.TransferScheduleSummaryRetirementDistribution$inboundSchema = exports.TransferScheduleSummaryRetirementDistributionType$ = exports.TransferScheduleSummaryRetirementDistributionType$outboundSchema = exports.TransferScheduleSummaryRetirementDistributionType$inboundSchema = exports.TransferScheduleSummaryStateTaxWithholding$ = exports.TransferScheduleSummaryStateTaxWithholding$outboundSchema = exports.TransferScheduleSummaryStateTaxWithholding$inboundSchema = exports.TransferScheduleSummaryRetirementDistributionPercentage$ = exports.TransferScheduleSummaryRetirementDistributionPercentage$outboundSchema = exports.TransferScheduleSummaryRetirementDistributionPercentage$inboundSchema = exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$ = exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$outboundSchema = exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$inboundSchema = exports.TransferScheduleSummaryFederalTaxWithholding$ = exports.TransferScheduleSummaryFederalTaxWithholding$outboundSchema = exports.TransferScheduleSummaryFederalTaxWithholding$inboundSchema = exports.TransferScheduleSummaryPercentage$ = exports.TransferScheduleSummaryPercentage$outboundSchema = exports.TransferScheduleSummaryPercentage$inboundSchema = exports.TransferScheduleSummaryRetirementDistributionAmount$ = exports.TransferScheduleSummaryRetirementDistributionAmount$outboundSchema = exports.TransferScheduleSummaryRetirementDistributionAmount$inboundSchema = exports.TransferScheduleSummaryRetirementContribution$ = exports.TransferScheduleSummaryRetirementContribution$outboundSchema = exports.TransferScheduleSummaryRetirementContribution$inboundSchema = exports.TransferScheduleSummaryType$ = exports.TransferScheduleSummaryType$outboundSchema = exports.TransferScheduleSummaryType$inboundSchema = exports.TransferScheduleSummaryTemporalTaxYear$ = exports.TransferScheduleSummaryTemporalTaxYear$outboundSchema = exports.TransferScheduleSummaryTemporalTaxYear$inboundSchema = exports.TransferScheduleSummaryMechanism$ = exports.TransferScheduleSummaryMechanism$outboundSchema = exports.TransferScheduleSummaryMechanism$inboundSchema = exports.Direction$ = exports.Direction$outboundSchema = exports.Direction$inboundSchema = exports.TransferScheduleSummaryAmount$ = exports.TransferScheduleSummaryAmount$outboundSchema = exports.TransferScheduleSummaryAmount$inboundSchema = exports.TransferScheduleSummaryTimeUnit = exports.TransferScheduleSummaryState = exports.TransferScheduleSummaryRetirementDistributionType = exports.TransferScheduleSummaryType = exports.TransferScheduleSummaryTemporalTaxYear = exports.TransferScheduleSummaryMechanism = exports.Direction = void 0;
exports.TransferScheduleSummary$ = exports.TransferScheduleSummary$outboundSchema = exports.TransferScheduleSummary$inboundSchema = exports.ScheduleProperties$ = exports.ScheduleProperties$outboundSchema = exports.ScheduleProperties$inboundSchema = exports.TransferScheduleSummaryTimeUnit$ = exports.TransferScheduleSummaryTimeUnit$outboundSchema = exports.TransferScheduleSummaryTimeUnit$inboundSchema = exports.TransferScheduleSummaryState$ = exports.TransferScheduleSummaryState$outboundSchema = exports.TransferScheduleSummaryState$inboundSchema = exports.StartDate$ = exports.StartDate$outboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * Flag indicating whether this is a deposit or withdrawal transfer
 */
var Direction;
(function (Direction) {
    Direction["DirectionUnspecified"] = "DIRECTION_UNSPECIFIED";
    Direction["Deposit"] = "DEPOSIT";
    Direction["Withdrawal"] = "WITHDRAWAL";
})(Direction || (exports.Direction = Direction = {}));
/**
 * The mechanism used for this transfer schedule
 */
var TransferScheduleSummaryMechanism;
(function (TransferScheduleSummaryMechanism) {
    TransferScheduleSummaryMechanism["Ach"] = "ACH";
    TransferScheduleSummaryMechanism["Wire"] = "WIRE";
})(TransferScheduleSummaryMechanism || (exports.TransferScheduleSummaryMechanism = TransferScheduleSummaryMechanism = {}));
/**
 * A temporal tax year value. This will always evaluate to a year based on the date the transfer was initiated.
 */
var TransferScheduleSummaryTemporalTaxYear;
(function (TransferScheduleSummaryTemporalTaxYear) {
    TransferScheduleSummaryTemporalTaxYear["TemporalTaxYearUnspecified"] = "TEMPORAL_TAX_YEAR_UNSPECIFIED";
    TransferScheduleSummaryTemporalTaxYear["CurrentCalendarYear"] = "CURRENT_CALENDAR_YEAR";
    TransferScheduleSummaryTemporalTaxYear["MinimumTaxYear"] = "MINIMUM_TAX_YEAR";
})(TransferScheduleSummaryTemporalTaxYear || (exports.TransferScheduleSummaryTemporalTaxYear = TransferScheduleSummaryTemporalTaxYear = {}));
/**
 * The type of retirement contribution.
 */
var TransferScheduleSummaryType;
(function (TransferScheduleSummaryType) {
    TransferScheduleSummaryType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    TransferScheduleSummaryType["Regular"] = "REGULAR";
    TransferScheduleSummaryType["Employee"] = "EMPLOYEE";
    TransferScheduleSummaryType["Employer"] = "EMPLOYER";
    TransferScheduleSummaryType["Recharacterization"] = "RECHARACTERIZATION";
    TransferScheduleSummaryType["Rollover60Day"] = "ROLLOVER_60_DAY";
    TransferScheduleSummaryType["RolloverDirect"] = "ROLLOVER_DIRECT";
    TransferScheduleSummaryType["Transfer"] = "TRANSFER";
    TransferScheduleSummaryType["TrusteeFee"] = "TRUSTEE_FEE";
    TransferScheduleSummaryType["Conversion"] = "CONVERSION";
    TransferScheduleSummaryType["Repayment"] = "REPAYMENT";
    TransferScheduleSummaryType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(TransferScheduleSummaryType || (exports.TransferScheduleSummaryType = TransferScheduleSummaryType = {}));
/**
 * The type of retirement distribution.
 */
var TransferScheduleSummaryRetirementDistributionType;
(function (TransferScheduleSummaryRetirementDistributionType) {
    TransferScheduleSummaryRetirementDistributionType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    TransferScheduleSummaryRetirementDistributionType["Normal"] = "NORMAL";
    TransferScheduleSummaryRetirementDistributionType["Disability"] = "DISABILITY";
    TransferScheduleSummaryRetirementDistributionType["Sosepp"] = "SOSEPP";
    TransferScheduleSummaryRetirementDistributionType["Premature"] = "PREMATURE";
    TransferScheduleSummaryRetirementDistributionType["Death"] = "DEATH";
    TransferScheduleSummaryRetirementDistributionType["ExcessContributionRemovalBeforeTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE";
    TransferScheduleSummaryRetirementDistributionType["ExcessContributionRemovalAfterTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE";
    TransferScheduleSummaryRetirementDistributionType["RolloverToQualifiedPlan"] = "ROLLOVER_TO_QUALIFIED_PLAN";
    TransferScheduleSummaryRetirementDistributionType["RolloverToIra"] = "ROLLOVER_TO_IRA";
    TransferScheduleSummaryRetirementDistributionType["DistributionTransfer"] = "DISTRIBUTION_TRANSFER";
    TransferScheduleSummaryRetirementDistributionType["RecharacterizationPriorYear"] = "RECHARACTERIZATION_PRIOR_YEAR";
    TransferScheduleSummaryRetirementDistributionType["RecharacterizationCurrentYear"] = "RECHARACTERIZATION_CURRENT_YEAR";
    TransferScheduleSummaryRetirementDistributionType["DistributionConversion"] = "DISTRIBUTION_CONVERSION";
    TransferScheduleSummaryRetirementDistributionType["ManagementFee"] = "MANAGEMENT_FEE";
    TransferScheduleSummaryRetirementDistributionType["PlanLoan401K"] = "PLAN_LOAN_401K";
    TransferScheduleSummaryRetirementDistributionType["PrematureSimpleIraLessThan2Years"] = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS";
    TransferScheduleSummaryRetirementDistributionType["NormalRothIraGreaterThan5Years"] = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS";
    TransferScheduleSummaryRetirementDistributionType["NetIncomeAttributable"] = "NET_INCOME_ATTRIBUTABLE";
    TransferScheduleSummaryRetirementDistributionType["Revocation"] = "REVOCATION";
    TransferScheduleSummaryRetirementDistributionType["NonReportable"] = "NON_REPORTABLE";
})(TransferScheduleSummaryRetirementDistributionType || (exports.TransferScheduleSummaryRetirementDistributionType = TransferScheduleSummaryRetirementDistributionType = {}));
/**
 * The state of the represented schedule
 */
var TransferScheduleSummaryState;
(function (TransferScheduleSummaryState) {
    TransferScheduleSummaryState["Active"] = "ACTIVE";
    TransferScheduleSummaryState["Canceled"] = "CANCELED";
    TransferScheduleSummaryState["Completed"] = "COMPLETED";
})(TransferScheduleSummaryState || (exports.TransferScheduleSummaryState = TransferScheduleSummaryState = {}));
/**
 * The time unit used to calculate the interval between transfers. The time period between transfers in a scheduled series is the unit of time times the multiplier
 */
var TransferScheduleSummaryTimeUnit;
(function (TransferScheduleSummaryTimeUnit) {
    TransferScheduleSummaryTimeUnit["Day"] = "DAY";
    TransferScheduleSummaryTimeUnit["Week"] = "WEEK";
    TransferScheduleSummaryTimeUnit["Month"] = "MONTH";
})(TransferScheduleSummaryTimeUnit || (exports.TransferScheduleSummaryTimeUnit = TransferScheduleSummaryTimeUnit = {}));
/** @internal */
exports.TransferScheduleSummaryAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.TransferScheduleSummaryAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryAmount$;
(function (TransferScheduleSummaryAmount$) {
    /** @deprecated use `TransferScheduleSummaryAmount$inboundSchema` instead. */
    TransferScheduleSummaryAmount$.inboundSchema = exports.TransferScheduleSummaryAmount$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryAmount$outboundSchema` instead. */
    TransferScheduleSummaryAmount$.outboundSchema = exports.TransferScheduleSummaryAmount$outboundSchema;
})(TransferScheduleSummaryAmount$ || (exports.TransferScheduleSummaryAmount$ = TransferScheduleSummaryAmount$ = {}));
/** @internal */
exports.Direction$inboundSchema = z
    .union([
    z.nativeEnum(Direction),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.Direction$outboundSchema = z.union([
    z.nativeEnum(Direction),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Direction$;
(function (Direction$) {
    /** @deprecated use `Direction$inboundSchema` instead. */
    Direction$.inboundSchema = exports.Direction$inboundSchema;
    /** @deprecated use `Direction$outboundSchema` instead. */
    Direction$.outboundSchema = exports.Direction$outboundSchema;
})(Direction$ || (exports.Direction$ = Direction$ = {}));
/** @internal */
exports.TransferScheduleSummaryMechanism$inboundSchema = z
    .union([
    z.nativeEnum(TransferScheduleSummaryMechanism),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TransferScheduleSummaryMechanism$outboundSchema = z.union([
    z.nativeEnum(TransferScheduleSummaryMechanism),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryMechanism$;
(function (TransferScheduleSummaryMechanism$) {
    /** @deprecated use `TransferScheduleSummaryMechanism$inboundSchema` instead. */
    TransferScheduleSummaryMechanism$.inboundSchema = exports.TransferScheduleSummaryMechanism$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryMechanism$outboundSchema` instead. */
    TransferScheduleSummaryMechanism$.outboundSchema = exports.TransferScheduleSummaryMechanism$outboundSchema;
})(TransferScheduleSummaryMechanism$ || (exports.TransferScheduleSummaryMechanism$ = TransferScheduleSummaryMechanism$ = {}));
/** @internal */
exports.TransferScheduleSummaryTemporalTaxYear$inboundSchema = z
    .union([
    z.nativeEnum(TransferScheduleSummaryTemporalTaxYear),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TransferScheduleSummaryTemporalTaxYear$outboundSchema = z.union([
    z.nativeEnum(TransferScheduleSummaryTemporalTaxYear),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryTemporalTaxYear$;
(function (TransferScheduleSummaryTemporalTaxYear$) {
    /** @deprecated use `TransferScheduleSummaryTemporalTaxYear$inboundSchema` instead. */
    TransferScheduleSummaryTemporalTaxYear$.inboundSchema = exports.TransferScheduleSummaryTemporalTaxYear$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryTemporalTaxYear$outboundSchema` instead. */
    TransferScheduleSummaryTemporalTaxYear$.outboundSchema = exports.TransferScheduleSummaryTemporalTaxYear$outboundSchema;
})(TransferScheduleSummaryTemporalTaxYear$ || (exports.TransferScheduleSummaryTemporalTaxYear$ = TransferScheduleSummaryTemporalTaxYear$ = {}));
/** @internal */
exports.TransferScheduleSummaryType$inboundSchema = z
    .union([
    z.nativeEnum(TransferScheduleSummaryType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TransferScheduleSummaryType$outboundSchema = z.union([
    z.nativeEnum(TransferScheduleSummaryType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryType$;
(function (TransferScheduleSummaryType$) {
    /** @deprecated use `TransferScheduleSummaryType$inboundSchema` instead. */
    TransferScheduleSummaryType$.inboundSchema = exports.TransferScheduleSummaryType$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryType$outboundSchema` instead. */
    TransferScheduleSummaryType$.outboundSchema = exports.TransferScheduleSummaryType$outboundSchema;
})(TransferScheduleSummaryType$ || (exports.TransferScheduleSummaryType$ = TransferScheduleSummaryType$ = {}));
/** @internal */
exports.TransferScheduleSummaryRetirementContribution$inboundSchema = z.object({
    tax_year: z.number().int().optional(),
    temporal_tax_year: exports.TransferScheduleSummaryTemporalTaxYear$inboundSchema
        .optional(),
    type: exports.TransferScheduleSummaryType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "tax_year": "taxYear",
        "temporal_tax_year": "temporalTaxYear",
    });
});
/** @internal */
exports.TransferScheduleSummaryRetirementContribution$outboundSchema = z.object({
    taxYear: z.number().int().optional(),
    temporalTaxYear: exports.TransferScheduleSummaryTemporalTaxYear$outboundSchema
        .optional(),
    type: exports.TransferScheduleSummaryType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        taxYear: "tax_year",
        temporalTaxYear: "temporal_tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryRetirementContribution$;
(function (TransferScheduleSummaryRetirementContribution$) {
    /** @deprecated use `TransferScheduleSummaryRetirementContribution$inboundSchema` instead. */
    TransferScheduleSummaryRetirementContribution$.inboundSchema = exports.TransferScheduleSummaryRetirementContribution$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryRetirementContribution$outboundSchema` instead. */
    TransferScheduleSummaryRetirementContribution$.outboundSchema = exports.TransferScheduleSummaryRetirementContribution$outboundSchema;
})(TransferScheduleSummaryRetirementContribution$ || (exports.TransferScheduleSummaryRetirementContribution$ = TransferScheduleSummaryRetirementContribution$ = {}));
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryRetirementDistributionAmount$;
(function (TransferScheduleSummaryRetirementDistributionAmount$) {
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionAmount$inboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionAmount$.inboundSchema = exports.TransferScheduleSummaryRetirementDistributionAmount$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionAmount$outboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionAmount$.outboundSchema = exports.TransferScheduleSummaryRetirementDistributionAmount$outboundSchema;
})(TransferScheduleSummaryRetirementDistributionAmount$ || (exports.TransferScheduleSummaryRetirementDistributionAmount$ = TransferScheduleSummaryRetirementDistributionAmount$ = {}));
/** @internal */
exports.TransferScheduleSummaryPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.TransferScheduleSummaryPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryPercentage$;
(function (TransferScheduleSummaryPercentage$) {
    /** @deprecated use `TransferScheduleSummaryPercentage$inboundSchema` instead. */
    TransferScheduleSummaryPercentage$.inboundSchema = exports.TransferScheduleSummaryPercentage$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryPercentage$outboundSchema` instead. */
    TransferScheduleSummaryPercentage$.outboundSchema = exports.TransferScheduleSummaryPercentage$outboundSchema;
})(TransferScheduleSummaryPercentage$ || (exports.TransferScheduleSummaryPercentage$ = TransferScheduleSummaryPercentage$ = {}));
/** @internal */
exports.TransferScheduleSummaryFederalTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistributionAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.TransferScheduleSummaryPercentage$inboundSchema)).optional(),
});
/** @internal */
exports.TransferScheduleSummaryFederalTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistributionAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.TransferScheduleSummaryPercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryFederalTaxWithholding$;
(function (TransferScheduleSummaryFederalTaxWithholding$) {
    /** @deprecated use `TransferScheduleSummaryFederalTaxWithholding$inboundSchema` instead. */
    TransferScheduleSummaryFederalTaxWithholding$.inboundSchema = exports.TransferScheduleSummaryFederalTaxWithholding$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryFederalTaxWithholding$outboundSchema` instead. */
    TransferScheduleSummaryFederalTaxWithholding$.outboundSchema = exports.TransferScheduleSummaryFederalTaxWithholding$outboundSchema;
})(TransferScheduleSummaryFederalTaxWithholding$ || (exports.TransferScheduleSummaryFederalTaxWithholding$ = TransferScheduleSummaryFederalTaxWithholding$ = {}));
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$;
(function (TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$) {
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$inboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$.inboundSchema = exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$outboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$.outboundSchema = exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$outboundSchema;
})(TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$ || (exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$ = TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$ = {}));
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryRetirementDistributionPercentage$;
(function (TransferScheduleSummaryRetirementDistributionPercentage$) {
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionPercentage$inboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionPercentage$.inboundSchema = exports.TransferScheduleSummaryRetirementDistributionPercentage$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionPercentage$outboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionPercentage$.outboundSchema = exports.TransferScheduleSummaryRetirementDistributionPercentage$outboundSchema;
})(TransferScheduleSummaryRetirementDistributionPercentage$ || (exports.TransferScheduleSummaryRetirementDistributionPercentage$ = TransferScheduleSummaryRetirementDistributionPercentage$ = {}));
/** @internal */
exports.TransferScheduleSummaryStateTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistributionPercentage$inboundSchema)).optional(),
});
/** @internal */
exports.TransferScheduleSummaryStateTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistributionStateTaxWithholdingAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistributionPercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryStateTaxWithholding$;
(function (TransferScheduleSummaryStateTaxWithholding$) {
    /** @deprecated use `TransferScheduleSummaryStateTaxWithholding$inboundSchema` instead. */
    TransferScheduleSummaryStateTaxWithholding$.inboundSchema = exports.TransferScheduleSummaryStateTaxWithholding$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryStateTaxWithholding$outboundSchema` instead. */
    TransferScheduleSummaryStateTaxWithholding$.outboundSchema = exports.TransferScheduleSummaryStateTaxWithholding$outboundSchema;
})(TransferScheduleSummaryStateTaxWithholding$ || (exports.TransferScheduleSummaryStateTaxWithholding$ = TransferScheduleSummaryStateTaxWithholding$ = {}));
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionType$inboundSchema = z
    .union([
    z.nativeEnum(TransferScheduleSummaryRetirementDistributionType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TransferScheduleSummaryRetirementDistributionType$outboundSchema = z.union([
    z.nativeEnum(TransferScheduleSummaryRetirementDistributionType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryRetirementDistributionType$;
(function (TransferScheduleSummaryRetirementDistributionType$) {
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionType$inboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionType$.inboundSchema = exports.TransferScheduleSummaryRetirementDistributionType$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryRetirementDistributionType$outboundSchema` instead. */
    TransferScheduleSummaryRetirementDistributionType$.outboundSchema = exports.TransferScheduleSummaryRetirementDistributionType$outboundSchema;
})(TransferScheduleSummaryRetirementDistributionType$ || (exports.TransferScheduleSummaryRetirementDistributionType$ = TransferScheduleSummaryRetirementDistributionType$ = {}));
/** @internal */
exports.TransferScheduleSummaryRetirementDistribution$inboundSchema = z.object({
    federal_tax_withholding: z.nullable(z.lazy(() => exports.TransferScheduleSummaryFederalTaxWithholding$inboundSchema)).optional(),
    receiving_institution: z.string().optional(),
    state_tax_withholding: z.nullable(z.lazy(() => exports.TransferScheduleSummaryStateTaxWithholding$inboundSchema)).optional(),
    state_withholding_waiver: z.boolean().optional(),
    tax_year: z.number().int().optional(),
    type: exports.TransferScheduleSummaryRetirementDistributionType$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "federal_tax_withholding": "federalTaxWithholding",
        "receiving_institution": "receivingInstitution",
        "state_tax_withholding": "stateTaxWithholding",
        "state_withholding_waiver": "stateWithholdingWaiver",
        "tax_year": "taxYear",
    });
});
/** @internal */
exports.TransferScheduleSummaryRetirementDistribution$outboundSchema = z.object({
    federalTaxWithholding: z.nullable(z.lazy(() => exports.TransferScheduleSummaryFederalTaxWithholding$outboundSchema)).optional(),
    receivingInstitution: z.string().optional(),
    stateTaxWithholding: z.nullable(z.lazy(() => exports.TransferScheduleSummaryStateTaxWithholding$outboundSchema)).optional(),
    stateWithholdingWaiver: z.boolean().optional(),
    taxYear: z.number().int().optional(),
    type: exports.TransferScheduleSummaryRetirementDistributionType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        federalTaxWithholding: "federal_tax_withholding",
        receivingInstitution: "receiving_institution",
        stateTaxWithholding: "state_tax_withholding",
        stateWithholdingWaiver: "state_withholding_waiver",
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryRetirementDistribution$;
(function (TransferScheduleSummaryRetirementDistribution$) {
    /** @deprecated use `TransferScheduleSummaryRetirementDistribution$inboundSchema` instead. */
    TransferScheduleSummaryRetirementDistribution$.inboundSchema = exports.TransferScheduleSummaryRetirementDistribution$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryRetirementDistribution$outboundSchema` instead. */
    TransferScheduleSummaryRetirementDistribution$.outboundSchema = exports.TransferScheduleSummaryRetirementDistribution$outboundSchema;
})(TransferScheduleSummaryRetirementDistribution$ || (exports.TransferScheduleSummaryRetirementDistribution$ = TransferScheduleSummaryRetirementDistribution$ = {}));
/** @internal */
exports.StartDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.StartDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var StartDate$;
(function (StartDate$) {
    /** @deprecated use `StartDate$inboundSchema` instead. */
    StartDate$.inboundSchema = exports.StartDate$inboundSchema;
    /** @deprecated use `StartDate$outboundSchema` instead. */
    StartDate$.outboundSchema = exports.StartDate$outboundSchema;
})(StartDate$ || (exports.StartDate$ = StartDate$ = {}));
/** @internal */
exports.TransferScheduleSummaryState$inboundSchema = z
    .union([
    z.nativeEnum(TransferScheduleSummaryState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TransferScheduleSummaryState$outboundSchema = z.union([
    z.nativeEnum(TransferScheduleSummaryState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryState$;
(function (TransferScheduleSummaryState$) {
    /** @deprecated use `TransferScheduleSummaryState$inboundSchema` instead. */
    TransferScheduleSummaryState$.inboundSchema = exports.TransferScheduleSummaryState$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryState$outboundSchema` instead. */
    TransferScheduleSummaryState$.outboundSchema = exports.TransferScheduleSummaryState$outboundSchema;
})(TransferScheduleSummaryState$ || (exports.TransferScheduleSummaryState$ = TransferScheduleSummaryState$ = {}));
/** @internal */
exports.TransferScheduleSummaryTimeUnit$inboundSchema = z
    .union([
    z.nativeEnum(TransferScheduleSummaryTimeUnit),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TransferScheduleSummaryTimeUnit$outboundSchema = z.union([
    z.nativeEnum(TransferScheduleSummaryTimeUnit),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummaryTimeUnit$;
(function (TransferScheduleSummaryTimeUnit$) {
    /** @deprecated use `TransferScheduleSummaryTimeUnit$inboundSchema` instead. */
    TransferScheduleSummaryTimeUnit$.inboundSchema = exports.TransferScheduleSummaryTimeUnit$inboundSchema;
    /** @deprecated use `TransferScheduleSummaryTimeUnit$outboundSchema` instead. */
    TransferScheduleSummaryTimeUnit$.outboundSchema = exports.TransferScheduleSummaryTimeUnit$outboundSchema;
})(TransferScheduleSummaryTimeUnit$ || (exports.TransferScheduleSummaryTimeUnit$ = TransferScheduleSummaryTimeUnit$ = {}));
/** @internal */
exports.ScheduleProperties$inboundSchema = z.object({
    occurrences: z.number().int().optional(),
    start_date: z.nullable(z.lazy(() => exports.StartDate$inboundSchema)).optional(),
    state: exports.TransferScheduleSummaryState$inboundSchema.optional(),
    time_unit: exports.TransferScheduleSummaryTimeUnit$inboundSchema.optional(),
    unit_multiplier: z.number().int().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "start_date": "startDate",
        "time_unit": "timeUnit",
        "unit_multiplier": "unitMultiplier",
    });
});
/** @internal */
exports.ScheduleProperties$outboundSchema = z.object({
    occurrences: z.number().int().optional(),
    startDate: z.nullable(z.lazy(() => exports.StartDate$outboundSchema)).optional(),
    state: exports.TransferScheduleSummaryState$outboundSchema.optional(),
    timeUnit: exports.TransferScheduleSummaryTimeUnit$outboundSchema.optional(),
    unitMultiplier: z.number().int().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        startDate: "start_date",
        timeUnit: "time_unit",
        unitMultiplier: "unit_multiplier",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ScheduleProperties$;
(function (ScheduleProperties$) {
    /** @deprecated use `ScheduleProperties$inboundSchema` instead. */
    ScheduleProperties$.inboundSchema = exports.ScheduleProperties$inboundSchema;
    /** @deprecated use `ScheduleProperties$outboundSchema` instead. */
    ScheduleProperties$.outboundSchema = exports.ScheduleProperties$outboundSchema;
})(ScheduleProperties$ || (exports.ScheduleProperties$ = ScheduleProperties$ = {}));
/** @internal */
exports.TransferScheduleSummary$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.TransferScheduleSummaryAmount$inboundSchema))
        .optional(),
    client_schedule_id: z.string().optional(),
    direction: exports.Direction$inboundSchema.optional(),
    mechanism: exports.TransferScheduleSummaryMechanism$inboundSchema.optional(),
    retirement_contribution: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementContribution$inboundSchema)).optional(),
    retirement_distribution: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistribution$inboundSchema)).optional(),
    schedule_properties: z.nullable(z.lazy(() => exports.ScheduleProperties$inboundSchema)).optional(),
    transfer_schedule: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "client_schedule_id": "clientScheduleId",
        "retirement_contribution": "retirementContribution",
        "retirement_distribution": "retirementDistribution",
        "schedule_properties": "scheduleProperties",
        "transfer_schedule": "transferSchedule",
    });
});
/** @internal */
exports.TransferScheduleSummary$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.TransferScheduleSummaryAmount$outboundSchema))
        .optional(),
    clientScheduleId: z.string().optional(),
    direction: exports.Direction$outboundSchema.optional(),
    mechanism: exports.TransferScheduleSummaryMechanism$outboundSchema.optional(),
    retirementContribution: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementContribution$outboundSchema)).optional(),
    retirementDistribution: z.nullable(z.lazy(() => exports.TransferScheduleSummaryRetirementDistribution$outboundSchema)).optional(),
    scheduleProperties: z.nullable(z.lazy(() => exports.ScheduleProperties$outboundSchema)).optional(),
    transferSchedule: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        clientScheduleId: "client_schedule_id",
        retirementContribution: "retirement_contribution",
        retirementDistribution: "retirement_distribution",
        scheduleProperties: "schedule_properties",
        transferSchedule: "transfer_schedule",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TransferScheduleSummary$;
(function (TransferScheduleSummary$) {
    /** @deprecated use `TransferScheduleSummary$inboundSchema` instead. */
    TransferScheduleSummary$.inboundSchema = exports.TransferScheduleSummary$inboundSchema;
    /** @deprecated use `TransferScheduleSummary$outboundSchema` instead. */
    TransferScheduleSummary$.outboundSchema = exports.TransferScheduleSummary$outboundSchema;
})(TransferScheduleSummary$ || (exports.TransferScheduleSummary$ = TransferScheduleSummary$ = {}));
//# sourceMappingURL=transferschedulesummary.js.map