"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperatingEnrollmentMetadataCreate$ = exports.OperatingEnrollmentMetadataCreate$outboundSchema = exports.OperatingEnrollmentMetadataCreate$inboundSchema = exports.OperatingPurpose$ = exports.OperatingPurpose$outboundSchema = exports.OperatingPurpose$inboundSchema = exports.OperatingPurpose = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const taxwithholdingmetadatacreate_js_1 = require("./taxwithholdingmetadatacreate.js");
/**
 * The purpose of the operating account.
 */
var OperatingPurpose;
(function (OperatingPurpose) {
    OperatingPurpose["OperatingPurposeUnspecified"] = "OPERATING_PURPOSE_UNSPECIFIED";
    OperatingPurpose["Custody"] = "CUSTODY";
    OperatingPurpose["SecFee"] = "SEC_FEE";
    OperatingPurpose["TafFee"] = "TAF_FEE";
    OperatingPurpose["TefraWithholding"] = "TEFRA_WITHHOLDING";
    OperatingPurpose["Suspense"] = "SUSPENSE";
    OperatingPurpose["Allocation"] = "ALLOCATION";
    OperatingPurpose["Error"] = "ERROR";
    OperatingPurpose["Deposit"] = "DEPOSIT";
    OperatingPurpose["WriteOff"] = "WRITE_OFF";
    OperatingPurpose["UnsecuredReserve"] = "UNSECURED_RESERVE";
    OperatingPurpose["Payable"] = "PAYABLE";
    OperatingPurpose["Commission"] = "COMMISSION";
    OperatingPurpose["Escheatment"] = "ESCHEATMENT";
    OperatingPurpose["InterestRevenue"] = "INTEREST_REVENUE";
    OperatingPurpose["StreetDepository"] = "STREET_DEPOSITORY";
    OperatingPurpose["Inventory"] = "INVENTORY";
    OperatingPurpose["TaxWithholding"] = "TAX_WITHHOLDING";
    OperatingPurpose["Fee"] = "FEE";
    OperatingPurpose["PrincipalTrading"] = "PRINCIPAL_TRADING";
})(OperatingPurpose || (exports.OperatingPurpose = OperatingPurpose = {}));
/** @internal */
exports.OperatingPurpose$inboundSchema = z
    .union([
    z.nativeEnum(OperatingPurpose),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.OperatingPurpose$outboundSchema = z.union([
    z.nativeEnum(OperatingPurpose),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OperatingPurpose$;
(function (OperatingPurpose$) {
    /** @deprecated use `OperatingPurpose$inboundSchema` instead. */
    OperatingPurpose$.inboundSchema = exports.OperatingPurpose$inboundSchema;
    /** @deprecated use `OperatingPurpose$outboundSchema` instead. */
    OperatingPurpose$.outboundSchema = exports.OperatingPurpose$outboundSchema;
})(OperatingPurpose$ || (exports.OperatingPurpose$ = OperatingPurpose$ = {}));
/** @internal */
exports.OperatingEnrollmentMetadataCreate$inboundSchema = z.object({
    operating_purpose: exports.OperatingPurpose$inboundSchema,
    subtitle: z.string().optional(),
    tax_withholding_metadata: taxwithholdingmetadatacreate_js_1.TaxWithholdingMetadataCreate$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "operating_purpose": "operatingPurpose",
        "tax_withholding_metadata": "taxWithholdingMetadata",
    });
});
/** @internal */
exports.OperatingEnrollmentMetadataCreate$outboundSchema = z.object({
    operatingPurpose: exports.OperatingPurpose$outboundSchema,
    subtitle: z.string().optional(),
    taxWithholdingMetadata: taxwithholdingmetadatacreate_js_1.TaxWithholdingMetadataCreate$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        operatingPurpose: "operating_purpose",
        taxWithholdingMetadata: "tax_withholding_metadata",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OperatingEnrollmentMetadataCreate$;
(function (OperatingEnrollmentMetadataCreate$) {
    /** @deprecated use `OperatingEnrollmentMetadataCreate$inboundSchema` instead. */
    OperatingEnrollmentMetadataCreate$.inboundSchema = exports.OperatingEnrollmentMetadataCreate$inboundSchema;
    /** @deprecated use `OperatingEnrollmentMetadataCreate$outboundSchema` instead. */
    OperatingEnrollmentMetadataCreate$.outboundSchema = exports.OperatingEnrollmentMetadataCreate$outboundSchema;
})(OperatingEnrollmentMetadataCreate$ || (exports.OperatingEnrollmentMetadataCreate$ = OperatingEnrollmentMetadataCreate$ = {}));
//# sourceMappingURL=operatingenrollmentmetadatacreate.js.map