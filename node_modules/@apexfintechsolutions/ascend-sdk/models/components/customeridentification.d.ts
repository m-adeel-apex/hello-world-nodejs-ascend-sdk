import * as z from "zod";
import { OpenEnum } from "../../types/enums.js";
import { CustomerIdentificationResult, CustomerIdentificationResult$Outbound } from "./customeridentificationresult.js";
export declare enum CheckTypes {
    CheckTypeUnspecified = "CHECK_TYPE_UNSPECIFIED",
    Database = "DATABASE",
    Documentary = "DOCUMENTARY"
}
export type CheckTypesOpen = OpenEnum<typeof CheckTypes>;
/**
 * CustomerIdentification includes the details of a customer identification check
 */
export type CustomerIdentification = {
    /**
     * The types of checks being requested
     */
    checkTypes?: Array<CheckTypesOpen> | undefined;
    /**
     * required format: correspondents/{correspondent_id}/customerIdentifications/{customer_identification_id}
     */
    name?: string | undefined;
    /**
     * The results of the identity verification check(s)
     */
    results?: Array<CustomerIdentificationResult> | undefined;
};
/** @internal */
export declare const CheckTypes$inboundSchema: z.ZodType<CheckTypesOpen, z.ZodTypeDef, unknown>;
/** @internal */
export declare const CheckTypes$outboundSchema: z.ZodType<CheckTypesOpen, z.ZodTypeDef, CheckTypesOpen>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckTypes$ {
    /** @deprecated use `CheckTypes$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckTypesOpen, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckTypes$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckTypesOpen, z.ZodTypeDef, CheckTypesOpen>;
}
/** @internal */
export declare const CustomerIdentification$inboundSchema: z.ZodType<CustomerIdentification, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomerIdentification$Outbound = {
    check_types?: Array<string> | undefined;
    name?: string | undefined;
    results?: Array<CustomerIdentificationResult$Outbound> | undefined;
};
/** @internal */
export declare const CustomerIdentification$outboundSchema: z.ZodType<CustomerIdentification$Outbound, z.ZodTypeDef, CustomerIdentification>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomerIdentification$ {
    /** @deprecated use `CustomerIdentification$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomerIdentification, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomerIdentification$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomerIdentification$Outbound, z.ZodTypeDef, CustomerIdentification>;
    /** @deprecated use `CustomerIdentification$Outbound` instead. */
    type Outbound = CustomerIdentification$Outbound;
}
//# sourceMappingURL=customeridentification.d.ts.map