"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CancelTradeResponse$ = exports.CancelTradeResponse$outboundSchema = exports.CancelTradeResponse$inboundSchema = exports.CancelTradeResponseTrade$ = exports.CancelTradeResponseTrade$outboundSchema = exports.CancelTradeResponseTrade$inboundSchema = exports.CancelTradeResponsePriceAdjustmentRecord$ = exports.CancelTradeResponsePriceAdjustmentRecord$outboundSchema = exports.CancelTradeResponsePriceAdjustmentRecord$inboundSchema = exports.CancelTradeResponsePriceAdjustmentType$ = exports.CancelTradeResponsePriceAdjustmentType$outboundSchema = exports.CancelTradeResponsePriceAdjustmentType$inboundSchema = exports.CancelTradeResponsePriceAdjustmentPercent$ = exports.CancelTradeResponsePriceAdjustmentPercent$outboundSchema = exports.CancelTradeResponsePriceAdjustmentPercent$inboundSchema = exports.CancelTradeResponsePriceAdjustmentAmount$ = exports.CancelTradeResponsePriceAdjustmentAmount$outboundSchema = exports.CancelTradeResponsePriceAdjustmentAmount$inboundSchema = exports.CancelTradeResponsePrevailingMarketPrice$ = exports.CancelTradeResponsePrevailingMarketPrice$outboundSchema = exports.CancelTradeResponsePrevailingMarketPrice$inboundSchema = exports.CancelTradeResponseBrokerCapacity$ = exports.CancelTradeResponseBrokerCapacity$outboundSchema = exports.CancelTradeResponseBrokerCapacity$inboundSchema = exports.CancelTradeResponsePriceAdjustmentType = exports.CancelTradeResponseBrokerCapacity = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const lot_js_1 = require("./lot.js");
const yieldrecord_js_1 = require("./yieldrecord.js");
/**
 * Used to calculate broadridge blotter code
 */
var CancelTradeResponseBrokerCapacity;
(function (CancelTradeResponseBrokerCapacity) {
    CancelTradeResponseBrokerCapacity["CapacityUnspecified"] = "CAPACITY_UNSPECIFIED";
    CancelTradeResponseBrokerCapacity["Agency"] = "AGENCY";
    CancelTradeResponseBrokerCapacity["Principal"] = "PRINCIPAL";
    CancelTradeResponseBrokerCapacity["Mixed"] = "MIXED";
})(CancelTradeResponseBrokerCapacity || (exports.CancelTradeResponseBrokerCapacity = CancelTradeResponseBrokerCapacity = {}));
/**
 * The type of price adjustment being applied by the broker to the net price of the security
 */
var CancelTradeResponsePriceAdjustmentType;
(function (CancelTradeResponsePriceAdjustmentType) {
    CancelTradeResponsePriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    CancelTradeResponsePriceAdjustmentType["Markup"] = "MARKUP";
    CancelTradeResponsePriceAdjustmentType["Markdown"] = "MARKDOWN";
    CancelTradeResponsePriceAdjustmentType["SalesLoad"] = "SALES_LOAD";
})(CancelTradeResponsePriceAdjustmentType || (exports.CancelTradeResponsePriceAdjustmentType = CancelTradeResponsePriceAdjustmentType = {}));
/** @internal */
exports.CancelTradeResponseBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(CancelTradeResponseBrokerCapacity),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.CancelTradeResponseBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(CancelTradeResponseBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponseBrokerCapacity$;
(function (CancelTradeResponseBrokerCapacity$) {
    /** @deprecated use `CancelTradeResponseBrokerCapacity$inboundSchema` instead. */
    CancelTradeResponseBrokerCapacity$.inboundSchema = exports.CancelTradeResponseBrokerCapacity$inboundSchema;
    /** @deprecated use `CancelTradeResponseBrokerCapacity$outboundSchema` instead. */
    CancelTradeResponseBrokerCapacity$.outboundSchema = exports.CancelTradeResponseBrokerCapacity$outboundSchema;
})(CancelTradeResponseBrokerCapacity$ || (exports.CancelTradeResponseBrokerCapacity$ = CancelTradeResponseBrokerCapacity$ = {}));
/** @internal */
exports.CancelTradeResponsePrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelTradeResponsePrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponsePrevailingMarketPrice$;
(function (CancelTradeResponsePrevailingMarketPrice$) {
    /** @deprecated use `CancelTradeResponsePrevailingMarketPrice$inboundSchema` instead. */
    CancelTradeResponsePrevailingMarketPrice$.inboundSchema = exports.CancelTradeResponsePrevailingMarketPrice$inboundSchema;
    /** @deprecated use `CancelTradeResponsePrevailingMarketPrice$outboundSchema` instead. */
    CancelTradeResponsePrevailingMarketPrice$.outboundSchema = exports.CancelTradeResponsePrevailingMarketPrice$outboundSchema;
})(CancelTradeResponsePrevailingMarketPrice$ || (exports.CancelTradeResponsePrevailingMarketPrice$ = CancelTradeResponsePrevailingMarketPrice$ = {}));
/** @internal */
exports.CancelTradeResponsePriceAdjustmentAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelTradeResponsePriceAdjustmentAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponsePriceAdjustmentAmount$;
(function (CancelTradeResponsePriceAdjustmentAmount$) {
    /** @deprecated use `CancelTradeResponsePriceAdjustmentAmount$inboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentAmount$.inboundSchema = exports.CancelTradeResponsePriceAdjustmentAmount$inboundSchema;
    /** @deprecated use `CancelTradeResponsePriceAdjustmentAmount$outboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentAmount$.outboundSchema = exports.CancelTradeResponsePriceAdjustmentAmount$outboundSchema;
})(CancelTradeResponsePriceAdjustmentAmount$ || (exports.CancelTradeResponsePriceAdjustmentAmount$ = CancelTradeResponsePriceAdjustmentAmount$ = {}));
/** @internal */
exports.CancelTradeResponsePriceAdjustmentPercent$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.CancelTradeResponsePriceAdjustmentPercent$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponsePriceAdjustmentPercent$;
(function (CancelTradeResponsePriceAdjustmentPercent$) {
    /** @deprecated use `CancelTradeResponsePriceAdjustmentPercent$inboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentPercent$.inboundSchema = exports.CancelTradeResponsePriceAdjustmentPercent$inboundSchema;
    /** @deprecated use `CancelTradeResponsePriceAdjustmentPercent$outboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentPercent$.outboundSchema = exports.CancelTradeResponsePriceAdjustmentPercent$outboundSchema;
})(CancelTradeResponsePriceAdjustmentPercent$ || (exports.CancelTradeResponsePriceAdjustmentPercent$ = CancelTradeResponsePriceAdjustmentPercent$ = {}));
/** @internal */
exports.CancelTradeResponsePriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(CancelTradeResponsePriceAdjustmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.CancelTradeResponsePriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(CancelTradeResponsePriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponsePriceAdjustmentType$;
(function (CancelTradeResponsePriceAdjustmentType$) {
    /** @deprecated use `CancelTradeResponsePriceAdjustmentType$inboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentType$.inboundSchema = exports.CancelTradeResponsePriceAdjustmentType$inboundSchema;
    /** @deprecated use `CancelTradeResponsePriceAdjustmentType$outboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentType$.outboundSchema = exports.CancelTradeResponsePriceAdjustmentType$outboundSchema;
})(CancelTradeResponsePriceAdjustmentType$ || (exports.CancelTradeResponsePriceAdjustmentType$ = CancelTradeResponsePriceAdjustmentType$ = {}));
/** @internal */
exports.CancelTradeResponsePriceAdjustmentRecord$inboundSchema = z.object({
    price_adjustment_amount: z.nullable(z.lazy(() => exports.CancelTradeResponsePriceAdjustmentAmount$inboundSchema)).optional(),
    price_adjustment_percent: z.nullable(z.lazy(() => exports.CancelTradeResponsePriceAdjustmentPercent$inboundSchema)).optional(),
    price_adjustment_type: exports.CancelTradeResponsePriceAdjustmentType$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_percent": "priceAdjustmentPercent",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
exports.CancelTradeResponsePriceAdjustmentRecord$outboundSchema = z.object({
    priceAdjustmentAmount: z.nullable(z.lazy(() => exports.CancelTradeResponsePriceAdjustmentAmount$outboundSchema)).optional(),
    priceAdjustmentPercent: z.nullable(z.lazy(() => exports.CancelTradeResponsePriceAdjustmentPercent$outboundSchema)).optional(),
    priceAdjustmentType: exports.CancelTradeResponsePriceAdjustmentType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentPercent: "price_adjustment_percent",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponsePriceAdjustmentRecord$;
(function (CancelTradeResponsePriceAdjustmentRecord$) {
    /** @deprecated use `CancelTradeResponsePriceAdjustmentRecord$inboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentRecord$.inboundSchema = exports.CancelTradeResponsePriceAdjustmentRecord$inboundSchema;
    /** @deprecated use `CancelTradeResponsePriceAdjustmentRecord$outboundSchema` instead. */
    CancelTradeResponsePriceAdjustmentRecord$.outboundSchema = exports.CancelTradeResponsePriceAdjustmentRecord$outboundSchema;
})(CancelTradeResponsePriceAdjustmentRecord$ || (exports.CancelTradeResponsePriceAdjustmentRecord$ = CancelTradeResponsePriceAdjustmentRecord$ = {}));
/** @internal */
exports.CancelTradeResponseTrade$inboundSchema = z.object({
    additional_instructions: z.array(z.string()).optional(),
    alternate_order_id: z.string().optional(),
    booking_api_trade_allocation_id: z.string().optional(),
    booking_api_trade_id: z.string().optional(),
    broker: z.string().optional(),
    broker_capacity: exports.CancelTradeResponseBrokerCapacity$inboundSchema.optional(),
    client_memos: z.array(z.string()).optional(),
    client_order_id: z.string().optional(),
    exchange: z.string().optional(),
    execution_id: z.string().optional(),
    execution_only: z.boolean().optional(),
    external_id: z.string().optional(),
    fund_confirmation_number: z.string().optional(),
    gateway_client_order_id: z.string().optional(),
    internal_error: z.boolean().optional(),
    is_writeoff: z.boolean().optional(),
    lots: z.array(lot_js_1.Lot$inboundSchema).optional(),
    order_id: z.string().optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.CancelTradeResponsePrevailingMarketPrice$inboundSchema)).optional(),
    price_adjustment_record: z.nullable(z.lazy(() => exports.CancelTradeResponsePriceAdjustmentRecord$inboundSchema)).optional(),
    route: z.string().optional(),
    special_instructions: z.array(z.string()).optional(),
    symbol_description: z.string().optional(),
    when_issued: z.boolean().optional(),
    yield_records: z.array(yieldrecord_js_1.YieldRecord$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "additional_instructions": "additionalInstructions",
        "alternate_order_id": "alternateOrderId",
        "booking_api_trade_allocation_id": "bookingApiTradeAllocationId",
        "booking_api_trade_id": "bookingApiTradeId",
        "broker_capacity": "brokerCapacity",
        "client_memos": "clientMemos",
        "client_order_id": "clientOrderId",
        "execution_id": "executionId",
        "execution_only": "executionOnly",
        "external_id": "externalId",
        "fund_confirmation_number": "fundConfirmationNumber",
        "gateway_client_order_id": "gatewayClientOrderId",
        "internal_error": "internalError",
        "is_writeoff": "isWriteoff",
        "order_id": "orderId",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment_record": "priceAdjustmentRecord",
        "special_instructions": "specialInstructions",
        "symbol_description": "symbolDescription",
        "when_issued": "whenIssued",
        "yield_records": "yieldRecords",
    });
});
/** @internal */
exports.CancelTradeResponseTrade$outboundSchema = z.object({
    additionalInstructions: z.array(z.string()).optional(),
    alternateOrderId: z.string().optional(),
    bookingApiTradeAllocationId: z.string().optional(),
    bookingApiTradeId: z.string().optional(),
    broker: z.string().optional(),
    brokerCapacity: exports.CancelTradeResponseBrokerCapacity$outboundSchema.optional(),
    clientMemos: z.array(z.string()).optional(),
    clientOrderId: z.string().optional(),
    exchange: z.string().optional(),
    executionId: z.string().optional(),
    executionOnly: z.boolean().optional(),
    externalId: z.string().optional(),
    fundConfirmationNumber: z.string().optional(),
    gatewayClientOrderId: z.string().optional(),
    internalError: z.boolean().optional(),
    isWriteoff: z.boolean().optional(),
    lots: z.array(lot_js_1.Lot$outboundSchema).optional(),
    orderId: z.string().optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.CancelTradeResponsePrevailingMarketPrice$outboundSchema)).optional(),
    priceAdjustmentRecord: z.nullable(z.lazy(() => exports.CancelTradeResponsePriceAdjustmentRecord$outboundSchema)).optional(),
    route: z.string().optional(),
    specialInstructions: z.array(z.string()).optional(),
    symbolDescription: z.string().optional(),
    whenIssued: z.boolean().optional(),
    yieldRecords: z.array(yieldrecord_js_1.YieldRecord$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        additionalInstructions: "additional_instructions",
        alternateOrderId: "alternate_order_id",
        bookingApiTradeAllocationId: "booking_api_trade_allocation_id",
        bookingApiTradeId: "booking_api_trade_id",
        brokerCapacity: "broker_capacity",
        clientMemos: "client_memos",
        clientOrderId: "client_order_id",
        executionId: "execution_id",
        executionOnly: "execution_only",
        externalId: "external_id",
        fundConfirmationNumber: "fund_confirmation_number",
        gatewayClientOrderId: "gateway_client_order_id",
        internalError: "internal_error",
        isWriteoff: "is_writeoff",
        orderId: "order_id",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustmentRecord: "price_adjustment_record",
        specialInstructions: "special_instructions",
        symbolDescription: "symbol_description",
        whenIssued: "when_issued",
        yieldRecords: "yield_records",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponseTrade$;
(function (CancelTradeResponseTrade$) {
    /** @deprecated use `CancelTradeResponseTrade$inboundSchema` instead. */
    CancelTradeResponseTrade$.inboundSchema = exports.CancelTradeResponseTrade$inboundSchema;
    /** @deprecated use `CancelTradeResponseTrade$outboundSchema` instead. */
    CancelTradeResponseTrade$.outboundSchema = exports.CancelTradeResponseTrade$outboundSchema;
})(CancelTradeResponseTrade$ || (exports.CancelTradeResponseTrade$ = CancelTradeResponseTrade$ = {}));
/** @internal */
exports.CancelTradeResponse$inboundSchema = z.object({
    trade: z.nullable(z.lazy(() => exports.CancelTradeResponseTrade$inboundSchema))
        .optional(),
});
/** @internal */
exports.CancelTradeResponse$outboundSchema = z.object({
    trade: z.nullable(z.lazy(() => exports.CancelTradeResponseTrade$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CancelTradeResponse$;
(function (CancelTradeResponse$) {
    /** @deprecated use `CancelTradeResponse$inboundSchema` instead. */
    CancelTradeResponse$.inboundSchema = exports.CancelTradeResponse$inboundSchema;
    /** @deprecated use `CancelTradeResponse$outboundSchema` instead. */
    CancelTradeResponse$.outboundSchema = exports.CancelTradeResponse$outboundSchema;
})(CancelTradeResponse$ || (exports.CancelTradeResponse$ = CancelTradeResponse$ = {}));
//# sourceMappingURL=canceltraderesponse.js.map