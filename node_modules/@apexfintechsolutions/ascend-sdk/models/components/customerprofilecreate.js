"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerProfileCreate$ = exports.CustomerProfileCreate$outboundSchema = exports.CustomerProfileCreate$inboundSchema = exports.TotalNetWorthRangeUsd$ = exports.TotalNetWorthRangeUsd$outboundSchema = exports.TotalNetWorthRangeUsd$inboundSchema = exports.LiquidNetWorthRangeUsd$ = exports.LiquidNetWorthRangeUsd$outboundSchema = exports.LiquidNetWorthRangeUsd$inboundSchema = exports.InvestmentExperience$ = exports.InvestmentExperience$outboundSchema = exports.InvestmentExperience$inboundSchema = exports.AnnualIncomeRangeUsd$ = exports.AnnualIncomeRangeUsd$outboundSchema = exports.AnnualIncomeRangeUsd$inboundSchema = exports.TotalNetWorthRangeUsd = exports.LiquidNetWorthRangeUsd = exports.InvestmentExperience = exports.AnnualIncomeRangeUsd = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * Annual income range; the low number is exclusive, the high number is inclusive
 */
var AnnualIncomeRangeUsd;
(function (AnnualIncomeRangeUsd) {
    AnnualIncomeRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    AnnualIncomeRangeUsd["Under25K"] = "UNDER_25K";
    AnnualIncomeRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    AnnualIncomeRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    AnnualIncomeRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    AnnualIncomeRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    AnnualIncomeRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    AnnualIncomeRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    AnnualIncomeRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    AnnualIncomeRangeUsd["Over5M"] = "OVER_5M";
})(AnnualIncomeRangeUsd || (exports.AnnualIncomeRangeUsd = AnnualIncomeRangeUsd = {}));
/**
 * Investment experience.
 */
var InvestmentExperience;
(function (InvestmentExperience) {
    InvestmentExperience["InvestmentExperienceUnspecified"] = "INVESTMENT_EXPERIENCE_UNSPECIFIED";
    InvestmentExperience["None"] = "NONE";
    InvestmentExperience["Limited"] = "LIMITED";
    InvestmentExperience["Good"] = "GOOD";
    InvestmentExperience["Extensive"] = "EXTENSIVE";
})(InvestmentExperience || (exports.InvestmentExperience = InvestmentExperience = {}));
/**
 * Liquid net worth range; the low number is exclusive, the high number is inclusive
 */
var LiquidNetWorthRangeUsd;
(function (LiquidNetWorthRangeUsd) {
    LiquidNetWorthRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    LiquidNetWorthRangeUsd["Under25K"] = "UNDER_25K";
    LiquidNetWorthRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    LiquidNetWorthRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    LiquidNetWorthRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    LiquidNetWorthRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    LiquidNetWorthRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    LiquidNetWorthRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    LiquidNetWorthRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    LiquidNetWorthRangeUsd["Over5M"] = "OVER_5M";
})(LiquidNetWorthRangeUsd || (exports.LiquidNetWorthRangeUsd = LiquidNetWorthRangeUsd = {}));
/**
 * Total net worth range; the low number is exclusive, the high number is inclusive
 */
var TotalNetWorthRangeUsd;
(function (TotalNetWorthRangeUsd) {
    TotalNetWorthRangeUsd["UsdRangeUnspecified"] = "USD_RANGE_UNSPECIFIED";
    TotalNetWorthRangeUsd["Under25K"] = "UNDER_25K";
    TotalNetWorthRangeUsd["From25KTo50K"] = "FROM_25K_TO_50K";
    TotalNetWorthRangeUsd["From50KTo100K"] = "FROM_50K_TO_100K";
    TotalNetWorthRangeUsd["From100KTo200K"] = "FROM_100K_TO_200K";
    TotalNetWorthRangeUsd["From200KTo300K"] = "FROM_200K_TO_300K";
    TotalNetWorthRangeUsd["From300KTo500K"] = "FROM_300K_TO_500K";
    TotalNetWorthRangeUsd["From500KTo1M"] = "FROM_500K_TO_1M";
    TotalNetWorthRangeUsd["From1MTo5M"] = "FROM_1M_TO_5M";
    TotalNetWorthRangeUsd["Over5M"] = "OVER_5M";
})(TotalNetWorthRangeUsd || (exports.TotalNetWorthRangeUsd = TotalNetWorthRangeUsd = {}));
/** @internal */
exports.AnnualIncomeRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(AnnualIncomeRangeUsd),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.AnnualIncomeRangeUsd$outboundSchema = z.union([
    z.nativeEnum(AnnualIncomeRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AnnualIncomeRangeUsd$;
(function (AnnualIncomeRangeUsd$) {
    /** @deprecated use `AnnualIncomeRangeUsd$inboundSchema` instead. */
    AnnualIncomeRangeUsd$.inboundSchema = exports.AnnualIncomeRangeUsd$inboundSchema;
    /** @deprecated use `AnnualIncomeRangeUsd$outboundSchema` instead. */
    AnnualIncomeRangeUsd$.outboundSchema = exports.AnnualIncomeRangeUsd$outboundSchema;
})(AnnualIncomeRangeUsd$ || (exports.AnnualIncomeRangeUsd$ = AnnualIncomeRangeUsd$ = {}));
/** @internal */
exports.InvestmentExperience$inboundSchema = z
    .union([
    z.nativeEnum(InvestmentExperience),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.InvestmentExperience$outboundSchema = z.union([
    z.nativeEnum(InvestmentExperience),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InvestmentExperience$;
(function (InvestmentExperience$) {
    /** @deprecated use `InvestmentExperience$inboundSchema` instead. */
    InvestmentExperience$.inboundSchema = exports.InvestmentExperience$inboundSchema;
    /** @deprecated use `InvestmentExperience$outboundSchema` instead. */
    InvestmentExperience$.outboundSchema = exports.InvestmentExperience$outboundSchema;
})(InvestmentExperience$ || (exports.InvestmentExperience$ = InvestmentExperience$ = {}));
/** @internal */
exports.LiquidNetWorthRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(LiquidNetWorthRangeUsd),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.LiquidNetWorthRangeUsd$outboundSchema = z.union([
    z.nativeEnum(LiquidNetWorthRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LiquidNetWorthRangeUsd$;
(function (LiquidNetWorthRangeUsd$) {
    /** @deprecated use `LiquidNetWorthRangeUsd$inboundSchema` instead. */
    LiquidNetWorthRangeUsd$.inboundSchema = exports.LiquidNetWorthRangeUsd$inboundSchema;
    /** @deprecated use `LiquidNetWorthRangeUsd$outboundSchema` instead. */
    LiquidNetWorthRangeUsd$.outboundSchema = exports.LiquidNetWorthRangeUsd$outboundSchema;
})(LiquidNetWorthRangeUsd$ || (exports.LiquidNetWorthRangeUsd$ = LiquidNetWorthRangeUsd$ = {}));
/** @internal */
exports.TotalNetWorthRangeUsd$inboundSchema = z
    .union([
    z.nativeEnum(TotalNetWorthRangeUsd),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TotalNetWorthRangeUsd$outboundSchema = z.union([
    z.nativeEnum(TotalNetWorthRangeUsd),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TotalNetWorthRangeUsd$;
(function (TotalNetWorthRangeUsd$) {
    /** @deprecated use `TotalNetWorthRangeUsd$inboundSchema` instead. */
    TotalNetWorthRangeUsd$.inboundSchema = exports.TotalNetWorthRangeUsd$inboundSchema;
    /** @deprecated use `TotalNetWorthRangeUsd$outboundSchema` instead. */
    TotalNetWorthRangeUsd$.outboundSchema = exports.TotalNetWorthRangeUsd$outboundSchema;
})(TotalNetWorthRangeUsd$ || (exports.TotalNetWorthRangeUsd$ = TotalNetWorthRangeUsd$ = {}));
/** @internal */
exports.CustomerProfileCreate$inboundSchema = z.object({
    annual_income_range_usd: exports.AnnualIncomeRangeUsd$inboundSchema.optional(),
    federal_tax_bracket: z.number().optional(),
    investment_experience: exports.InvestmentExperience$inboundSchema.optional(),
    liquid_net_worth_range_usd: exports.LiquidNetWorthRangeUsd$inboundSchema.optional(),
    total_net_worth_range_usd: exports.TotalNetWorthRangeUsd$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "annual_income_range_usd": "annualIncomeRangeUsd",
        "federal_tax_bracket": "federalTaxBracket",
        "investment_experience": "investmentExperience",
        "liquid_net_worth_range_usd": "liquidNetWorthRangeUsd",
        "total_net_worth_range_usd": "totalNetWorthRangeUsd",
    });
});
/** @internal */
exports.CustomerProfileCreate$outboundSchema = z.object({
    annualIncomeRangeUsd: exports.AnnualIncomeRangeUsd$outboundSchema.optional(),
    federalTaxBracket: z.number().optional(),
    investmentExperience: exports.InvestmentExperience$outboundSchema.optional(),
    liquidNetWorthRangeUsd: exports.LiquidNetWorthRangeUsd$outboundSchema.optional(),
    totalNetWorthRangeUsd: exports.TotalNetWorthRangeUsd$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        annualIncomeRangeUsd: "annual_income_range_usd",
        federalTaxBracket: "federal_tax_bracket",
        investmentExperience: "investment_experience",
        liquidNetWorthRangeUsd: "liquid_net_worth_range_usd",
        totalNetWorthRangeUsd: "total_net_worth_range_usd",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerProfileCreate$;
(function (CustomerProfileCreate$) {
    /** @deprecated use `CustomerProfileCreate$inboundSchema` instead. */
    CustomerProfileCreate$.inboundSchema = exports.CustomerProfileCreate$inboundSchema;
    /** @deprecated use `CustomerProfileCreate$outboundSchema` instead. */
    CustomerProfileCreate$.outboundSchema = exports.CustomerProfileCreate$outboundSchema;
})(CustomerProfileCreate$ || (exports.CustomerProfileCreate$ = CustomerProfileCreate$ = {}));
//# sourceMappingURL=customerprofilecreate.js.map