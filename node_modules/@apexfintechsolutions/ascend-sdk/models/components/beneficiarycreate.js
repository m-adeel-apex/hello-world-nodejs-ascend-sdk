"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BeneficiaryCreate$ = exports.BeneficiaryCreate$outboundSchema = exports.BeneficiaryCreate$inboundSchema = exports.BeneficiaryCreateTaxIdType$ = exports.BeneficiaryCreateTaxIdType$outboundSchema = exports.BeneficiaryCreateTaxIdType$inboundSchema = exports.BeneficiaryCreateRelationType$ = exports.BeneficiaryCreateRelationType$outboundSchema = exports.BeneficiaryCreateRelationType$inboundSchema = exports.BeneficiaryCreateEntityType$ = exports.BeneficiaryCreateEntityType$outboundSchema = exports.BeneficiaryCreateEntityType$inboundSchema = exports.BeneficiaryCreateTaxIdType = exports.BeneficiaryCreateRelationType = exports.BeneficiaryCreateEntityType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const datecreate_js_1 = require("./datecreate.js");
const phonenumbercreate_js_1 = require("./phonenumbercreate.js");
const postaladdresscreate_js_1 = require("./postaladdresscreate.js");
/**
 * The entity type of the beneficiary; Required if the beneficiary is a legal entity.
 */
var BeneficiaryCreateEntityType;
(function (BeneficiaryCreateEntityType) {
    BeneficiaryCreateEntityType["EntityTypeUnspecified"] = "ENTITY_TYPE_UNSPECIFIED";
    BeneficiaryCreateEntityType["Corporation"] = "CORPORATION";
    BeneficiaryCreateEntityType["LimitedLiabilityCompany"] = "LIMITED_LIABILITY_COMPANY";
    BeneficiaryCreateEntityType["Partnership"] = "PARTNERSHIP";
    BeneficiaryCreateEntityType["Trust"] = "TRUST";
    BeneficiaryCreateEntityType["Estate"] = "ESTATE";
})(BeneficiaryCreateEntityType || (exports.BeneficiaryCreateEntityType = BeneficiaryCreateEntityType = {}));
/**
 * The relationship of the beneficiary to the account owner
 */
var BeneficiaryCreateRelationType;
(function (BeneficiaryCreateRelationType) {
    BeneficiaryCreateRelationType["RelationTypeUnspecified"] = "RELATION_TYPE_UNSPECIFIED";
    BeneficiaryCreateRelationType["Spouse"] = "SPOUSE";
    BeneficiaryCreateRelationType["Trust"] = "TRUST";
    BeneficiaryCreateRelationType["Other"] = "OTHER";
})(BeneficiaryCreateRelationType || (exports.BeneficiaryCreateRelationType = BeneficiaryCreateRelationType = {}));
/**
 * The nature of the U.S. Tax ID indicated in the related tax_id field; Examples include ITIN, SSN, EIN. Tax id type is required if birth date is not provided.
 */
var BeneficiaryCreateTaxIdType;
(function (BeneficiaryCreateTaxIdType) {
    BeneficiaryCreateTaxIdType["TaxIdTypeUnspecified"] = "TAX_ID_TYPE_UNSPECIFIED";
    BeneficiaryCreateTaxIdType["TaxIdTypeSsn"] = "TAX_ID_TYPE_SSN";
    BeneficiaryCreateTaxIdType["TaxIdTypeItin"] = "TAX_ID_TYPE_ITIN";
    BeneficiaryCreateTaxIdType["TaxIdTypeEin"] = "TAX_ID_TYPE_EIN";
})(BeneficiaryCreateTaxIdType || (exports.BeneficiaryCreateTaxIdType = BeneficiaryCreateTaxIdType = {}));
/** @internal */
exports.BeneficiaryCreateEntityType$inboundSchema = z
    .union([
    z.nativeEnum(BeneficiaryCreateEntityType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BeneficiaryCreateEntityType$outboundSchema = z.union([
    z.nativeEnum(BeneficiaryCreateEntityType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BeneficiaryCreateEntityType$;
(function (BeneficiaryCreateEntityType$) {
    /** @deprecated use `BeneficiaryCreateEntityType$inboundSchema` instead. */
    BeneficiaryCreateEntityType$.inboundSchema = exports.BeneficiaryCreateEntityType$inboundSchema;
    /** @deprecated use `BeneficiaryCreateEntityType$outboundSchema` instead. */
    BeneficiaryCreateEntityType$.outboundSchema = exports.BeneficiaryCreateEntityType$outboundSchema;
})(BeneficiaryCreateEntityType$ || (exports.BeneficiaryCreateEntityType$ = BeneficiaryCreateEntityType$ = {}));
/** @internal */
exports.BeneficiaryCreateRelationType$inboundSchema = z
    .union([
    z.nativeEnum(BeneficiaryCreateRelationType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BeneficiaryCreateRelationType$outboundSchema = z.union([
    z.nativeEnum(BeneficiaryCreateRelationType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BeneficiaryCreateRelationType$;
(function (BeneficiaryCreateRelationType$) {
    /** @deprecated use `BeneficiaryCreateRelationType$inboundSchema` instead. */
    BeneficiaryCreateRelationType$.inboundSchema = exports.BeneficiaryCreateRelationType$inboundSchema;
    /** @deprecated use `BeneficiaryCreateRelationType$outboundSchema` instead. */
    BeneficiaryCreateRelationType$.outboundSchema = exports.BeneficiaryCreateRelationType$outboundSchema;
})(BeneficiaryCreateRelationType$ || (exports.BeneficiaryCreateRelationType$ = BeneficiaryCreateRelationType$ = {}));
/** @internal */
exports.BeneficiaryCreateTaxIdType$inboundSchema = z
    .union([
    z.nativeEnum(BeneficiaryCreateTaxIdType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BeneficiaryCreateTaxIdType$outboundSchema = z.union([
    z.nativeEnum(BeneficiaryCreateTaxIdType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BeneficiaryCreateTaxIdType$;
(function (BeneficiaryCreateTaxIdType$) {
    /** @deprecated use `BeneficiaryCreateTaxIdType$inboundSchema` instead. */
    BeneficiaryCreateTaxIdType$.inboundSchema = exports.BeneficiaryCreateTaxIdType$inboundSchema;
    /** @deprecated use `BeneficiaryCreateTaxIdType$outboundSchema` instead. */
    BeneficiaryCreateTaxIdType$.outboundSchema = exports.BeneficiaryCreateTaxIdType$outboundSchema;
})(BeneficiaryCreateTaxIdType$ || (exports.BeneficiaryCreateTaxIdType$ = BeneficiaryCreateTaxIdType$ = {}));
/** @internal */
exports.BeneficiaryCreate$inboundSchema = z.object({
    beneficiary_percentage: z.number().int(),
    birth_date: datecreate_js_1.DateCreate$inboundSchema.optional(),
    email: z.string().optional(),
    entity_name: z.string().optional(),
    entity_type: exports.BeneficiaryCreateEntityType$inboundSchema.optional(),
    family_name: z.string().optional(),
    given_name: z.string().optional(),
    mailing_address: postaladdresscreate_js_1.PostalAddressCreate$inboundSchema.optional(),
    middle_names: z.string().optional(),
    phone_number: phonenumbercreate_js_1.PhoneNumberCreate$inboundSchema.optional(),
    relation_type: exports.BeneficiaryCreateRelationType$inboundSchema,
    tax_id: z.string().optional(),
    tax_id_type: exports.BeneficiaryCreateTaxIdType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "beneficiary_percentage": "beneficiaryPercentage",
        "birth_date": "birthDate",
        "entity_name": "entityName",
        "entity_type": "entityType",
        "family_name": "familyName",
        "given_name": "givenName",
        "mailing_address": "mailingAddress",
        "middle_names": "middleNames",
        "phone_number": "phoneNumber",
        "relation_type": "relationType",
        "tax_id": "taxId",
        "tax_id_type": "taxIdType",
    });
});
/** @internal */
exports.BeneficiaryCreate$outboundSchema = z.object({
    beneficiaryPercentage: z.number().int(),
    birthDate: datecreate_js_1.DateCreate$outboundSchema.optional(),
    email: z.string().optional(),
    entityName: z.string().optional(),
    entityType: exports.BeneficiaryCreateEntityType$outboundSchema.optional(),
    familyName: z.string().optional(),
    givenName: z.string().optional(),
    mailingAddress: postaladdresscreate_js_1.PostalAddressCreate$outboundSchema.optional(),
    middleNames: z.string().optional(),
    phoneNumber: phonenumbercreate_js_1.PhoneNumberCreate$outboundSchema.optional(),
    relationType: exports.BeneficiaryCreateRelationType$outboundSchema,
    taxId: z.string().optional(),
    taxIdType: exports.BeneficiaryCreateTaxIdType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        beneficiaryPercentage: "beneficiary_percentage",
        birthDate: "birth_date",
        entityName: "entity_name",
        entityType: "entity_type",
        familyName: "family_name",
        givenName: "given_name",
        mailingAddress: "mailing_address",
        middleNames: "middle_names",
        phoneNumber: "phone_number",
        relationType: "relation_type",
        taxId: "tax_id",
        taxIdType: "tax_id_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BeneficiaryCreate$;
(function (BeneficiaryCreate$) {
    /** @deprecated use `BeneficiaryCreate$inboundSchema` instead. */
    BeneficiaryCreate$.inboundSchema = exports.BeneficiaryCreate$inboundSchema;
    /** @deprecated use `BeneficiaryCreate$outboundSchema` instead. */
    BeneficiaryCreate$.outboundSchema = exports.BeneficiaryCreate$outboundSchema;
})(BeneficiaryCreate$ || (exports.BeneficiaryCreate$ = BeneficiaryCreate$ = {}));
//# sourceMappingURL=beneficiarycreate.js.map