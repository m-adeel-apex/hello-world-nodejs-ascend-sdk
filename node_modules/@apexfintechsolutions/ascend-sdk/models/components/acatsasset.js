"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcatsAsset$ = exports.AcatsAsset$outboundSchema = exports.AcatsAsset$inboundSchema = exports.AcatsAssetType$ = exports.AcatsAssetType$outboundSchema = exports.AcatsAssetType$inboundSchema = exports.AcatsAssetPosition$ = exports.AcatsAssetPosition$outboundSchema = exports.AcatsAssetPosition$inboundSchema = exports.AcatsAssetQuantity$ = exports.AcatsAssetQuantity$outboundSchema = exports.AcatsAssetQuantity$inboundSchema = exports.AssetCategory$ = exports.AssetCategory$outboundSchema = exports.AssetCategory$inboundSchema = exports.AcatsAssetType = exports.AssetCategory = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The NSCC asset category
 */
var AssetCategory;
(function (AssetCategory) {
    AssetCategory["AssetCategoryUnspecified"] = "ASSET_CATEGORY_UNSPECIFIED";
    AssetCategory["AlternativeInvestment"] = "ALTERNATIVE_INVESTMENT";
    AssetCategory["Annuity"] = "ANNUITY";
    AssetCategory["AuctionRatePreferredUit"] = "AUCTION_RATE_PREFERRED_UIT";
    AssetCategory["CdAndCommercialPaper"] = "CD_AND_COMMERCIAL_PAPER";
    AssetCategory["CorporateBond"] = "CORPORATE_BOND";
    AssetCategory["DeferredSaleChargeUit"] = "DEFERRED_SALE_CHARGE_UIT";
    AssetCategory["Equity"] = "EQUITY";
    AssetCategory["ForeignCurrency"] = "FOREIGN_CURRENCY";
    AssetCategory["ForeignDebt"] = "FOREIGN_DEBT";
    AssetCategory["ForeignEquity"] = "FOREIGN_EQUITY";
    AssetCategory["LifeInsurance"] = "LIFE_INSURANCE";
    AssetCategory["LimitedPartnership"] = "LIMITED_PARTNERSHIP";
    AssetCategory["MortgageBackedSecurity"] = "MORTGAGE_BACKED_SECURITY";
    AssetCategory["MutualFundMoneyMarket"] = "MUTUAL_FUND_MONEY_MARKET";
    AssetCategory["MutualFundNonMoneyMarket"] = "MUTUAL_FUND_NON_MONEY_MARKET";
    AssetCategory["MunicipalBond"] = "MUNICIPAL_BOND";
    AssetCategory["Option"] = "OPTION";
    AssetCategory["RealEstateInvestmentTrust"] = "REAL_ESTATE_INVESTMENT_TRUST";
    AssetCategory["Right"] = "RIGHT";
    AssetCategory["UsGovernment"] = "US_GOVERNMENT";
    AssetCategory["UnitInvestmentTrust"] = "UNIT_INVESTMENT_TRUST";
    AssetCategory["Unit"] = "UNIT";
    AssetCategory["Warrant"] = "WARRANT";
    AssetCategory["ZeroCouponBond"] = "ZERO_COUPON_BOND";
})(AssetCategory || (exports.AssetCategory = AssetCategory = {}));
/**
 * The asset identifier type
 */
var AcatsAssetType;
(function (AcatsAssetType) {
    AcatsAssetType["IdentifierTypeUnspecified"] = "IDENTIFIER_TYPE_UNSPECIFIED";
    AcatsAssetType["CurrencyCode"] = "CURRENCY_CODE";
    AcatsAssetType["Cusip"] = "CUSIP";
    AcatsAssetType["Symbol"] = "SYMBOL";
    AcatsAssetType["Isin"] = "ISIN";
    AcatsAssetType["AssetId"] = "ASSET_ID";
})(AcatsAssetType || (exports.AcatsAssetType = AcatsAssetType = {}));
/** @internal */
exports.AssetCategory$inboundSchema = z
    .union([
    z.nativeEnum(AssetCategory),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.AssetCategory$outboundSchema = z.union([
    z.nativeEnum(AssetCategory),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AssetCategory$;
(function (AssetCategory$) {
    /** @deprecated use `AssetCategory$inboundSchema` instead. */
    AssetCategory$.inboundSchema = exports.AssetCategory$inboundSchema;
    /** @deprecated use `AssetCategory$outboundSchema` instead. */
    AssetCategory$.outboundSchema = exports.AssetCategory$outboundSchema;
})(AssetCategory$ || (exports.AssetCategory$ = AssetCategory$ = {}));
/** @internal */
exports.AcatsAssetQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.AcatsAssetQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AcatsAssetQuantity$;
(function (AcatsAssetQuantity$) {
    /** @deprecated use `AcatsAssetQuantity$inboundSchema` instead. */
    AcatsAssetQuantity$.inboundSchema = exports.AcatsAssetQuantity$inboundSchema;
    /** @deprecated use `AcatsAssetQuantity$outboundSchema` instead. */
    AcatsAssetQuantity$.outboundSchema = exports.AcatsAssetQuantity$outboundSchema;
})(AcatsAssetQuantity$ || (exports.AcatsAssetQuantity$ = AcatsAssetQuantity$ = {}));
/** @internal */
exports.AcatsAssetPosition$inboundSchema = z.object({
    quantity: z.nullable(z.lazy(() => exports.AcatsAssetQuantity$inboundSchema))
        .optional(),
});
/** @internal */
exports.AcatsAssetPosition$outboundSchema = z.object({
    quantity: z.nullable(z.lazy(() => exports.AcatsAssetQuantity$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AcatsAssetPosition$;
(function (AcatsAssetPosition$) {
    /** @deprecated use `AcatsAssetPosition$inboundSchema` instead. */
    AcatsAssetPosition$.inboundSchema = exports.AcatsAssetPosition$inboundSchema;
    /** @deprecated use `AcatsAssetPosition$outboundSchema` instead. */
    AcatsAssetPosition$.outboundSchema = exports.AcatsAssetPosition$outboundSchema;
})(AcatsAssetPosition$ || (exports.AcatsAssetPosition$ = AcatsAssetPosition$ = {}));
/** @internal */
exports.AcatsAssetType$inboundSchema = z.nativeEnum(AcatsAssetType);
/** @internal */
exports.AcatsAssetType$outboundSchema = exports.AcatsAssetType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AcatsAssetType$;
(function (AcatsAssetType$) {
    /** @deprecated use `AcatsAssetType$inboundSchema` instead. */
    AcatsAssetType$.inboundSchema = exports.AcatsAssetType$inboundSchema;
    /** @deprecated use `AcatsAssetType$outboundSchema` instead. */
    AcatsAssetType$.outboundSchema = exports.AcatsAssetType$outboundSchema;
})(AcatsAssetType$ || (exports.AcatsAssetType$ = AcatsAssetType$ = {}));
/** @internal */
exports.AcatsAsset$inboundSchema = z.object({
    asset_category: exports.AssetCategory$inboundSchema.optional(),
    asset_id: z.string().optional(),
    identifier: z.string().optional(),
    position: z.nullable(z.lazy(() => exports.AcatsAssetPosition$inboundSchema))
        .optional(),
    type: exports.AcatsAssetType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "asset_category": "assetCategory",
        "asset_id": "assetId",
    });
});
/** @internal */
exports.AcatsAsset$outboundSchema = z.object({
    assetCategory: exports.AssetCategory$outboundSchema.optional(),
    assetId: z.string().optional(),
    identifier: z.string().optional(),
    position: z.nullable(z.lazy(() => exports.AcatsAssetPosition$outboundSchema))
        .optional(),
    type: exports.AcatsAssetType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        assetCategory: "asset_category",
        assetId: "asset_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AcatsAsset$;
(function (AcatsAsset$) {
    /** @deprecated use `AcatsAsset$inboundSchema` instead. */
    AcatsAsset$.inboundSchema = exports.AcatsAsset$inboundSchema;
    /** @deprecated use `AcatsAsset$outboundSchema` instead. */
    AcatsAsset$.outboundSchema = exports.AcatsAsset$outboundSchema;
})(AcatsAsset$ || (exports.AcatsAsset$ = AcatsAsset$ = {}));
//# sourceMappingURL=acatsasset.js.map