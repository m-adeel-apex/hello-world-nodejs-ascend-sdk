"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasketOrderCreate$ = exports.BasketOrderCreate$outboundSchema = exports.BasketOrderCreate$inboundSchema = exports.BasketOrderCreateTimeInForce$ = exports.BasketOrderCreateTimeInForce$outboundSchema = exports.BasketOrderCreateTimeInForce$inboundSchema = exports.BasketOrderCreateSide$ = exports.BasketOrderCreateSide$outboundSchema = exports.BasketOrderCreateSide$inboundSchema = exports.BasketOrderCreateOrderType$ = exports.BasketOrderCreateOrderType$outboundSchema = exports.BasketOrderCreateOrderType$inboundSchema = exports.BasketOrderCreateIdentifierType$ = exports.BasketOrderCreateIdentifierType$outboundSchema = exports.BasketOrderCreateIdentifierType$inboundSchema = exports.BasketOrderCreateAssetType$ = exports.BasketOrderCreateAssetType$outboundSchema = exports.BasketOrderCreateAssetType$inboundSchema = exports.BasketOrderCreateTimeInForce = exports.BasketOrderCreateSide = exports.BasketOrderCreateOrderType = exports.BasketOrderCreateIdentifierType = exports.BasketOrderCreateAssetType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const decimalcreate_js_1 = require("./decimalcreate.js");
/**
 * The type of the asset in this order
 */
var BasketOrderCreateAssetType;
(function (BasketOrderCreateAssetType) {
    BasketOrderCreateAssetType["AssetTypeUnspecified"] = "ASSET_TYPE_UNSPECIFIED";
    BasketOrderCreateAssetType["Equity"] = "EQUITY";
    BasketOrderCreateAssetType["MutualFund"] = "MUTUAL_FUND";
})(BasketOrderCreateAssetType || (exports.BasketOrderCreateAssetType = BasketOrderCreateAssetType = {}));
/**
 * The identifier type of the asset being ordered. For Equities: only SYMBOL is supported For Mutual Funds: only SYMBOL and CUSIP are supported
 */
var BasketOrderCreateIdentifierType;
(function (BasketOrderCreateIdentifierType) {
    BasketOrderCreateIdentifierType["Symbol"] = "SYMBOL";
    BasketOrderCreateIdentifierType["Cusip"] = "CUSIP";
    BasketOrderCreateIdentifierType["Isin"] = "ISIN";
})(BasketOrderCreateIdentifierType || (exports.BasketOrderCreateIdentifierType = BasketOrderCreateIdentifierType = {}));
/**
 * The execution type of this order.
 */
var BasketOrderCreateOrderType;
(function (BasketOrderCreateOrderType) {
    BasketOrderCreateOrderType["OrderTypeUnspecified"] = "ORDER_TYPE_UNSPECIFIED";
    BasketOrderCreateOrderType["Market"] = "MARKET";
})(BasketOrderCreateOrderType || (exports.BasketOrderCreateOrderType = BasketOrderCreateOrderType = {}));
/**
 * The side of this order.
 */
var BasketOrderCreateSide;
(function (BasketOrderCreateSide) {
    BasketOrderCreateSide["SideUnspecified"] = "SIDE_UNSPECIFIED";
    BasketOrderCreateSide["Buy"] = "BUY";
    BasketOrderCreateSide["Sell"] = "SELL";
})(BasketOrderCreateSide || (exports.BasketOrderCreateSide = BasketOrderCreateSide = {}));
/**
 * Must be the value "DAY". Regulatory requirements dictate that the system capture the intended time_in_force, which is why this a mandatory field.
 */
var BasketOrderCreateTimeInForce;
(function (BasketOrderCreateTimeInForce) {
    BasketOrderCreateTimeInForce["TimeInForceUnspecified"] = "TIME_IN_FORCE_UNSPECIFIED";
    BasketOrderCreateTimeInForce["Day"] = "DAY";
})(BasketOrderCreateTimeInForce || (exports.BasketOrderCreateTimeInForce = BasketOrderCreateTimeInForce = {}));
/** @internal */
exports.BasketOrderCreateAssetType$inboundSchema = z
    .union([
    z.nativeEnum(BasketOrderCreateAssetType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BasketOrderCreateAssetType$outboundSchema = z.union([
    z.nativeEnum(BasketOrderCreateAssetType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketOrderCreateAssetType$;
(function (BasketOrderCreateAssetType$) {
    /** @deprecated use `BasketOrderCreateAssetType$inboundSchema` instead. */
    BasketOrderCreateAssetType$.inboundSchema = exports.BasketOrderCreateAssetType$inboundSchema;
    /** @deprecated use `BasketOrderCreateAssetType$outboundSchema` instead. */
    BasketOrderCreateAssetType$.outboundSchema = exports.BasketOrderCreateAssetType$outboundSchema;
})(BasketOrderCreateAssetType$ || (exports.BasketOrderCreateAssetType$ = BasketOrderCreateAssetType$ = {}));
/** @internal */
exports.BasketOrderCreateIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(BasketOrderCreateIdentifierType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BasketOrderCreateIdentifierType$outboundSchema = z.union([
    z.nativeEnum(BasketOrderCreateIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketOrderCreateIdentifierType$;
(function (BasketOrderCreateIdentifierType$) {
    /** @deprecated use `BasketOrderCreateIdentifierType$inboundSchema` instead. */
    BasketOrderCreateIdentifierType$.inboundSchema = exports.BasketOrderCreateIdentifierType$inboundSchema;
    /** @deprecated use `BasketOrderCreateIdentifierType$outboundSchema` instead. */
    BasketOrderCreateIdentifierType$.outboundSchema = exports.BasketOrderCreateIdentifierType$outboundSchema;
})(BasketOrderCreateIdentifierType$ || (exports.BasketOrderCreateIdentifierType$ = BasketOrderCreateIdentifierType$ = {}));
/** @internal */
exports.BasketOrderCreateOrderType$inboundSchema = z
    .union([
    z.nativeEnum(BasketOrderCreateOrderType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BasketOrderCreateOrderType$outboundSchema = z.union([
    z.nativeEnum(BasketOrderCreateOrderType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketOrderCreateOrderType$;
(function (BasketOrderCreateOrderType$) {
    /** @deprecated use `BasketOrderCreateOrderType$inboundSchema` instead. */
    BasketOrderCreateOrderType$.inboundSchema = exports.BasketOrderCreateOrderType$inboundSchema;
    /** @deprecated use `BasketOrderCreateOrderType$outboundSchema` instead. */
    BasketOrderCreateOrderType$.outboundSchema = exports.BasketOrderCreateOrderType$outboundSchema;
})(BasketOrderCreateOrderType$ || (exports.BasketOrderCreateOrderType$ = BasketOrderCreateOrderType$ = {}));
/** @internal */
exports.BasketOrderCreateSide$inboundSchema = z
    .union([
    z.nativeEnum(BasketOrderCreateSide),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BasketOrderCreateSide$outboundSchema = z.union([
    z.nativeEnum(BasketOrderCreateSide),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketOrderCreateSide$;
(function (BasketOrderCreateSide$) {
    /** @deprecated use `BasketOrderCreateSide$inboundSchema` instead. */
    BasketOrderCreateSide$.inboundSchema = exports.BasketOrderCreateSide$inboundSchema;
    /** @deprecated use `BasketOrderCreateSide$outboundSchema` instead. */
    BasketOrderCreateSide$.outboundSchema = exports.BasketOrderCreateSide$outboundSchema;
})(BasketOrderCreateSide$ || (exports.BasketOrderCreateSide$ = BasketOrderCreateSide$ = {}));
/** @internal */
exports.BasketOrderCreateTimeInForce$inboundSchema = z
    .union([
    z.nativeEnum(BasketOrderCreateTimeInForce),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BasketOrderCreateTimeInForce$outboundSchema = z.union([
    z.nativeEnum(BasketOrderCreateTimeInForce),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketOrderCreateTimeInForce$;
(function (BasketOrderCreateTimeInForce$) {
    /** @deprecated use `BasketOrderCreateTimeInForce$inboundSchema` instead. */
    BasketOrderCreateTimeInForce$.inboundSchema = exports.BasketOrderCreateTimeInForce$inboundSchema;
    /** @deprecated use `BasketOrderCreateTimeInForce$outboundSchema` instead. */
    BasketOrderCreateTimeInForce$.outboundSchema = exports.BasketOrderCreateTimeInForce$outboundSchema;
})(BasketOrderCreateTimeInForce$ || (exports.BasketOrderCreateTimeInForce$ = BasketOrderCreateTimeInForce$ = {}));
/** @internal */
exports.BasketOrderCreate$inboundSchema = z.object({
    account_id: z.string(),
    asset_type: exports.BasketOrderCreateAssetType$inboundSchema,
    client_order_id: z.string(),
    client_order_received_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    currency_code: z.string().optional(),
    identifier: z.string(),
    identifier_type: exports.BasketOrderCreateIdentifierType$inboundSchema,
    notional_value: decimalcreate_js_1.DecimalCreate$inboundSchema.optional(),
    order_type: exports.BasketOrderCreateOrderType$inboundSchema,
    quantity: decimalcreate_js_1.DecimalCreate$inboundSchema.optional(),
    side: exports.BasketOrderCreateSide$inboundSchema,
    time_in_force: exports.BasketOrderCreateTimeInForce$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
        "asset_type": "assetType",
        "client_order_id": "clientOrderId",
        "client_order_received_time": "clientOrderReceivedTime",
        "currency_code": "currencyCode",
        "identifier_type": "identifierType",
        "notional_value": "notionalValue",
        "order_type": "orderType",
        "time_in_force": "timeInForce",
    });
});
/** @internal */
exports.BasketOrderCreate$outboundSchema = z.object({
    accountId: z.string(),
    assetType: exports.BasketOrderCreateAssetType$outboundSchema,
    clientOrderId: z.string(),
    clientOrderReceivedTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    currencyCode: z.string().optional(),
    identifier: z.string(),
    identifierType: exports.BasketOrderCreateIdentifierType$outboundSchema,
    notionalValue: decimalcreate_js_1.DecimalCreate$outboundSchema.optional(),
    orderType: exports.BasketOrderCreateOrderType$outboundSchema,
    quantity: decimalcreate_js_1.DecimalCreate$outboundSchema.optional(),
    side: exports.BasketOrderCreateSide$outboundSchema,
    timeInForce: exports.BasketOrderCreateTimeInForce$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
        assetType: "asset_type",
        clientOrderId: "client_order_id",
        clientOrderReceivedTime: "client_order_received_time",
        currencyCode: "currency_code",
        identifierType: "identifier_type",
        notionalValue: "notional_value",
        orderType: "order_type",
        timeInForce: "time_in_force",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BasketOrderCreate$;
(function (BasketOrderCreate$) {
    /** @deprecated use `BasketOrderCreate$inboundSchema` instead. */
    BasketOrderCreate$.inboundSchema = exports.BasketOrderCreate$inboundSchema;
    /** @deprecated use `BasketOrderCreate$outboundSchema` instead. */
    BasketOrderCreate$.outboundSchema = exports.BasketOrderCreate$outboundSchema;
})(BasketOrderCreate$ || (exports.BasketOrderCreate$ = BasketOrderCreate$ = {}));
//# sourceMappingURL=basketordercreate.js.map