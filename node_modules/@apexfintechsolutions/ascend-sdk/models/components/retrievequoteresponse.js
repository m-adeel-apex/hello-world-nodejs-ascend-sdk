"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetrieveQuoteResponse$ = exports.RetrieveQuoteResponse$outboundSchema = exports.RetrieveQuoteResponse$inboundSchema = exports.MinimumQuantity$ = exports.MinimumQuantity$outboundSchema = exports.MinimumQuantity$inboundSchema = exports.RetrieveQuoteResponseIdentifierType$ = exports.RetrieveQuoteResponseIdentifierType$outboundSchema = exports.RetrieveQuoteResponseIdentifierType$inboundSchema = exports.RetrieveQuoteResponseBrokerCapacity$ = exports.RetrieveQuoteResponseBrokerCapacity$outboundSchema = exports.RetrieveQuoteResponseBrokerCapacity$inboundSchema = exports.BidQuantity$ = exports.BidQuantity$outboundSchema = exports.BidQuantity$inboundSchema = exports.BidMinimumQuantity$ = exports.BidMinimumQuantity$outboundSchema = exports.BidMinimumQuantity$inboundSchema = exports.RetrieveQuoteResponseAssetType$ = exports.RetrieveQuoteResponseAssetType$outboundSchema = exports.RetrieveQuoteResponseAssetType$inboundSchema = exports.AskQuantity$ = exports.AskQuantity$outboundSchema = exports.AskQuantity$inboundSchema = exports.AskMinimumQuantity$ = exports.AskMinimumQuantity$outboundSchema = exports.AskMinimumQuantity$inboundSchema = exports.RetrieveQuoteResponseIdentifierType = exports.RetrieveQuoteResponseBrokerCapacity = exports.RetrieveQuoteResponseAssetType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const bidaskprice_js_1 = require("./bidaskprice.js");
/**
 * The type of asset referenced by the security identifier
 */
var RetrieveQuoteResponseAssetType;
(function (RetrieveQuoteResponseAssetType) {
    RetrieveQuoteResponseAssetType["AssetTypeUnspecified"] = "ASSET_TYPE_UNSPECIFIED";
    RetrieveQuoteResponseAssetType["Equity"] = "EQUITY";
    RetrieveQuoteResponseAssetType["FixedIncome"] = "FIXED_INCOME";
    RetrieveQuoteResponseAssetType["MutualFund"] = "MUTUAL_FUND";
    RetrieveQuoteResponseAssetType["Option"] = "OPTION";
})(RetrieveQuoteResponseAssetType || (exports.RetrieveQuoteResponseAssetType = RetrieveQuoteResponseAssetType = {}));
/**
 * Capacity used in determining bid and ask prices. Defaults to "AGENCY" if no value specified.
 */
var RetrieveQuoteResponseBrokerCapacity;
(function (RetrieveQuoteResponseBrokerCapacity) {
    RetrieveQuoteResponseBrokerCapacity["BrokerCapacityUnspecified"] = "BROKER_CAPACITY_UNSPECIFIED";
    RetrieveQuoteResponseBrokerCapacity["Agency"] = "AGENCY";
    RetrieveQuoteResponseBrokerCapacity["Principal"] = "PRINCIPAL";
})(RetrieveQuoteResponseBrokerCapacity || (exports.RetrieveQuoteResponseBrokerCapacity = RetrieveQuoteResponseBrokerCapacity = {}));
/**
 * The identifier type of the asset for which the best bid and offer is returned. This will be the same value as what was sent on the request.
 */
var RetrieveQuoteResponseIdentifierType;
(function (RetrieveQuoteResponseIdentifierType) {
    RetrieveQuoteResponseIdentifierType["AssetId"] = "ASSET_ID";
    RetrieveQuoteResponseIdentifierType["Cusip"] = "CUSIP";
    RetrieveQuoteResponseIdentifierType["Isin"] = "ISIN";
})(RetrieveQuoteResponseIdentifierType || (exports.RetrieveQuoteResponseIdentifierType = RetrieveQuoteResponseIdentifierType = {}));
/** @internal */
exports.AskMinimumQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.AskMinimumQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AskMinimumQuantity$;
(function (AskMinimumQuantity$) {
    /** @deprecated use `AskMinimumQuantity$inboundSchema` instead. */
    AskMinimumQuantity$.inboundSchema = exports.AskMinimumQuantity$inboundSchema;
    /** @deprecated use `AskMinimumQuantity$outboundSchema` instead. */
    AskMinimumQuantity$.outboundSchema = exports.AskMinimumQuantity$outboundSchema;
})(AskMinimumQuantity$ || (exports.AskMinimumQuantity$ = AskMinimumQuantity$ = {}));
/** @internal */
exports.AskQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.AskQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AskQuantity$;
(function (AskQuantity$) {
    /** @deprecated use `AskQuantity$inboundSchema` instead. */
    AskQuantity$.inboundSchema = exports.AskQuantity$inboundSchema;
    /** @deprecated use `AskQuantity$outboundSchema` instead. */
    AskQuantity$.outboundSchema = exports.AskQuantity$outboundSchema;
})(AskQuantity$ || (exports.AskQuantity$ = AskQuantity$ = {}));
/** @internal */
exports.RetrieveQuoteResponseAssetType$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveQuoteResponseAssetType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RetrieveQuoteResponseAssetType$outboundSchema = z.union([
    z.nativeEnum(RetrieveQuoteResponseAssetType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RetrieveQuoteResponseAssetType$;
(function (RetrieveQuoteResponseAssetType$) {
    /** @deprecated use `RetrieveQuoteResponseAssetType$inboundSchema` instead. */
    RetrieveQuoteResponseAssetType$.inboundSchema = exports.RetrieveQuoteResponseAssetType$inboundSchema;
    /** @deprecated use `RetrieveQuoteResponseAssetType$outboundSchema` instead. */
    RetrieveQuoteResponseAssetType$.outboundSchema = exports.RetrieveQuoteResponseAssetType$outboundSchema;
})(RetrieveQuoteResponseAssetType$ || (exports.RetrieveQuoteResponseAssetType$ = RetrieveQuoteResponseAssetType$ = {}));
/** @internal */
exports.BidMinimumQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.BidMinimumQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BidMinimumQuantity$;
(function (BidMinimumQuantity$) {
    /** @deprecated use `BidMinimumQuantity$inboundSchema` instead. */
    BidMinimumQuantity$.inboundSchema = exports.BidMinimumQuantity$inboundSchema;
    /** @deprecated use `BidMinimumQuantity$outboundSchema` instead. */
    BidMinimumQuantity$.outboundSchema = exports.BidMinimumQuantity$outboundSchema;
})(BidMinimumQuantity$ || (exports.BidMinimumQuantity$ = BidMinimumQuantity$ = {}));
/** @internal */
exports.BidQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.BidQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BidQuantity$;
(function (BidQuantity$) {
    /** @deprecated use `BidQuantity$inboundSchema` instead. */
    BidQuantity$.inboundSchema = exports.BidQuantity$inboundSchema;
    /** @deprecated use `BidQuantity$outboundSchema` instead. */
    BidQuantity$.outboundSchema = exports.BidQuantity$outboundSchema;
})(BidQuantity$ || (exports.BidQuantity$ = BidQuantity$ = {}));
/** @internal */
exports.RetrieveQuoteResponseBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveQuoteResponseBrokerCapacity),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RetrieveQuoteResponseBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(RetrieveQuoteResponseBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RetrieveQuoteResponseBrokerCapacity$;
(function (RetrieveQuoteResponseBrokerCapacity$) {
    /** @deprecated use `RetrieveQuoteResponseBrokerCapacity$inboundSchema` instead. */
    RetrieveQuoteResponseBrokerCapacity$.inboundSchema = exports.RetrieveQuoteResponseBrokerCapacity$inboundSchema;
    /** @deprecated use `RetrieveQuoteResponseBrokerCapacity$outboundSchema` instead. */
    RetrieveQuoteResponseBrokerCapacity$.outboundSchema = exports.RetrieveQuoteResponseBrokerCapacity$outboundSchema;
})(RetrieveQuoteResponseBrokerCapacity$ || (exports.RetrieveQuoteResponseBrokerCapacity$ = RetrieveQuoteResponseBrokerCapacity$ = {}));
/** @internal */
exports.RetrieveQuoteResponseIdentifierType$inboundSchema = z
    .union([
    z.nativeEnum(RetrieveQuoteResponseIdentifierType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RetrieveQuoteResponseIdentifierType$outboundSchema = z.union([
    z.nativeEnum(RetrieveQuoteResponseIdentifierType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RetrieveQuoteResponseIdentifierType$;
(function (RetrieveQuoteResponseIdentifierType$) {
    /** @deprecated use `RetrieveQuoteResponseIdentifierType$inboundSchema` instead. */
    RetrieveQuoteResponseIdentifierType$.inboundSchema = exports.RetrieveQuoteResponseIdentifierType$inboundSchema;
    /** @deprecated use `RetrieveQuoteResponseIdentifierType$outboundSchema` instead. */
    RetrieveQuoteResponseIdentifierType$.outboundSchema = exports.RetrieveQuoteResponseIdentifierType$outboundSchema;
})(RetrieveQuoteResponseIdentifierType$ || (exports.RetrieveQuoteResponseIdentifierType$ = RetrieveQuoteResponseIdentifierType$ = {}));
/** @internal */
exports.MinimumQuantity$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.MinimumQuantity$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var MinimumQuantity$;
(function (MinimumQuantity$) {
    /** @deprecated use `MinimumQuantity$inboundSchema` instead. */
    MinimumQuantity$.inboundSchema = exports.MinimumQuantity$inboundSchema;
    /** @deprecated use `MinimumQuantity$outboundSchema` instead. */
    MinimumQuantity$.outboundSchema = exports.MinimumQuantity$outboundSchema;
})(MinimumQuantity$ || (exports.MinimumQuantity$ = MinimumQuantity$ = {}));
/** @internal */
exports.RetrieveQuoteResponse$inboundSchema = z.object({
    account_id: z.string().optional(),
    ask_minimum_quantity: z.nullable(z.lazy(() => exports.AskMinimumQuantity$inboundSchema)).optional(),
    ask_prices: z.array(bidaskprice_js_1.BidAskPrice$inboundSchema).optional(),
    ask_quantity: z.nullable(z.lazy(() => exports.AskQuantity$inboundSchema)).optional(),
    asset_id: z.string().optional(),
    asset_type: exports.RetrieveQuoteResponseAssetType$inboundSchema.optional(),
    bid_minimum_quantity: z.nullable(z.lazy(() => exports.BidMinimumQuantity$inboundSchema)).optional(),
    bid_prices: z.array(bidaskprice_js_1.BidAskPrice$inboundSchema).optional(),
    bid_quantity: z.nullable(z.lazy(() => exports.BidQuantity$inboundSchema)).optional(),
    broker_capacity: exports.RetrieveQuoteResponseBrokerCapacity$inboundSchema.optional(),
    identifier: z.string().optional(),
    identifier_type: exports.RetrieveQuoteResponseIdentifierType$inboundSchema.optional(),
    minimum_quantity: z.nullable(z.lazy(() => exports.MinimumQuantity$inboundSchema))
        .optional(),
    response_generation_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
        "ask_minimum_quantity": "askMinimumQuantity",
        "ask_prices": "askPrices",
        "ask_quantity": "askQuantity",
        "asset_id": "assetId",
        "asset_type": "assetType",
        "bid_minimum_quantity": "bidMinimumQuantity",
        "bid_prices": "bidPrices",
        "bid_quantity": "bidQuantity",
        "broker_capacity": "brokerCapacity",
        "identifier_type": "identifierType",
        "minimum_quantity": "minimumQuantity",
        "response_generation_time": "responseGenerationTime",
    });
});
/** @internal */
exports.RetrieveQuoteResponse$outboundSchema = z.object({
    accountId: z.string().optional(),
    askMinimumQuantity: z.nullable(z.lazy(() => exports.AskMinimumQuantity$outboundSchema)).optional(),
    askPrices: z.array(bidaskprice_js_1.BidAskPrice$outboundSchema).optional(),
    askQuantity: z.nullable(z.lazy(() => exports.AskQuantity$outboundSchema)).optional(),
    assetId: z.string().optional(),
    assetType: exports.RetrieveQuoteResponseAssetType$outboundSchema.optional(),
    bidMinimumQuantity: z.nullable(z.lazy(() => exports.BidMinimumQuantity$outboundSchema)).optional(),
    bidPrices: z.array(bidaskprice_js_1.BidAskPrice$outboundSchema).optional(),
    bidQuantity: z.nullable(z.lazy(() => exports.BidQuantity$outboundSchema)).optional(),
    brokerCapacity: exports.RetrieveQuoteResponseBrokerCapacity$outboundSchema.optional(),
    identifier: z.string().optional(),
    identifierType: exports.RetrieveQuoteResponseIdentifierType$outboundSchema.optional(),
    minimumQuantity: z.nullable(z.lazy(() => exports.MinimumQuantity$outboundSchema))
        .optional(),
    responseGenerationTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
        askMinimumQuantity: "ask_minimum_quantity",
        askPrices: "ask_prices",
        askQuantity: "ask_quantity",
        assetId: "asset_id",
        assetType: "asset_type",
        bidMinimumQuantity: "bid_minimum_quantity",
        bidPrices: "bid_prices",
        bidQuantity: "bid_quantity",
        brokerCapacity: "broker_capacity",
        identifierType: "identifier_type",
        minimumQuantity: "minimum_quantity",
        responseGenerationTime: "response_generation_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RetrieveQuoteResponse$;
(function (RetrieveQuoteResponse$) {
    /** @deprecated use `RetrieveQuoteResponse$inboundSchema` instead. */
    RetrieveQuoteResponse$.inboundSchema = exports.RetrieveQuoteResponse$inboundSchema;
    /** @deprecated use `RetrieveQuoteResponse$outboundSchema` instead. */
    RetrieveQuoteResponse$.outboundSchema = exports.RetrieveQuoteResponse$outboundSchema;
})(RetrieveQuoteResponse$ || (exports.RetrieveQuoteResponse$ = RetrieveQuoteResponse$ = {}));
//# sourceMappingURL=retrievequoteresponse.js.map