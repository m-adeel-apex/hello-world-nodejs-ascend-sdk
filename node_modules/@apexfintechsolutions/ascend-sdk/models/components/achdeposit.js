"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AchDeposit$ = exports.AchDeposit$outboundSchema = exports.AchDeposit$inboundSchema = exports.AchDepositState$ = exports.AchDepositState$outboundSchema = exports.AchDepositState$inboundSchema = exports.AchDepositStateState$ = exports.AchDepositStateState$outboundSchema = exports.AchDepositStateState$inboundSchema = exports.RetirementContribution$ = exports.RetirementContribution$outboundSchema = exports.RetirementContribution$inboundSchema = exports.AchDepositType$ = exports.AchDepositType$outboundSchema = exports.AchDepositType$inboundSchema = exports.Amount$ = exports.Amount$outboundSchema = exports.Amount$inboundSchema = exports.AchDepositStateState = exports.AchDepositType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The type of retirement contribution.
 */
var AchDepositType;
(function (AchDepositType) {
    AchDepositType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    AchDepositType["Regular"] = "REGULAR";
    AchDepositType["Employee"] = "EMPLOYEE";
    AchDepositType["Employer"] = "EMPLOYER";
    AchDepositType["Recharacterization"] = "RECHARACTERIZATION";
    AchDepositType["Rollover60Day"] = "ROLLOVER_60_DAY";
    AchDepositType["RolloverDirect"] = "ROLLOVER_DIRECT";
    AchDepositType["Transfer"] = "TRANSFER";
    AchDepositType["TrusteeFee"] = "TRUSTEE_FEE";
    AchDepositType["Conversion"] = "CONVERSION";
    AchDepositType["Repayment"] = "REPAYMENT";
    AchDepositType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(AchDepositType || (exports.AchDepositType = AchDepositType = {}));
/**
 * The high level state of a transfer, one of:
 *
 * @remarks
 * - `PROCESSING` - The transfer is being processed and will be posted if successful.
 * - `PENDING_REVIEW` - The transfer is pending review and will continue processing if approved.
 * - `POSTED` - The transfer has been posted to the ledger and will be completed at the end of the processing window if not canceled first.
 * - `COMPLETED` - The transfer has been batched and completed.
 * - `REJECTED` - The transfer was rejected.
 * - `CANCELED` - The transfer was canceled.
 * - `RETURNED` - The transfer was returned.
 * - `POSTPONED` - The transfer is postponed and will resume processing during the next processing window.
 */
var AchDepositStateState;
(function (AchDepositStateState) {
    AchDepositStateState["StateUnspecified"] = "STATE_UNSPECIFIED";
    AchDepositStateState["Processing"] = "PROCESSING";
    AchDepositStateState["PendingReview"] = "PENDING_REVIEW";
    AchDepositStateState["Posted"] = "POSTED";
    AchDepositStateState["Completed"] = "COMPLETED";
    AchDepositStateState["Rejected"] = "REJECTED";
    AchDepositStateState["Canceled"] = "CANCELED";
    AchDepositStateState["Returned"] = "RETURNED";
    AchDepositStateState["Postponed"] = "POSTPONED";
})(AchDepositStateState || (exports.AchDepositStateState = AchDepositStateState = {}));
/** @internal */
exports.Amount$inboundSchema = z
    .object({
    value: z.string().optional(),
});
/** @internal */
exports.Amount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Amount$;
(function (Amount$) {
    /** @deprecated use `Amount$inboundSchema` instead. */
    Amount$.inboundSchema = exports.Amount$inboundSchema;
    /** @deprecated use `Amount$outboundSchema` instead. */
    Amount$.outboundSchema = exports.Amount$outboundSchema;
})(Amount$ || (exports.Amount$ = Amount$ = {}));
/** @internal */
exports.AchDepositType$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.AchDepositType$outboundSchema = z.union([
    z.nativeEnum(AchDepositType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AchDepositType$;
(function (AchDepositType$) {
    /** @deprecated use `AchDepositType$inboundSchema` instead. */
    AchDepositType$.inboundSchema = exports.AchDepositType$inboundSchema;
    /** @deprecated use `AchDepositType$outboundSchema` instead. */
    AchDepositType$.outboundSchema = exports.AchDepositType$outboundSchema;
})(AchDepositType$ || (exports.AchDepositType$ = AchDepositType$ = {}));
/** @internal */
exports.RetirementContribution$inboundSchema = z.object({
    tax_year: z.number().int().optional(),
    type: exports.AchDepositType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "tax_year": "taxYear",
    });
});
/** @internal */
exports.RetirementContribution$outboundSchema = z.object({
    taxYear: z.number().int().optional(),
    type: exports.AchDepositType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RetirementContribution$;
(function (RetirementContribution$) {
    /** @deprecated use `RetirementContribution$inboundSchema` instead. */
    RetirementContribution$.inboundSchema = exports.RetirementContribution$inboundSchema;
    /** @deprecated use `RetirementContribution$outboundSchema` instead. */
    RetirementContribution$.outboundSchema = exports.RetirementContribution$outboundSchema;
})(RetirementContribution$ || (exports.RetirementContribution$ = RetirementContribution$ = {}));
/** @internal */
exports.AchDepositStateState$inboundSchema = z
    .union([
    z.nativeEnum(AchDepositStateState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.AchDepositStateState$outboundSchema = z.union([
    z.nativeEnum(AchDepositStateState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AchDepositStateState$;
(function (AchDepositStateState$) {
    /** @deprecated use `AchDepositStateState$inboundSchema` instead. */
    AchDepositStateState$.inboundSchema = exports.AchDepositStateState$inboundSchema;
    /** @deprecated use `AchDepositStateState$outboundSchema` instead. */
    AchDepositStateState$.outboundSchema = exports.AchDepositStateState$outboundSchema;
})(AchDepositStateState$ || (exports.AchDepositStateState$ = AchDepositStateState$ = {}));
/** @internal */
exports.AchDepositState$inboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.AchDepositStateState$inboundSchema.optional(),
    update_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "update_time": "updateTime",
    });
});
/** @internal */
exports.AchDepositState$outboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.AchDepositStateState$outboundSchema.optional(),
    updateTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updateTime: "update_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AchDepositState$;
(function (AchDepositState$) {
    /** @deprecated use `AchDepositState$inboundSchema` instead. */
    AchDepositState$.inboundSchema = exports.AchDepositState$inboundSchema;
    /** @deprecated use `AchDepositState$outboundSchema` instead. */
    AchDepositState$.outboundSchema = exports.AchDepositState$outboundSchema;
})(AchDepositState$ || (exports.AchDepositState$ = AchDepositState$ = {}));
/** @internal */
exports.AchDeposit$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.Amount$inboundSchema)).optional(),
    bank_relationship: z.string().optional(),
    client_transfer_id: z.string().optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    retirement_contribution: z.nullable(z.lazy(() => exports.RetirementContribution$inboundSchema)).optional(),
    state: z.nullable(z.lazy(() => exports.AchDepositState$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "bank_relationship": "bankRelationship",
        "client_transfer_id": "clientTransferId",
        "retirement_contribution": "retirementContribution",
    });
});
/** @internal */
exports.AchDeposit$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.Amount$outboundSchema)).optional(),
    bankRelationship: z.string().optional(),
    clientTransferId: z.string().optional(),
    memo: z.string().optional(),
    name: z.string().optional(),
    retirementContribution: z.nullable(z.lazy(() => exports.RetirementContribution$outboundSchema)).optional(),
    state: z.nullable(z.lazy(() => exports.AchDepositState$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        bankRelationship: "bank_relationship",
        clientTransferId: "client_transfer_id",
        retirementContribution: "retirement_contribution",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AchDeposit$;
(function (AchDeposit$) {
    /** @deprecated use `AchDeposit$inboundSchema` instead. */
    AchDeposit$.inboundSchema = exports.AchDeposit$inboundSchema;
    /** @deprecated use `AchDeposit$outboundSchema` instead. */
    AchDeposit$.outboundSchema = exports.AchDeposit$outboundSchema;
})(AchDeposit$ || (exports.AchDeposit$ = AchDeposit$ = {}));
//# sourceMappingURL=achdeposit.js.map