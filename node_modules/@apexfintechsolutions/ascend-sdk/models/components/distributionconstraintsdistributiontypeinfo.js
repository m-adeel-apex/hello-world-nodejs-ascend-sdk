"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DistributionConstraintsDistributionTypeInfo$ = exports.DistributionConstraintsDistributionTypeInfo$outboundSchema = exports.DistributionConstraintsDistributionTypeInfo$inboundSchema = exports.DistributionConstraintsDistributionTypeInfoType$ = exports.DistributionConstraintsDistributionTypeInfoType$outboundSchema = exports.DistributionConstraintsDistributionTypeInfoType$inboundSchema = exports.DistributionConstraintsDistributionTypeInfoType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * Retirement distribution type
 */
var DistributionConstraintsDistributionTypeInfoType;
(function (DistributionConstraintsDistributionTypeInfoType) {
    DistributionConstraintsDistributionTypeInfoType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    DistributionConstraintsDistributionTypeInfoType["Normal"] = "NORMAL";
    DistributionConstraintsDistributionTypeInfoType["Disability"] = "DISABILITY";
    DistributionConstraintsDistributionTypeInfoType["Sosepp"] = "SOSEPP";
    DistributionConstraintsDistributionTypeInfoType["Premature"] = "PREMATURE";
    DistributionConstraintsDistributionTypeInfoType["Death"] = "DEATH";
    DistributionConstraintsDistributionTypeInfoType["ExcessContributionRemovalBeforeTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE";
    DistributionConstraintsDistributionTypeInfoType["ExcessContributionRemovalAfterTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE";
    DistributionConstraintsDistributionTypeInfoType["RolloverToQualifiedPlan"] = "ROLLOVER_TO_QUALIFIED_PLAN";
    DistributionConstraintsDistributionTypeInfoType["RolloverToIra"] = "ROLLOVER_TO_IRA";
    DistributionConstraintsDistributionTypeInfoType["DistributionTransfer"] = "DISTRIBUTION_TRANSFER";
    DistributionConstraintsDistributionTypeInfoType["RecharacterizationPriorYear"] = "RECHARACTERIZATION_PRIOR_YEAR";
    DistributionConstraintsDistributionTypeInfoType["RecharacterizationCurrentYear"] = "RECHARACTERIZATION_CURRENT_YEAR";
    DistributionConstraintsDistributionTypeInfoType["DistributionConversion"] = "DISTRIBUTION_CONVERSION";
    DistributionConstraintsDistributionTypeInfoType["ManagementFee"] = "MANAGEMENT_FEE";
    DistributionConstraintsDistributionTypeInfoType["PlanLoan401K"] = "PLAN_LOAN_401K";
    DistributionConstraintsDistributionTypeInfoType["PrematureSimpleIraLessThan2Years"] = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS";
    DistributionConstraintsDistributionTypeInfoType["NormalRothIraGreaterThan5Years"] = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS";
    DistributionConstraintsDistributionTypeInfoType["NetIncomeAttributable"] = "NET_INCOME_ATTRIBUTABLE";
    DistributionConstraintsDistributionTypeInfoType["Revocation"] = "REVOCATION";
    DistributionConstraintsDistributionTypeInfoType["NonReportable"] = "NON_REPORTABLE";
})(DistributionConstraintsDistributionTypeInfoType || (exports.DistributionConstraintsDistributionTypeInfoType = DistributionConstraintsDistributionTypeInfoType = {}));
/** @internal */
exports.DistributionConstraintsDistributionTypeInfoType$inboundSchema = z
    .union([
    z.nativeEnum(DistributionConstraintsDistributionTypeInfoType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.DistributionConstraintsDistributionTypeInfoType$outboundSchema = z.union([
    z.nativeEnum(DistributionConstraintsDistributionTypeInfoType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DistributionConstraintsDistributionTypeInfoType$;
(function (DistributionConstraintsDistributionTypeInfoType$) {
    /** @deprecated use `DistributionConstraintsDistributionTypeInfoType$inboundSchema` instead. */
    DistributionConstraintsDistributionTypeInfoType$.inboundSchema = exports.DistributionConstraintsDistributionTypeInfoType$inboundSchema;
    /** @deprecated use `DistributionConstraintsDistributionTypeInfoType$outboundSchema` instead. */
    DistributionConstraintsDistributionTypeInfoType$.outboundSchema = exports.DistributionConstraintsDistributionTypeInfoType$outboundSchema;
})(DistributionConstraintsDistributionTypeInfoType$ || (exports.DistributionConstraintsDistributionTypeInfoType$ = DistributionConstraintsDistributionTypeInfoType$ = {}));
/** @internal */
exports.DistributionConstraintsDistributionTypeInfo$inboundSchema = z.object({
    federal_withholding_enabled: z.boolean().optional(),
    state_withholding_enabled: z.boolean().optional(),
    type: exports.DistributionConstraintsDistributionTypeInfoType$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "federal_withholding_enabled": "federalWithholdingEnabled",
        "state_withholding_enabled": "stateWithholdingEnabled",
    });
});
/** @internal */
exports.DistributionConstraintsDistributionTypeInfo$outboundSchema = z.object({
    federalWithholdingEnabled: z.boolean().optional(),
    stateWithholdingEnabled: z.boolean().optional(),
    type: exports.DistributionConstraintsDistributionTypeInfoType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        federalWithholdingEnabled: "federal_withholding_enabled",
        stateWithholdingEnabled: "state_withholding_enabled",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DistributionConstraintsDistributionTypeInfo$;
(function (DistributionConstraintsDistributionTypeInfo$) {
    /** @deprecated use `DistributionConstraintsDistributionTypeInfo$inboundSchema` instead. */
    DistributionConstraintsDistributionTypeInfo$.inboundSchema = exports.DistributionConstraintsDistributionTypeInfo$inboundSchema;
    /** @deprecated use `DistributionConstraintsDistributionTypeInfo$outboundSchema` instead. */
    DistributionConstraintsDistributionTypeInfo$.outboundSchema = exports.DistributionConstraintsDistributionTypeInfo$outboundSchema;
})(DistributionConstraintsDistributionTypeInfo$ || (exports.DistributionConstraintsDistributionTypeInfo$ = DistributionConstraintsDistributionTypeInfo$ = {}));
//# sourceMappingURL=distributionconstraintsdistributiontypeinfo.js.map