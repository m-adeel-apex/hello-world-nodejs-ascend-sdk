"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RebookTradeResponse$ = exports.RebookTradeResponse$outboundSchema = exports.RebookTradeResponse$inboundSchema = exports.OriginalTrade$ = exports.OriginalTrade$outboundSchema = exports.OriginalTrade$inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$ = exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentType$ = exports.RebookTradeResponseOriginalTradePriceAdjustmentType$outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentType$inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$ = exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$ = exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$inboundSchema = exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$ = exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$outboundSchema = exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$inboundSchema = exports.RebookTradeResponseOriginalTradeBrokerCapacity$ = exports.RebookTradeResponseOriginalTradeBrokerCapacity$outboundSchema = exports.RebookTradeResponseOriginalTradeBrokerCapacity$inboundSchema = exports.NewTrade$ = exports.NewTrade$outboundSchema = exports.NewTrade$inboundSchema = exports.RebookTradeResponsePriceAdjustmentRecord$ = exports.RebookTradeResponsePriceAdjustmentRecord$outboundSchema = exports.RebookTradeResponsePriceAdjustmentRecord$inboundSchema = exports.RebookTradeResponsePriceAdjustmentType$ = exports.RebookTradeResponsePriceAdjustmentType$outboundSchema = exports.RebookTradeResponsePriceAdjustmentType$inboundSchema = exports.RebookTradeResponsePriceAdjustmentPercent$ = exports.RebookTradeResponsePriceAdjustmentPercent$outboundSchema = exports.RebookTradeResponsePriceAdjustmentPercent$inboundSchema = exports.RebookTradeResponsePriceAdjustmentAmount$ = exports.RebookTradeResponsePriceAdjustmentAmount$outboundSchema = exports.RebookTradeResponsePriceAdjustmentAmount$inboundSchema = exports.RebookTradeResponsePrevailingMarketPrice$ = exports.RebookTradeResponsePrevailingMarketPrice$outboundSchema = exports.RebookTradeResponsePrevailingMarketPrice$inboundSchema = exports.RebookTradeResponseBrokerCapacity$ = exports.RebookTradeResponseBrokerCapacity$outboundSchema = exports.RebookTradeResponseBrokerCapacity$inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentType = exports.RebookTradeResponseOriginalTradeBrokerCapacity = exports.RebookTradeResponsePriceAdjustmentType = exports.RebookTradeResponseBrokerCapacity = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const lot_js_1 = require("./lot.js");
const yieldrecord_js_1 = require("./yieldrecord.js");
/**
 * Used to calculate broadridge blotter code
 */
var RebookTradeResponseBrokerCapacity;
(function (RebookTradeResponseBrokerCapacity) {
    RebookTradeResponseBrokerCapacity["CapacityUnspecified"] = "CAPACITY_UNSPECIFIED";
    RebookTradeResponseBrokerCapacity["Agency"] = "AGENCY";
    RebookTradeResponseBrokerCapacity["Principal"] = "PRINCIPAL";
    RebookTradeResponseBrokerCapacity["Mixed"] = "MIXED";
})(RebookTradeResponseBrokerCapacity || (exports.RebookTradeResponseBrokerCapacity = RebookTradeResponseBrokerCapacity = {}));
/**
 * The type of price adjustment being applied by the broker to the net price of the security
 */
var RebookTradeResponsePriceAdjustmentType;
(function (RebookTradeResponsePriceAdjustmentType) {
    RebookTradeResponsePriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    RebookTradeResponsePriceAdjustmentType["Markup"] = "MARKUP";
    RebookTradeResponsePriceAdjustmentType["Markdown"] = "MARKDOWN";
    RebookTradeResponsePriceAdjustmentType["SalesLoad"] = "SALES_LOAD";
})(RebookTradeResponsePriceAdjustmentType || (exports.RebookTradeResponsePriceAdjustmentType = RebookTradeResponsePriceAdjustmentType = {}));
/**
 * Used to calculate broadridge blotter code
 */
var RebookTradeResponseOriginalTradeBrokerCapacity;
(function (RebookTradeResponseOriginalTradeBrokerCapacity) {
    RebookTradeResponseOriginalTradeBrokerCapacity["CapacityUnspecified"] = "CAPACITY_UNSPECIFIED";
    RebookTradeResponseOriginalTradeBrokerCapacity["Agency"] = "AGENCY";
    RebookTradeResponseOriginalTradeBrokerCapacity["Principal"] = "PRINCIPAL";
    RebookTradeResponseOriginalTradeBrokerCapacity["Mixed"] = "MIXED";
})(RebookTradeResponseOriginalTradeBrokerCapacity || (exports.RebookTradeResponseOriginalTradeBrokerCapacity = RebookTradeResponseOriginalTradeBrokerCapacity = {}));
/**
 * The type of price adjustment being applied by the broker to the net price of the security
 */
var RebookTradeResponseOriginalTradePriceAdjustmentType;
(function (RebookTradeResponseOriginalTradePriceAdjustmentType) {
    RebookTradeResponseOriginalTradePriceAdjustmentType["PriceAdjustmentTypeUnspecified"] = "PRICE_ADJUSTMENT_TYPE_UNSPECIFIED";
    RebookTradeResponseOriginalTradePriceAdjustmentType["Markup"] = "MARKUP";
    RebookTradeResponseOriginalTradePriceAdjustmentType["Markdown"] = "MARKDOWN";
    RebookTradeResponseOriginalTradePriceAdjustmentType["SalesLoad"] = "SALES_LOAD";
})(RebookTradeResponseOriginalTradePriceAdjustmentType || (exports.RebookTradeResponseOriginalTradePriceAdjustmentType = RebookTradeResponseOriginalTradePriceAdjustmentType = {}));
/** @internal */
exports.RebookTradeResponseBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeResponseBrokerCapacity),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeResponseBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(RebookTradeResponseBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseBrokerCapacity$;
(function (RebookTradeResponseBrokerCapacity$) {
    /** @deprecated use `RebookTradeResponseBrokerCapacity$inboundSchema` instead. */
    RebookTradeResponseBrokerCapacity$.inboundSchema = exports.RebookTradeResponseBrokerCapacity$inboundSchema;
    /** @deprecated use `RebookTradeResponseBrokerCapacity$outboundSchema` instead. */
    RebookTradeResponseBrokerCapacity$.outboundSchema = exports.RebookTradeResponseBrokerCapacity$outboundSchema;
})(RebookTradeResponseBrokerCapacity$ || (exports.RebookTradeResponseBrokerCapacity$ = RebookTradeResponseBrokerCapacity$ = {}));
/** @internal */
exports.RebookTradeResponsePrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeResponsePrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponsePrevailingMarketPrice$;
(function (RebookTradeResponsePrevailingMarketPrice$) {
    /** @deprecated use `RebookTradeResponsePrevailingMarketPrice$inboundSchema` instead. */
    RebookTradeResponsePrevailingMarketPrice$.inboundSchema = exports.RebookTradeResponsePrevailingMarketPrice$inboundSchema;
    /** @deprecated use `RebookTradeResponsePrevailingMarketPrice$outboundSchema` instead. */
    RebookTradeResponsePrevailingMarketPrice$.outboundSchema = exports.RebookTradeResponsePrevailingMarketPrice$outboundSchema;
})(RebookTradeResponsePrevailingMarketPrice$ || (exports.RebookTradeResponsePrevailingMarketPrice$ = RebookTradeResponsePrevailingMarketPrice$ = {}));
/** @internal */
exports.RebookTradeResponsePriceAdjustmentAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeResponsePriceAdjustmentAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponsePriceAdjustmentAmount$;
(function (RebookTradeResponsePriceAdjustmentAmount$) {
    /** @deprecated use `RebookTradeResponsePriceAdjustmentAmount$inboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentAmount$.inboundSchema = exports.RebookTradeResponsePriceAdjustmentAmount$inboundSchema;
    /** @deprecated use `RebookTradeResponsePriceAdjustmentAmount$outboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentAmount$.outboundSchema = exports.RebookTradeResponsePriceAdjustmentAmount$outboundSchema;
})(RebookTradeResponsePriceAdjustmentAmount$ || (exports.RebookTradeResponsePriceAdjustmentAmount$ = RebookTradeResponsePriceAdjustmentAmount$ = {}));
/** @internal */
exports.RebookTradeResponsePriceAdjustmentPercent$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeResponsePriceAdjustmentPercent$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponsePriceAdjustmentPercent$;
(function (RebookTradeResponsePriceAdjustmentPercent$) {
    /** @deprecated use `RebookTradeResponsePriceAdjustmentPercent$inboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentPercent$.inboundSchema = exports.RebookTradeResponsePriceAdjustmentPercent$inboundSchema;
    /** @deprecated use `RebookTradeResponsePriceAdjustmentPercent$outboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentPercent$.outboundSchema = exports.RebookTradeResponsePriceAdjustmentPercent$outboundSchema;
})(RebookTradeResponsePriceAdjustmentPercent$ || (exports.RebookTradeResponsePriceAdjustmentPercent$ = RebookTradeResponsePriceAdjustmentPercent$ = {}));
/** @internal */
exports.RebookTradeResponsePriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeResponsePriceAdjustmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeResponsePriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeResponsePriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponsePriceAdjustmentType$;
(function (RebookTradeResponsePriceAdjustmentType$) {
    /** @deprecated use `RebookTradeResponsePriceAdjustmentType$inboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentType$.inboundSchema = exports.RebookTradeResponsePriceAdjustmentType$inboundSchema;
    /** @deprecated use `RebookTradeResponsePriceAdjustmentType$outboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentType$.outboundSchema = exports.RebookTradeResponsePriceAdjustmentType$outboundSchema;
})(RebookTradeResponsePriceAdjustmentType$ || (exports.RebookTradeResponsePriceAdjustmentType$ = RebookTradeResponsePriceAdjustmentType$ = {}));
/** @internal */
exports.RebookTradeResponsePriceAdjustmentRecord$inboundSchema = z.object({
    price_adjustment_amount: z.nullable(z.lazy(() => exports.RebookTradeResponsePriceAdjustmentAmount$inboundSchema)).optional(),
    price_adjustment_percent: z.nullable(z.lazy(() => exports.RebookTradeResponsePriceAdjustmentPercent$inboundSchema)).optional(),
    price_adjustment_type: exports.RebookTradeResponsePriceAdjustmentType$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_percent": "priceAdjustmentPercent",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
exports.RebookTradeResponsePriceAdjustmentRecord$outboundSchema = z.object({
    priceAdjustmentAmount: z.nullable(z.lazy(() => exports.RebookTradeResponsePriceAdjustmentAmount$outboundSchema)).optional(),
    priceAdjustmentPercent: z.nullable(z.lazy(() => exports.RebookTradeResponsePriceAdjustmentPercent$outboundSchema)).optional(),
    priceAdjustmentType: exports.RebookTradeResponsePriceAdjustmentType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentPercent: "price_adjustment_percent",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponsePriceAdjustmentRecord$;
(function (RebookTradeResponsePriceAdjustmentRecord$) {
    /** @deprecated use `RebookTradeResponsePriceAdjustmentRecord$inboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentRecord$.inboundSchema = exports.RebookTradeResponsePriceAdjustmentRecord$inboundSchema;
    /** @deprecated use `RebookTradeResponsePriceAdjustmentRecord$outboundSchema` instead. */
    RebookTradeResponsePriceAdjustmentRecord$.outboundSchema = exports.RebookTradeResponsePriceAdjustmentRecord$outboundSchema;
})(RebookTradeResponsePriceAdjustmentRecord$ || (exports.RebookTradeResponsePriceAdjustmentRecord$ = RebookTradeResponsePriceAdjustmentRecord$ = {}));
/** @internal */
exports.NewTrade$inboundSchema = z.object({
    additional_instructions: z.array(z.string()).optional(),
    alternate_order_id: z.string().optional(),
    booking_api_trade_allocation_id: z.string().optional(),
    booking_api_trade_id: z.string().optional(),
    broker: z.string().optional(),
    broker_capacity: exports.RebookTradeResponseBrokerCapacity$inboundSchema.optional(),
    client_memos: z.array(z.string()).optional(),
    client_order_id: z.string().optional(),
    exchange: z.string().optional(),
    execution_id: z.string().optional(),
    execution_only: z.boolean().optional(),
    external_id: z.string().optional(),
    fund_confirmation_number: z.string().optional(),
    gateway_client_order_id: z.string().optional(),
    internal_error: z.boolean().optional(),
    is_writeoff: z.boolean().optional(),
    lots: z.array(lot_js_1.Lot$inboundSchema).optional(),
    order_id: z.string().optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.RebookTradeResponsePrevailingMarketPrice$inboundSchema)).optional(),
    price_adjustment_record: z.nullable(z.lazy(() => exports.RebookTradeResponsePriceAdjustmentRecord$inboundSchema)).optional(),
    route: z.string().optional(),
    special_instructions: z.array(z.string()).optional(),
    symbol_description: z.string().optional(),
    when_issued: z.boolean().optional(),
    yield_records: z.array(yieldrecord_js_1.YieldRecord$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "additional_instructions": "additionalInstructions",
        "alternate_order_id": "alternateOrderId",
        "booking_api_trade_allocation_id": "bookingApiTradeAllocationId",
        "booking_api_trade_id": "bookingApiTradeId",
        "broker_capacity": "brokerCapacity",
        "client_memos": "clientMemos",
        "client_order_id": "clientOrderId",
        "execution_id": "executionId",
        "execution_only": "executionOnly",
        "external_id": "externalId",
        "fund_confirmation_number": "fundConfirmationNumber",
        "gateway_client_order_id": "gatewayClientOrderId",
        "internal_error": "internalError",
        "is_writeoff": "isWriteoff",
        "order_id": "orderId",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment_record": "priceAdjustmentRecord",
        "special_instructions": "specialInstructions",
        "symbol_description": "symbolDescription",
        "when_issued": "whenIssued",
        "yield_records": "yieldRecords",
    });
});
/** @internal */
exports.NewTrade$outboundSchema = z.object({
    additionalInstructions: z.array(z.string()).optional(),
    alternateOrderId: z.string().optional(),
    bookingApiTradeAllocationId: z.string().optional(),
    bookingApiTradeId: z.string().optional(),
    broker: z.string().optional(),
    brokerCapacity: exports.RebookTradeResponseBrokerCapacity$outboundSchema.optional(),
    clientMemos: z.array(z.string()).optional(),
    clientOrderId: z.string().optional(),
    exchange: z.string().optional(),
    executionId: z.string().optional(),
    executionOnly: z.boolean().optional(),
    externalId: z.string().optional(),
    fundConfirmationNumber: z.string().optional(),
    gatewayClientOrderId: z.string().optional(),
    internalError: z.boolean().optional(),
    isWriteoff: z.boolean().optional(),
    lots: z.array(lot_js_1.Lot$outboundSchema).optional(),
    orderId: z.string().optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.RebookTradeResponsePrevailingMarketPrice$outboundSchema)).optional(),
    priceAdjustmentRecord: z.nullable(z.lazy(() => exports.RebookTradeResponsePriceAdjustmentRecord$outboundSchema)).optional(),
    route: z.string().optional(),
    specialInstructions: z.array(z.string()).optional(),
    symbolDescription: z.string().optional(),
    whenIssued: z.boolean().optional(),
    yieldRecords: z.array(yieldrecord_js_1.YieldRecord$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        additionalInstructions: "additional_instructions",
        alternateOrderId: "alternate_order_id",
        bookingApiTradeAllocationId: "booking_api_trade_allocation_id",
        bookingApiTradeId: "booking_api_trade_id",
        brokerCapacity: "broker_capacity",
        clientMemos: "client_memos",
        clientOrderId: "client_order_id",
        executionId: "execution_id",
        executionOnly: "execution_only",
        externalId: "external_id",
        fundConfirmationNumber: "fund_confirmation_number",
        gatewayClientOrderId: "gateway_client_order_id",
        internalError: "internal_error",
        isWriteoff: "is_writeoff",
        orderId: "order_id",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustmentRecord: "price_adjustment_record",
        specialInstructions: "special_instructions",
        symbolDescription: "symbol_description",
        whenIssued: "when_issued",
        yieldRecords: "yield_records",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NewTrade$;
(function (NewTrade$) {
    /** @deprecated use `NewTrade$inboundSchema` instead. */
    NewTrade$.inboundSchema = exports.NewTrade$inboundSchema;
    /** @deprecated use `NewTrade$outboundSchema` instead. */
    NewTrade$.outboundSchema = exports.NewTrade$outboundSchema;
})(NewTrade$ || (exports.NewTrade$ = NewTrade$ = {}));
/** @internal */
exports.RebookTradeResponseOriginalTradeBrokerCapacity$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeResponseOriginalTradeBrokerCapacity),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeResponseOriginalTradeBrokerCapacity$outboundSchema = z.union([
    z.nativeEnum(RebookTradeResponseOriginalTradeBrokerCapacity),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseOriginalTradeBrokerCapacity$;
(function (RebookTradeResponseOriginalTradeBrokerCapacity$) {
    /** @deprecated use `RebookTradeResponseOriginalTradeBrokerCapacity$inboundSchema` instead. */
    RebookTradeResponseOriginalTradeBrokerCapacity$.inboundSchema = exports.RebookTradeResponseOriginalTradeBrokerCapacity$inboundSchema;
    /** @deprecated use `RebookTradeResponseOriginalTradeBrokerCapacity$outboundSchema` instead. */
    RebookTradeResponseOriginalTradeBrokerCapacity$.outboundSchema = exports.RebookTradeResponseOriginalTradeBrokerCapacity$outboundSchema;
})(RebookTradeResponseOriginalTradeBrokerCapacity$ || (exports.RebookTradeResponseOriginalTradeBrokerCapacity$ = RebookTradeResponseOriginalTradeBrokerCapacity$ = {}));
/** @internal */
exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseOriginalTradePrevailingMarketPrice$;
(function (RebookTradeResponseOriginalTradePrevailingMarketPrice$) {
    /** @deprecated use `RebookTradeResponseOriginalTradePrevailingMarketPrice$inboundSchema` instead. */
    RebookTradeResponseOriginalTradePrevailingMarketPrice$.inboundSchema = exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$inboundSchema;
    /** @deprecated use `RebookTradeResponseOriginalTradePrevailingMarketPrice$outboundSchema` instead. */
    RebookTradeResponseOriginalTradePrevailingMarketPrice$.outboundSchema = exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$outboundSchema;
})(RebookTradeResponseOriginalTradePrevailingMarketPrice$ || (exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$ = RebookTradeResponseOriginalTradePrevailingMarketPrice$ = {}));
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseOriginalTradePriceAdjustmentAmount$;
(function (RebookTradeResponseOriginalTradePriceAdjustmentAmount$) {
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentAmount$inboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentAmount$.inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$inboundSchema;
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentAmount$outboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentAmount$.outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$outboundSchema;
})(RebookTradeResponseOriginalTradePriceAdjustmentAmount$ || (exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$ = RebookTradeResponseOriginalTradePriceAdjustmentAmount$ = {}));
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseOriginalTradePriceAdjustmentPercent$;
(function (RebookTradeResponseOriginalTradePriceAdjustmentPercent$) {
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentPercent$inboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentPercent$.inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$inboundSchema;
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentPercent$outboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentPercent$.outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$outboundSchema;
})(RebookTradeResponseOriginalTradePriceAdjustmentPercent$ || (exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$ = RebookTradeResponseOriginalTradePriceAdjustmentPercent$ = {}));
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentType$inboundSchema = z
    .union([
    z.nativeEnum(RebookTradeResponseOriginalTradePriceAdjustmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentType$outboundSchema = z.union([
    z.nativeEnum(RebookTradeResponseOriginalTradePriceAdjustmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseOriginalTradePriceAdjustmentType$;
(function (RebookTradeResponseOriginalTradePriceAdjustmentType$) {
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentType$inboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentType$.inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentType$inboundSchema;
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentType$outboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentType$.outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentType$outboundSchema;
})(RebookTradeResponseOriginalTradePriceAdjustmentType$ || (exports.RebookTradeResponseOriginalTradePriceAdjustmentType$ = RebookTradeResponseOriginalTradePriceAdjustmentType$ = {}));
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$inboundSchema = z.object({
    price_adjustment_amount: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$inboundSchema)).optional(),
    price_adjustment_percent: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$inboundSchema)).optional(),
    price_adjustment_type: exports.RebookTradeResponseOriginalTradePriceAdjustmentType$inboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "price_adjustment_amount": "priceAdjustmentAmount",
        "price_adjustment_percent": "priceAdjustmentPercent",
        "price_adjustment_type": "priceAdjustmentType",
    });
});
/** @internal */
exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$outboundSchema = z.object({
    priceAdjustmentAmount: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePriceAdjustmentAmount$outboundSchema)).optional(),
    priceAdjustmentPercent: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePriceAdjustmentPercent$outboundSchema)).optional(),
    priceAdjustmentType: exports.RebookTradeResponseOriginalTradePriceAdjustmentType$outboundSchema
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        priceAdjustmentAmount: "price_adjustment_amount",
        priceAdjustmentPercent: "price_adjustment_percent",
        priceAdjustmentType: "price_adjustment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponseOriginalTradePriceAdjustmentRecord$;
(function (RebookTradeResponseOriginalTradePriceAdjustmentRecord$) {
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentRecord$inboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentRecord$.inboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$inboundSchema;
    /** @deprecated use `RebookTradeResponseOriginalTradePriceAdjustmentRecord$outboundSchema` instead. */
    RebookTradeResponseOriginalTradePriceAdjustmentRecord$.outboundSchema = exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$outboundSchema;
})(RebookTradeResponseOriginalTradePriceAdjustmentRecord$ || (exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$ = RebookTradeResponseOriginalTradePriceAdjustmentRecord$ = {}));
/** @internal */
exports.OriginalTrade$inboundSchema = z.object({
    additional_instructions: z.array(z.string()).optional(),
    alternate_order_id: z.string().optional(),
    booking_api_trade_allocation_id: z.string().optional(),
    booking_api_trade_id: z.string().optional(),
    broker: z.string().optional(),
    broker_capacity: exports.RebookTradeResponseOriginalTradeBrokerCapacity$inboundSchema
        .optional(),
    client_memos: z.array(z.string()).optional(),
    client_order_id: z.string().optional(),
    exchange: z.string().optional(),
    execution_id: z.string().optional(),
    execution_only: z.boolean().optional(),
    external_id: z.string().optional(),
    fund_confirmation_number: z.string().optional(),
    gateway_client_order_id: z.string().optional(),
    internal_error: z.boolean().optional(),
    is_writeoff: z.boolean().optional(),
    lots: z.array(lot_js_1.Lot$inboundSchema).optional(),
    order_id: z.string().optional(),
    prevailing_market_price: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$inboundSchema)).optional(),
    price_adjustment_record: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$inboundSchema)).optional(),
    route: z.string().optional(),
    special_instructions: z.array(z.string()).optional(),
    symbol_description: z.string().optional(),
    when_issued: z.boolean().optional(),
    yield_records: z.array(yieldrecord_js_1.YieldRecord$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "additional_instructions": "additionalInstructions",
        "alternate_order_id": "alternateOrderId",
        "booking_api_trade_allocation_id": "bookingApiTradeAllocationId",
        "booking_api_trade_id": "bookingApiTradeId",
        "broker_capacity": "brokerCapacity",
        "client_memos": "clientMemos",
        "client_order_id": "clientOrderId",
        "execution_id": "executionId",
        "execution_only": "executionOnly",
        "external_id": "externalId",
        "fund_confirmation_number": "fundConfirmationNumber",
        "gateway_client_order_id": "gatewayClientOrderId",
        "internal_error": "internalError",
        "is_writeoff": "isWriteoff",
        "order_id": "orderId",
        "prevailing_market_price": "prevailingMarketPrice",
        "price_adjustment_record": "priceAdjustmentRecord",
        "special_instructions": "specialInstructions",
        "symbol_description": "symbolDescription",
        "when_issued": "whenIssued",
        "yield_records": "yieldRecords",
    });
});
/** @internal */
exports.OriginalTrade$outboundSchema = z.object({
    additionalInstructions: z.array(z.string()).optional(),
    alternateOrderId: z.string().optional(),
    bookingApiTradeAllocationId: z.string().optional(),
    bookingApiTradeId: z.string().optional(),
    broker: z.string().optional(),
    brokerCapacity: exports.RebookTradeResponseOriginalTradeBrokerCapacity$outboundSchema
        .optional(),
    clientMemos: z.array(z.string()).optional(),
    clientOrderId: z.string().optional(),
    exchange: z.string().optional(),
    executionId: z.string().optional(),
    executionOnly: z.boolean().optional(),
    externalId: z.string().optional(),
    fundConfirmationNumber: z.string().optional(),
    gatewayClientOrderId: z.string().optional(),
    internalError: z.boolean().optional(),
    isWriteoff: z.boolean().optional(),
    lots: z.array(lot_js_1.Lot$outboundSchema).optional(),
    orderId: z.string().optional(),
    prevailingMarketPrice: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePrevailingMarketPrice$outboundSchema)).optional(),
    priceAdjustmentRecord: z.nullable(z.lazy(() => exports.RebookTradeResponseOriginalTradePriceAdjustmentRecord$outboundSchema)).optional(),
    route: z.string().optional(),
    specialInstructions: z.array(z.string()).optional(),
    symbolDescription: z.string().optional(),
    whenIssued: z.boolean().optional(),
    yieldRecords: z.array(yieldrecord_js_1.YieldRecord$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        additionalInstructions: "additional_instructions",
        alternateOrderId: "alternate_order_id",
        bookingApiTradeAllocationId: "booking_api_trade_allocation_id",
        bookingApiTradeId: "booking_api_trade_id",
        brokerCapacity: "broker_capacity",
        clientMemos: "client_memos",
        clientOrderId: "client_order_id",
        executionId: "execution_id",
        executionOnly: "execution_only",
        externalId: "external_id",
        fundConfirmationNumber: "fund_confirmation_number",
        gatewayClientOrderId: "gateway_client_order_id",
        internalError: "internal_error",
        isWriteoff: "is_writeoff",
        orderId: "order_id",
        prevailingMarketPrice: "prevailing_market_price",
        priceAdjustmentRecord: "price_adjustment_record",
        specialInstructions: "special_instructions",
        symbolDescription: "symbol_description",
        whenIssued: "when_issued",
        yieldRecords: "yield_records",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OriginalTrade$;
(function (OriginalTrade$) {
    /** @deprecated use `OriginalTrade$inboundSchema` instead. */
    OriginalTrade$.inboundSchema = exports.OriginalTrade$inboundSchema;
    /** @deprecated use `OriginalTrade$outboundSchema` instead. */
    OriginalTrade$.outboundSchema = exports.OriginalTrade$outboundSchema;
})(OriginalTrade$ || (exports.OriginalTrade$ = OriginalTrade$ = {}));
/** @internal */
exports.RebookTradeResponse$inboundSchema = z.object({
    new_trade: z.nullable(z.lazy(() => exports.NewTrade$inboundSchema)).optional(),
    original_trade: z.nullable(z.lazy(() => exports.OriginalTrade$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "new_trade": "newTrade",
        "original_trade": "originalTrade",
    });
});
/** @internal */
exports.RebookTradeResponse$outboundSchema = z.object({
    newTrade: z.nullable(z.lazy(() => exports.NewTrade$outboundSchema)).optional(),
    originalTrade: z.nullable(z.lazy(() => exports.OriginalTrade$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        newTrade: "new_trade",
        originalTrade: "original_trade",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RebookTradeResponse$;
(function (RebookTradeResponse$) {
    /** @deprecated use `RebookTradeResponse$inboundSchema` instead. */
    RebookTradeResponse$.inboundSchema = exports.RebookTradeResponse$inboundSchema;
    /** @deprecated use `RebookTradeResponse$outboundSchema` instead. */
    RebookTradeResponse$.outboundSchema = exports.RebookTradeResponse$outboundSchema;
})(RebookTradeResponse$ || (exports.RebookTradeResponse$ = RebookTradeResponse$ = {}));
//# sourceMappingURL=rebooktraderesponse.js.map