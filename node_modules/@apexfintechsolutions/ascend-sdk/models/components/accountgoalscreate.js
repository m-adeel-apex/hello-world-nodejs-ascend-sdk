"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountGoalsCreate$ = exports.AccountGoalsCreate$outboundSchema = exports.AccountGoalsCreate$inboundSchema = exports.TimeHorizon$ = exports.TimeHorizon$outboundSchema = exports.TimeHorizon$inboundSchema = exports.RiskTolerance$ = exports.RiskTolerance$outboundSchema = exports.RiskTolerance$inboundSchema = exports.LiquidityNeeds$ = exports.LiquidityNeeds$outboundSchema = exports.LiquidityNeeds$inboundSchema = exports.InvestmentObjective$ = exports.InvestmentObjective$outboundSchema = exports.InvestmentObjective$inboundSchema = exports.TimeHorizon = exports.RiskTolerance = exports.LiquidityNeeds = exports.InvestmentObjective = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The financial goal or purpose that an investor has in mind when making investment decisions; firms often ask investors to specify their investment objectives when opening an account, in order to provide appropriate investment recommendations and manage risk appropriately
 */
var InvestmentObjective;
(function (InvestmentObjective) {
    InvestmentObjective["InvestmentObjectiveUnspecified"] = "INVESTMENT_OBJECTIVE_UNSPECIFIED";
    InvestmentObjective["Balanced"] = "BALANCED";
    InvestmentObjective["CapitalAppreciation"] = "CAPITAL_APPRECIATION";
    InvestmentObjective["CapitalPreservation"] = "CAPITAL_PRESERVATION";
    InvestmentObjective["Growth"] = "GROWTH";
    InvestmentObjective["GrowthAndIncome"] = "GROWTH_AND_INCOME";
    InvestmentObjective["GrowthIncome"] = "GROWTH_INCOME";
    InvestmentObjective["Income"] = "INCOME";
    InvestmentObjective["LongTermGrowthWithGreaterRisk"] = "LONG_TERM_GROWTH_WITH_GREATER_RISK";
    InvestmentObjective["LongTermGrowthWithSafety"] = "LONG_TERM_GROWTH_WITH_SAFETY";
    InvestmentObjective["MaximumGrowth"] = "MAXIMUM_GROWTH";
    InvestmentObjective["ShortTermGrowthWithRisk"] = "SHORT_TERM_GROWTH_WITH_RISK";
    InvestmentObjective["Speculation"] = "SPECULATION";
    InvestmentObjective["Other"] = "OTHER";
})(InvestmentObjective || (exports.InvestmentObjective = InvestmentObjective = {}));
/**
 * An investor’s short-term cash requirements or the need to access funds quickly; it is important to consider an investor’s liquidity needs to ensure that they have sufficient cash or easily liquidated assets available to meet their financial obligations - this may include holding cash or cash equivalents
 */
var LiquidityNeeds;
(function (LiquidityNeeds) {
    LiquidityNeeds["LiquidityNeedsUnspecified"] = "LIQUIDITY_NEEDS_UNSPECIFIED";
    LiquidityNeeds["VeryImportant"] = "VERY_IMPORTANT";
    LiquidityNeeds["SomewhatImportant"] = "SOMEWHAT_IMPORTANT";
    LiquidityNeeds["NotImportant"] = "NOT_IMPORTANT";
})(LiquidityNeeds || (exports.LiquidityNeeds = LiquidityNeeds = {}));
/**
 * An investor’s willingness and ability to tolerate risk when making investment decisions; reflects the investor’s comfort level with the potential ups and downs of the market and their ability to withstand potential losses
 */
var RiskTolerance;
(function (RiskTolerance) {
    RiskTolerance["RiskToleranceUnspecified"] = "RISK_TOLERANCE_UNSPECIFIED";
    RiskTolerance["Low"] = "LOW";
    RiskTolerance["Medium"] = "MEDIUM";
    RiskTolerance["High"] = "HIGH";
})(RiskTolerance || (exports.RiskTolerance = RiskTolerance = {}));
/**
 * TThe length of time an investor expects to hold an investment before selling it; this can affect the appropriate asset allocation and risk level for the portfolio
 */
var TimeHorizon;
(function (TimeHorizon) {
    TimeHorizon["TimeHorizonUnspecified"] = "TIME_HORIZON_UNSPECIFIED";
    TimeHorizon["Short"] = "SHORT";
    TimeHorizon["Average"] = "AVERAGE";
    TimeHorizon["Long"] = "LONG";
})(TimeHorizon || (exports.TimeHorizon = TimeHorizon = {}));
/** @internal */
exports.InvestmentObjective$inboundSchema = z
    .union([
    z.nativeEnum(InvestmentObjective),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.InvestmentObjective$outboundSchema = z.union([
    z.nativeEnum(InvestmentObjective),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InvestmentObjective$;
(function (InvestmentObjective$) {
    /** @deprecated use `InvestmentObjective$inboundSchema` instead. */
    InvestmentObjective$.inboundSchema = exports.InvestmentObjective$inboundSchema;
    /** @deprecated use `InvestmentObjective$outboundSchema` instead. */
    InvestmentObjective$.outboundSchema = exports.InvestmentObjective$outboundSchema;
})(InvestmentObjective$ || (exports.InvestmentObjective$ = InvestmentObjective$ = {}));
/** @internal */
exports.LiquidityNeeds$inboundSchema = z
    .union([
    z.nativeEnum(LiquidityNeeds),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.LiquidityNeeds$outboundSchema = z.union([
    z.nativeEnum(LiquidityNeeds),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LiquidityNeeds$;
(function (LiquidityNeeds$) {
    /** @deprecated use `LiquidityNeeds$inboundSchema` instead. */
    LiquidityNeeds$.inboundSchema = exports.LiquidityNeeds$inboundSchema;
    /** @deprecated use `LiquidityNeeds$outboundSchema` instead. */
    LiquidityNeeds$.outboundSchema = exports.LiquidityNeeds$outboundSchema;
})(LiquidityNeeds$ || (exports.LiquidityNeeds$ = LiquidityNeeds$ = {}));
/** @internal */
exports.RiskTolerance$inboundSchema = z
    .union([
    z.nativeEnum(RiskTolerance),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.RiskTolerance$outboundSchema = z.union([
    z.nativeEnum(RiskTolerance),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RiskTolerance$;
(function (RiskTolerance$) {
    /** @deprecated use `RiskTolerance$inboundSchema` instead. */
    RiskTolerance$.inboundSchema = exports.RiskTolerance$inboundSchema;
    /** @deprecated use `RiskTolerance$outboundSchema` instead. */
    RiskTolerance$.outboundSchema = exports.RiskTolerance$outboundSchema;
})(RiskTolerance$ || (exports.RiskTolerance$ = RiskTolerance$ = {}));
/** @internal */
exports.TimeHorizon$inboundSchema = z
    .union([
    z.nativeEnum(TimeHorizon),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.TimeHorizon$outboundSchema = z.union([
    z.nativeEnum(TimeHorizon),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TimeHorizon$;
(function (TimeHorizon$) {
    /** @deprecated use `TimeHorizon$inboundSchema` instead. */
    TimeHorizon$.inboundSchema = exports.TimeHorizon$inboundSchema;
    /** @deprecated use `TimeHorizon$outboundSchema` instead. */
    TimeHorizon$.outboundSchema = exports.TimeHorizon$outboundSchema;
})(TimeHorizon$ || (exports.TimeHorizon$ = TimeHorizon$ = {}));
/** @internal */
exports.AccountGoalsCreate$inboundSchema = z.object({
    investment_objective: exports.InvestmentObjective$inboundSchema.optional(),
    liquidity_needs: exports.LiquidityNeeds$inboundSchema.optional(),
    risk_tolerance: exports.RiskTolerance$inboundSchema.optional(),
    time_horizon: exports.TimeHorizon$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "investment_objective": "investmentObjective",
        "liquidity_needs": "liquidityNeeds",
        "risk_tolerance": "riskTolerance",
        "time_horizon": "timeHorizon",
    });
});
/** @internal */
exports.AccountGoalsCreate$outboundSchema = z.object({
    investmentObjective: exports.InvestmentObjective$outboundSchema.optional(),
    liquidityNeeds: exports.LiquidityNeeds$outboundSchema.optional(),
    riskTolerance: exports.RiskTolerance$outboundSchema.optional(),
    timeHorizon: exports.TimeHorizon$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        investmentObjective: "investment_objective",
        liquidityNeeds: "liquidity_needs",
        riskTolerance: "risk_tolerance",
        timeHorizon: "time_horizon",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AccountGoalsCreate$;
(function (AccountGoalsCreate$) {
    /** @deprecated use `AccountGoalsCreate$inboundSchema` instead. */
    AccountGoalsCreate$.inboundSchema = exports.AccountGoalsCreate$inboundSchema;
    /** @deprecated use `AccountGoalsCreate$outboundSchema` instead. */
    AccountGoalsCreate$.outboundSchema = exports.AccountGoalsCreate$outboundSchema;
})(AccountGoalsCreate$ || (exports.AccountGoalsCreate$ = AccountGoalsCreate$ = {}));
//# sourceMappingURL=accountgoalscreate.js.map