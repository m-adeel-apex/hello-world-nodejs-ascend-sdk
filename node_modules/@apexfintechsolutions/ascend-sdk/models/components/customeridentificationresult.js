"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomerIdentificationResult$ = exports.CustomerIdentificationResult$outboundSchema = exports.CustomerIdentificationResult$inboundSchema = exports.SelfieVerified$ = exports.SelfieVerified$outboundSchema = exports.SelfieVerified$inboundSchema = exports.PhoneNumberVerified$ = exports.PhoneNumberVerified$outboundSchema = exports.PhoneNumberVerified$inboundSchema = exports.NameVerified$ = exports.NameVerified$outboundSchema = exports.NameVerified$inboundSchema = exports.LegalAddressVerified$ = exports.LegalAddressVerified$outboundSchema = exports.LegalAddressVerified$inboundSchema = exports.IdentityVerificationTypes$ = exports.IdentityVerificationTypes$outboundSchema = exports.IdentityVerificationTypes$inboundSchema = exports.IdentificationNumberVerified$ = exports.IdentificationNumberVerified$outboundSchema = exports.IdentificationNumberVerified$inboundSchema = exports.EmailVerified$ = exports.EmailVerified$outboundSchema = exports.EmailVerified$inboundSchema = exports.DocumentExpiryStatus$ = exports.DocumentExpiryStatus$outboundSchema = exports.DocumentExpiryStatus$inboundSchema = exports.DocumentAuthenticityVerified$ = exports.DocumentAuthenticityVerified$outboundSchema = exports.DocumentAuthenticityVerified$inboundSchema = exports.BirthDateVerified$ = exports.BirthDateVerified$outboundSchema = exports.BirthDateVerified$inboundSchema = exports.SelfieVerified = exports.PhoneNumberVerified = exports.NameVerified = exports.LegalAddressVerified = exports.IdentityVerificationTypes = exports.IdentificationNumberVerified = exports.EmailVerified = exports.DocumentExpiryStatus = exports.DocumentAuthenticityVerified = exports.BirthDateVerified = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * Whether or not the customer birth date was verified
 */
var BirthDateVerified;
(function (BirthDateVerified) {
    BirthDateVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    BirthDateVerified["NotInScope"] = "NOT_IN_SCOPE";
    BirthDateVerified["Verified"] = "VERIFIED";
    BirthDateVerified["Unverified"] = "UNVERIFIED";
    BirthDateVerified["Inconclusive"] = "INCONCLUSIVE";
})(BirthDateVerified || (exports.BirthDateVerified = BirthDateVerified = {}));
/**
 * Whether or not the document authenticity is verified or not Will be NOT_IN_SCOPE if the check being done is not documentary
 */
var DocumentAuthenticityVerified;
(function (DocumentAuthenticityVerified) {
    DocumentAuthenticityVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    DocumentAuthenticityVerified["NotInScope"] = "NOT_IN_SCOPE";
    DocumentAuthenticityVerified["Verified"] = "VERIFIED";
    DocumentAuthenticityVerified["Unverified"] = "UNVERIFIED";
    DocumentAuthenticityVerified["Inconclusive"] = "INCONCLUSIVE";
})(DocumentAuthenticityVerified || (exports.DocumentAuthenticityVerified = DocumentAuthenticityVerified = {}));
/**
 * Whether or not the document expiry was verified This is only in scope for document verification checks If document is expired this will be set to EXPIRED
 */
var DocumentExpiryStatus;
(function (DocumentExpiryStatus) {
    DocumentExpiryStatus["ExpirationStateUnspecified"] = "EXPIRATION_STATE_UNSPECIFIED";
    DocumentExpiryStatus["Unexpired"] = "UNEXPIRED";
    DocumentExpiryStatus["Expired"] = "EXPIRED";
    DocumentExpiryStatus["NotApplicable"] = "NOT_APPLICABLE";
})(DocumentExpiryStatus || (exports.DocumentExpiryStatus = DocumentExpiryStatus = {}));
/**
 * Whether or not the customer email was verified
 */
var EmailVerified;
(function (EmailVerified) {
    EmailVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    EmailVerified["NotInScope"] = "NOT_IN_SCOPE";
    EmailVerified["Verified"] = "VERIFIED";
    EmailVerified["Unverified"] = "UNVERIFIED";
    EmailVerified["Inconclusive"] = "INCONCLUSIVE";
})(EmailVerified || (exports.EmailVerified = EmailVerified = {}));
/**
 * Whether or not the customer identification number was verified
 */
var IdentificationNumberVerified;
(function (IdentificationNumberVerified) {
    IdentificationNumberVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    IdentificationNumberVerified["NotInScope"] = "NOT_IN_SCOPE";
    IdentificationNumberVerified["Verified"] = "VERIFIED";
    IdentificationNumberVerified["Unverified"] = "UNVERIFIED";
    IdentificationNumberVerified["Inconclusive"] = "INCONCLUSIVE";
})(IdentificationNumberVerified || (exports.IdentificationNumberVerified = IdentificationNumberVerified = {}));
var IdentityVerificationTypes;
(function (IdentityVerificationTypes) {
    IdentityVerificationTypes["IdentityVerificationTypeUnspecified"] = "IDENTITY_VERIFICATION_TYPE_UNSPECIFIED";
    IdentityVerificationTypes["Database"] = "DATABASE";
    IdentityVerificationTypes["Documentary"] = "DOCUMENTARY";
    IdentityVerificationTypes["Selfie"] = "SELFIE";
})(IdentityVerificationTypes || (exports.IdentityVerificationTypes = IdentityVerificationTypes = {}));
/**
 * Whether or not the customer legal address was verified
 */
var LegalAddressVerified;
(function (LegalAddressVerified) {
    LegalAddressVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    LegalAddressVerified["NotInScope"] = "NOT_IN_SCOPE";
    LegalAddressVerified["Verified"] = "VERIFIED";
    LegalAddressVerified["Unverified"] = "UNVERIFIED";
    LegalAddressVerified["Inconclusive"] = "INCONCLUSIVE";
})(LegalAddressVerified || (exports.LegalAddressVerified = LegalAddressVerified = {}));
/**
 * Presents verified results e.g. if name or birth date have been verified
 */
var NameVerified;
(function (NameVerified) {
    NameVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    NameVerified["NotInScope"] = "NOT_IN_SCOPE";
    NameVerified["Verified"] = "VERIFIED";
    NameVerified["Unverified"] = "UNVERIFIED";
    NameVerified["Inconclusive"] = "INCONCLUSIVE";
})(NameVerified || (exports.NameVerified = NameVerified = {}));
/**
 * Whether or not the customer phone number was verified
 */
var PhoneNumberVerified;
(function (PhoneNumberVerified) {
    PhoneNumberVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    PhoneNumberVerified["NotInScope"] = "NOT_IN_SCOPE";
    PhoneNumberVerified["Verified"] = "VERIFIED";
    PhoneNumberVerified["Unverified"] = "UNVERIFIED";
    PhoneNumberVerified["Inconclusive"] = "INCONCLUSIVE";
})(PhoneNumberVerified || (exports.PhoneNumberVerified = PhoneNumberVerified = {}));
/**
 * Whether or not the customer photo identification was verified Will be NOT_IN_SCOPE if the check being done is not selfie
 */
var SelfieVerified;
(function (SelfieVerified) {
    SelfieVerified["VerificationStateUnspecified"] = "VERIFICATION_STATE_UNSPECIFIED";
    SelfieVerified["NotInScope"] = "NOT_IN_SCOPE";
    SelfieVerified["Verified"] = "VERIFIED";
    SelfieVerified["Unverified"] = "UNVERIFIED";
    SelfieVerified["Inconclusive"] = "INCONCLUSIVE";
})(SelfieVerified || (exports.SelfieVerified = SelfieVerified = {}));
/** @internal */
exports.BirthDateVerified$inboundSchema = z
    .union([
    z.nativeEnum(BirthDateVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.BirthDateVerified$outboundSchema = z.union([
    z.nativeEnum(BirthDateVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BirthDateVerified$;
(function (BirthDateVerified$) {
    /** @deprecated use `BirthDateVerified$inboundSchema` instead. */
    BirthDateVerified$.inboundSchema = exports.BirthDateVerified$inboundSchema;
    /** @deprecated use `BirthDateVerified$outboundSchema` instead. */
    BirthDateVerified$.outboundSchema = exports.BirthDateVerified$outboundSchema;
})(BirthDateVerified$ || (exports.BirthDateVerified$ = BirthDateVerified$ = {}));
/** @internal */
exports.DocumentAuthenticityVerified$inboundSchema = z
    .union([
    z.nativeEnum(DocumentAuthenticityVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.DocumentAuthenticityVerified$outboundSchema = z.union([
    z.nativeEnum(DocumentAuthenticityVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DocumentAuthenticityVerified$;
(function (DocumentAuthenticityVerified$) {
    /** @deprecated use `DocumentAuthenticityVerified$inboundSchema` instead. */
    DocumentAuthenticityVerified$.inboundSchema = exports.DocumentAuthenticityVerified$inboundSchema;
    /** @deprecated use `DocumentAuthenticityVerified$outboundSchema` instead. */
    DocumentAuthenticityVerified$.outboundSchema = exports.DocumentAuthenticityVerified$outboundSchema;
})(DocumentAuthenticityVerified$ || (exports.DocumentAuthenticityVerified$ = DocumentAuthenticityVerified$ = {}));
/** @internal */
exports.DocumentExpiryStatus$inboundSchema = z
    .union([
    z.nativeEnum(DocumentExpiryStatus),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.DocumentExpiryStatus$outboundSchema = z.union([
    z.nativeEnum(DocumentExpiryStatus),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DocumentExpiryStatus$;
(function (DocumentExpiryStatus$) {
    /** @deprecated use `DocumentExpiryStatus$inboundSchema` instead. */
    DocumentExpiryStatus$.inboundSchema = exports.DocumentExpiryStatus$inboundSchema;
    /** @deprecated use `DocumentExpiryStatus$outboundSchema` instead. */
    DocumentExpiryStatus$.outboundSchema = exports.DocumentExpiryStatus$outboundSchema;
})(DocumentExpiryStatus$ || (exports.DocumentExpiryStatus$ = DocumentExpiryStatus$ = {}));
/** @internal */
exports.EmailVerified$inboundSchema = z
    .union([
    z.nativeEnum(EmailVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.EmailVerified$outboundSchema = z.union([
    z.nativeEnum(EmailVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EmailVerified$;
(function (EmailVerified$) {
    /** @deprecated use `EmailVerified$inboundSchema` instead. */
    EmailVerified$.inboundSchema = exports.EmailVerified$inboundSchema;
    /** @deprecated use `EmailVerified$outboundSchema` instead. */
    EmailVerified$.outboundSchema = exports.EmailVerified$outboundSchema;
})(EmailVerified$ || (exports.EmailVerified$ = EmailVerified$ = {}));
/** @internal */
exports.IdentificationNumberVerified$inboundSchema = z
    .union([
    z.nativeEnum(IdentificationNumberVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IdentificationNumberVerified$outboundSchema = z.union([
    z.nativeEnum(IdentificationNumberVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IdentificationNumberVerified$;
(function (IdentificationNumberVerified$) {
    /** @deprecated use `IdentificationNumberVerified$inboundSchema` instead. */
    IdentificationNumberVerified$.inboundSchema = exports.IdentificationNumberVerified$inboundSchema;
    /** @deprecated use `IdentificationNumberVerified$outboundSchema` instead. */
    IdentificationNumberVerified$.outboundSchema = exports.IdentificationNumberVerified$outboundSchema;
})(IdentificationNumberVerified$ || (exports.IdentificationNumberVerified$ = IdentificationNumberVerified$ = {}));
/** @internal */
exports.IdentityVerificationTypes$inboundSchema = z
    .union([
    z.nativeEnum(IdentityVerificationTypes),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IdentityVerificationTypes$outboundSchema = z.union([
    z.nativeEnum(IdentityVerificationTypes),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IdentityVerificationTypes$;
(function (IdentityVerificationTypes$) {
    /** @deprecated use `IdentityVerificationTypes$inboundSchema` instead. */
    IdentityVerificationTypes$.inboundSchema = exports.IdentityVerificationTypes$inboundSchema;
    /** @deprecated use `IdentityVerificationTypes$outboundSchema` instead. */
    IdentityVerificationTypes$.outboundSchema = exports.IdentityVerificationTypes$outboundSchema;
})(IdentityVerificationTypes$ || (exports.IdentityVerificationTypes$ = IdentityVerificationTypes$ = {}));
/** @internal */
exports.LegalAddressVerified$inboundSchema = z
    .union([
    z.nativeEnum(LegalAddressVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.LegalAddressVerified$outboundSchema = z.union([
    z.nativeEnum(LegalAddressVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LegalAddressVerified$;
(function (LegalAddressVerified$) {
    /** @deprecated use `LegalAddressVerified$inboundSchema` instead. */
    LegalAddressVerified$.inboundSchema = exports.LegalAddressVerified$inboundSchema;
    /** @deprecated use `LegalAddressVerified$outboundSchema` instead. */
    LegalAddressVerified$.outboundSchema = exports.LegalAddressVerified$outboundSchema;
})(LegalAddressVerified$ || (exports.LegalAddressVerified$ = LegalAddressVerified$ = {}));
/** @internal */
exports.NameVerified$inboundSchema = z
    .union([
    z.nativeEnum(NameVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.NameVerified$outboundSchema = z.union([
    z.nativeEnum(NameVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NameVerified$;
(function (NameVerified$) {
    /** @deprecated use `NameVerified$inboundSchema` instead. */
    NameVerified$.inboundSchema = exports.NameVerified$inboundSchema;
    /** @deprecated use `NameVerified$outboundSchema` instead. */
    NameVerified$.outboundSchema = exports.NameVerified$outboundSchema;
})(NameVerified$ || (exports.NameVerified$ = NameVerified$ = {}));
/** @internal */
exports.PhoneNumberVerified$inboundSchema = z
    .union([
    z.nativeEnum(PhoneNumberVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.PhoneNumberVerified$outboundSchema = z.union([
    z.nativeEnum(PhoneNumberVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PhoneNumberVerified$;
(function (PhoneNumberVerified$) {
    /** @deprecated use `PhoneNumberVerified$inboundSchema` instead. */
    PhoneNumberVerified$.inboundSchema = exports.PhoneNumberVerified$inboundSchema;
    /** @deprecated use `PhoneNumberVerified$outboundSchema` instead. */
    PhoneNumberVerified$.outboundSchema = exports.PhoneNumberVerified$outboundSchema;
})(PhoneNumberVerified$ || (exports.PhoneNumberVerified$ = PhoneNumberVerified$ = {}));
/** @internal */
exports.SelfieVerified$inboundSchema = z
    .union([
    z.nativeEnum(SelfieVerified),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.SelfieVerified$outboundSchema = z.union([
    z.nativeEnum(SelfieVerified),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SelfieVerified$;
(function (SelfieVerified$) {
    /** @deprecated use `SelfieVerified$inboundSchema` instead. */
    SelfieVerified$.inboundSchema = exports.SelfieVerified$inboundSchema;
    /** @deprecated use `SelfieVerified$outboundSchema` instead. */
    SelfieVerified$.outboundSchema = exports.SelfieVerified$outboundSchema;
})(SelfieVerified$ || (exports.SelfieVerified$ = SelfieVerified$ = {}));
/** @internal */
exports.CustomerIdentificationResult$inboundSchema = z.object({
    birth_date_verified: exports.BirthDateVerified$inboundSchema.optional(),
    document_authenticity_verified: exports.DocumentAuthenticityVerified$inboundSchema
        .optional(),
    document_expiry_status: exports.DocumentExpiryStatus$inboundSchema.optional(),
    document_verification_ids: z.array(z.string()).optional(),
    email_verified: exports.EmailVerified$inboundSchema.optional(),
    external_vendor: z.string().optional(),
    external_vendor_id: z.string().optional(),
    identification_number_verified: exports.IdentificationNumberVerified$inboundSchema
        .optional(),
    identity_verification_types: z.array(exports.IdentityVerificationTypes$inboundSchema)
        .optional(),
    legal_address_verified: exports.LegalAddressVerified$inboundSchema.optional(),
    name_verified: exports.NameVerified$inboundSchema.optional(),
    phone_number_verified: exports.PhoneNumberVerified$inboundSchema.optional(),
    raw_vendor_result: z.string().optional(),
    selfie_verified: exports.SelfieVerified$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "birth_date_verified": "birthDateVerified",
        "document_authenticity_verified": "documentAuthenticityVerified",
        "document_expiry_status": "documentExpiryStatus",
        "document_verification_ids": "documentVerificationIds",
        "email_verified": "emailVerified",
        "external_vendor": "externalVendor",
        "external_vendor_id": "externalVendorId",
        "identification_number_verified": "identificationNumberVerified",
        "identity_verification_types": "identityVerificationTypes",
        "legal_address_verified": "legalAddressVerified",
        "name_verified": "nameVerified",
        "phone_number_verified": "phoneNumberVerified",
        "raw_vendor_result": "rawVendorResult",
        "selfie_verified": "selfieVerified",
    });
});
/** @internal */
exports.CustomerIdentificationResult$outboundSchema = z.object({
    birthDateVerified: exports.BirthDateVerified$outboundSchema.optional(),
    documentAuthenticityVerified: exports.DocumentAuthenticityVerified$outboundSchema
        .optional(),
    documentExpiryStatus: exports.DocumentExpiryStatus$outboundSchema.optional(),
    documentVerificationIds: z.array(z.string()).optional(),
    emailVerified: exports.EmailVerified$outboundSchema.optional(),
    externalVendor: z.string().optional(),
    externalVendorId: z.string().optional(),
    identificationNumberVerified: exports.IdentificationNumberVerified$outboundSchema
        .optional(),
    identityVerificationTypes: z.array(exports.IdentityVerificationTypes$outboundSchema)
        .optional(),
    legalAddressVerified: exports.LegalAddressVerified$outboundSchema.optional(),
    nameVerified: exports.NameVerified$outboundSchema.optional(),
    phoneNumberVerified: exports.PhoneNumberVerified$outboundSchema.optional(),
    rawVendorResult: z.string().optional(),
    selfieVerified: exports.SelfieVerified$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        birthDateVerified: "birth_date_verified",
        documentAuthenticityVerified: "document_authenticity_verified",
        documentExpiryStatus: "document_expiry_status",
        documentVerificationIds: "document_verification_ids",
        emailVerified: "email_verified",
        externalVendor: "external_vendor",
        externalVendorId: "external_vendor_id",
        identificationNumberVerified: "identification_number_verified",
        identityVerificationTypes: "identity_verification_types",
        legalAddressVerified: "legal_address_verified",
        nameVerified: "name_verified",
        phoneNumberVerified: "phone_number_verified",
        rawVendorResult: "raw_vendor_result",
        selfieVerified: "selfie_verified",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CustomerIdentificationResult$;
(function (CustomerIdentificationResult$) {
    /** @deprecated use `CustomerIdentificationResult$inboundSchema` instead. */
    CustomerIdentificationResult$.inboundSchema = exports.CustomerIdentificationResult$inboundSchema;
    /** @deprecated use `CustomerIdentificationResult$outboundSchema` instead. */
    CustomerIdentificationResult$.outboundSchema = exports.CustomerIdentificationResult$outboundSchema;
})(CustomerIdentificationResult$ || (exports.CustomerIdentificationResult$ = CustomerIdentificationResult$ = {}));
//# sourceMappingURL=customeridentificationresult.js.map