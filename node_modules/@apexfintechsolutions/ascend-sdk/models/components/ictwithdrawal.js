"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.IctWithdrawalEntityOriginatingParty$inboundSchema = exports.IctWithdrawalAddress$ = exports.IctWithdrawalAddress$outboundSchema = exports.IctWithdrawalAddress$inboundSchema = exports.IctWithdrawalTransferState$ = exports.IctWithdrawalTransferState$outboundSchema = exports.IctWithdrawalTransferState$inboundSchema = exports.IctWithdrawalTransferStateState$ = exports.IctWithdrawalTransferStateState$outboundSchema = exports.IctWithdrawalTransferStateState$inboundSchema = exports.IctWithdrawalState$ = exports.IctWithdrawalState$outboundSchema = exports.IctWithdrawalState$inboundSchema = exports.IctWithdrawalStateState$ = exports.IctWithdrawalStateState$outboundSchema = exports.IctWithdrawalStateState$inboundSchema = exports.IctWithdrawalRetirementDistribution$ = exports.IctWithdrawalRetirementDistribution$outboundSchema = exports.IctWithdrawalRetirementDistribution$inboundSchema = exports.IctWithdrawalType$ = exports.IctWithdrawalType$outboundSchema = exports.IctWithdrawalType$inboundSchema = exports.IctWithdrawalStateTaxWithholding$ = exports.IctWithdrawalStateTaxWithholding$outboundSchema = exports.IctWithdrawalStateTaxWithholding$inboundSchema = exports.IctWithdrawalRetirementDistributionPercentage$ = exports.IctWithdrawalRetirementDistributionPercentage$outboundSchema = exports.IctWithdrawalRetirementDistributionPercentage$inboundSchema = exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$ = exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$outboundSchema = exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$inboundSchema = exports.IctWithdrawalFederalTaxWithholding$ = exports.IctWithdrawalFederalTaxWithholding$outboundSchema = exports.IctWithdrawalFederalTaxWithholding$inboundSchema = exports.IctWithdrawalPercentage$ = exports.IctWithdrawalPercentage$outboundSchema = exports.IctWithdrawalPercentage$inboundSchema = exports.IctWithdrawalRetirementDistributionAmount$ = exports.IctWithdrawalRetirementDistributionAmount$outboundSchema = exports.IctWithdrawalRetirementDistributionAmount$inboundSchema = exports.IctWithdrawalProgram$ = exports.IctWithdrawalProgram$outboundSchema = exports.IctWithdrawalProgram$inboundSchema = exports.IctWithdrawalAmount$ = exports.IctWithdrawalAmount$outboundSchema = exports.IctWithdrawalAmount$inboundSchema = exports.IctWithdrawalTransferStateState = exports.IctWithdrawalStateState = exports.IctWithdrawalType = exports.IctWithdrawalProgram = void 0;
exports.IctWithdrawal$ = exports.IctWithdrawal$outboundSchema = exports.IctWithdrawal$inboundSchema = exports.IctWithdrawalTravelRule$ = exports.IctWithdrawalTravelRule$outboundSchema = exports.IctWithdrawalTravelRule$inboundSchema = exports.IctWithdrawalRecipientInstitution$ = exports.IctWithdrawalRecipientInstitution$outboundSchema = exports.IctWithdrawalRecipientInstitution$inboundSchema = exports.IctWithdrawalOriginatingInstitution$ = exports.IctWithdrawalOriginatingInstitution$outboundSchema = exports.IctWithdrawalOriginatingInstitution$inboundSchema = exports.IctWithdrawalIndividualRecipientParty$ = exports.IctWithdrawalIndividualRecipientParty$outboundSchema = exports.IctWithdrawalIndividualRecipientParty$inboundSchema = exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$ = exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$outboundSchema = exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$inboundSchema = exports.IctWithdrawalIndividualOriginatingParty$ = exports.IctWithdrawalIndividualOriginatingParty$outboundSchema = exports.IctWithdrawalIndividualOriginatingParty$inboundSchema = exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$ = exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$outboundSchema = exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$inboundSchema = exports.IctWithdrawalEntityRecipientParty$ = exports.IctWithdrawalEntityRecipientParty$outboundSchema = exports.IctWithdrawalEntityRecipientParty$inboundSchema = exports.IctWithdrawalTravelRuleAddress$ = exports.IctWithdrawalTravelRuleAddress$outboundSchema = exports.IctWithdrawalTravelRuleAddress$inboundSchema = exports.IctWithdrawalEntityOriginatingParty$ = exports.IctWithdrawalEntityOriginatingParty$outboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The name of the program that the ICT withdrawal is associated with.
 */
var IctWithdrawalProgram;
(function (IctWithdrawalProgram) {
    IctWithdrawalProgram["IctProgramUnspecified"] = "ICT_PROGRAM_UNSPECIFIED";
    IctWithdrawalProgram["BrokerPartner"] = "BROKER_PARTNER";
    IctWithdrawalProgram["DepositOnly"] = "DEPOSIT_ONLY";
    IctWithdrawalProgram["BankingPartner"] = "BANKING_PARTNER";
    IctWithdrawalProgram["MoneyTransmitter"] = "MONEY_TRANSMITTER";
    IctWithdrawalProgram["WithdrawalOnly"] = "WITHDRAWAL_ONLY";
    IctWithdrawalProgram["DigitalPartner"] = "DIGITAL_PARTNER";
})(IctWithdrawalProgram || (exports.IctWithdrawalProgram = IctWithdrawalProgram = {}));
/**
 * The type of retirement distribution.
 */
var IctWithdrawalType;
(function (IctWithdrawalType) {
    IctWithdrawalType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    IctWithdrawalType["Normal"] = "NORMAL";
    IctWithdrawalType["Disability"] = "DISABILITY";
    IctWithdrawalType["Sosepp"] = "SOSEPP";
    IctWithdrawalType["Premature"] = "PREMATURE";
    IctWithdrawalType["Death"] = "DEATH";
    IctWithdrawalType["ExcessContributionRemovalBeforeTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE";
    IctWithdrawalType["ExcessContributionRemovalAfterTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE";
    IctWithdrawalType["RolloverToQualifiedPlan"] = "ROLLOVER_TO_QUALIFIED_PLAN";
    IctWithdrawalType["RolloverToIra"] = "ROLLOVER_TO_IRA";
    IctWithdrawalType["DistributionTransfer"] = "DISTRIBUTION_TRANSFER";
    IctWithdrawalType["RecharacterizationPriorYear"] = "RECHARACTERIZATION_PRIOR_YEAR";
    IctWithdrawalType["RecharacterizationCurrentYear"] = "RECHARACTERIZATION_CURRENT_YEAR";
    IctWithdrawalType["DistributionConversion"] = "DISTRIBUTION_CONVERSION";
    IctWithdrawalType["ManagementFee"] = "MANAGEMENT_FEE";
    IctWithdrawalType["PlanLoan401K"] = "PLAN_LOAN_401K";
    IctWithdrawalType["PrematureSimpleIraLessThan2Years"] = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS";
    IctWithdrawalType["NormalRothIraGreaterThan5Years"] = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS";
    IctWithdrawalType["NetIncomeAttributable"] = "NET_INCOME_ATTRIBUTABLE";
    IctWithdrawalType["Revocation"] = "REVOCATION";
    IctWithdrawalType["NonReportable"] = "NON_REPORTABLE";
})(IctWithdrawalType || (exports.IctWithdrawalType = IctWithdrawalType = {}));
/**
 * The high level state of a transfer, one of:
 *
 * @remarks
 * - `PROCESSING` - The transfer is being processed and will be posted if successful.
 * - `PENDING_REVIEW` - The transfer is pending review and will continue processing if approved.
 * - `POSTED` - The transfer has been posted to the ledger and will be completed at the end of the processing window if not canceled first.
 * - `COMPLETED` - The transfer has been batched and completed.
 * - `REJECTED` - The transfer was rejected.
 * - `CANCELED` - The transfer was canceled.
 * - `RETURNED` - The transfer was returned.
 * - `POSTPONED` - The transfer is postponed and will resume processing during the next processing window.
 */
var IctWithdrawalStateState;
(function (IctWithdrawalStateState) {
    IctWithdrawalStateState["StateUnspecified"] = "STATE_UNSPECIFIED";
    IctWithdrawalStateState["Processing"] = "PROCESSING";
    IctWithdrawalStateState["PendingReview"] = "PENDING_REVIEW";
    IctWithdrawalStateState["Posted"] = "POSTED";
    IctWithdrawalStateState["Completed"] = "COMPLETED";
    IctWithdrawalStateState["Rejected"] = "REJECTED";
    IctWithdrawalStateState["Canceled"] = "CANCELED";
    IctWithdrawalStateState["Returned"] = "RETURNED";
    IctWithdrawalStateState["Postponed"] = "POSTPONED";
})(IctWithdrawalStateState || (exports.IctWithdrawalStateState = IctWithdrawalStateState = {}));
/**
 * The high level state of a transfer, one of:
 *
 * @remarks
 * - `PROCESSING` - The transfer is being processed and will be posted if successful.
 * - `PENDING_REVIEW` - The transfer is pending review and will continue processing if approved.
 * - `POSTED` - The transfer has been posted to the ledger and will be completed at the end of the processing window if not canceled first.
 * - `COMPLETED` - The transfer has been batched and completed.
 * - `REJECTED` - The transfer was rejected.
 * - `CANCELED` - The transfer was canceled.
 * - `RETURNED` - The transfer was returned.
 * - `POSTPONED` - The transfer is postponed and will resume processing during the next processing window.
 */
var IctWithdrawalTransferStateState;
(function (IctWithdrawalTransferStateState) {
    IctWithdrawalTransferStateState["StateUnspecified"] = "STATE_UNSPECIFIED";
    IctWithdrawalTransferStateState["Processing"] = "PROCESSING";
    IctWithdrawalTransferStateState["PendingReview"] = "PENDING_REVIEW";
    IctWithdrawalTransferStateState["Posted"] = "POSTED";
    IctWithdrawalTransferStateState["Completed"] = "COMPLETED";
    IctWithdrawalTransferStateState["Rejected"] = "REJECTED";
    IctWithdrawalTransferStateState["Canceled"] = "CANCELED";
    IctWithdrawalTransferStateState["Returned"] = "RETURNED";
    IctWithdrawalTransferStateState["Postponed"] = "POSTPONED";
})(IctWithdrawalTransferStateState || (exports.IctWithdrawalTransferStateState = IctWithdrawalTransferStateState = {}));
/** @internal */
exports.IctWithdrawalAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.IctWithdrawalAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalAmount$;
(function (IctWithdrawalAmount$) {
    /** @deprecated use `IctWithdrawalAmount$inboundSchema` instead. */
    IctWithdrawalAmount$.inboundSchema = exports.IctWithdrawalAmount$inboundSchema;
    /** @deprecated use `IctWithdrawalAmount$outboundSchema` instead. */
    IctWithdrawalAmount$.outboundSchema = exports.IctWithdrawalAmount$outboundSchema;
})(IctWithdrawalAmount$ || (exports.IctWithdrawalAmount$ = IctWithdrawalAmount$ = {}));
/** @internal */
exports.IctWithdrawalProgram$inboundSchema = z
    .union([
    z.nativeEnum(IctWithdrawalProgram),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IctWithdrawalProgram$outboundSchema = z.union([
    z.nativeEnum(IctWithdrawalProgram),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalProgram$;
(function (IctWithdrawalProgram$) {
    /** @deprecated use `IctWithdrawalProgram$inboundSchema` instead. */
    IctWithdrawalProgram$.inboundSchema = exports.IctWithdrawalProgram$inboundSchema;
    /** @deprecated use `IctWithdrawalProgram$outboundSchema` instead. */
    IctWithdrawalProgram$.outboundSchema = exports.IctWithdrawalProgram$outboundSchema;
})(IctWithdrawalProgram$ || (exports.IctWithdrawalProgram$ = IctWithdrawalProgram$ = {}));
/** @internal */
exports.IctWithdrawalRetirementDistributionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.IctWithdrawalRetirementDistributionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalRetirementDistributionAmount$;
(function (IctWithdrawalRetirementDistributionAmount$) {
    /** @deprecated use `IctWithdrawalRetirementDistributionAmount$inboundSchema` instead. */
    IctWithdrawalRetirementDistributionAmount$.inboundSchema = exports.IctWithdrawalRetirementDistributionAmount$inboundSchema;
    /** @deprecated use `IctWithdrawalRetirementDistributionAmount$outboundSchema` instead. */
    IctWithdrawalRetirementDistributionAmount$.outboundSchema = exports.IctWithdrawalRetirementDistributionAmount$outboundSchema;
})(IctWithdrawalRetirementDistributionAmount$ || (exports.IctWithdrawalRetirementDistributionAmount$ = IctWithdrawalRetirementDistributionAmount$ = {}));
/** @internal */
exports.IctWithdrawalPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.IctWithdrawalPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalPercentage$;
(function (IctWithdrawalPercentage$) {
    /** @deprecated use `IctWithdrawalPercentage$inboundSchema` instead. */
    IctWithdrawalPercentage$.inboundSchema = exports.IctWithdrawalPercentage$inboundSchema;
    /** @deprecated use `IctWithdrawalPercentage$outboundSchema` instead. */
    IctWithdrawalPercentage$.outboundSchema = exports.IctWithdrawalPercentage$outboundSchema;
})(IctWithdrawalPercentage$ || (exports.IctWithdrawalPercentage$ = IctWithdrawalPercentage$ = {}));
/** @internal */
exports.IctWithdrawalFederalTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistributionAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.IctWithdrawalPercentage$inboundSchema))
        .optional(),
});
/** @internal */
exports.IctWithdrawalFederalTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistributionAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.IctWithdrawalPercentage$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalFederalTaxWithholding$;
(function (IctWithdrawalFederalTaxWithholding$) {
    /** @deprecated use `IctWithdrawalFederalTaxWithholding$inboundSchema` instead. */
    IctWithdrawalFederalTaxWithholding$.inboundSchema = exports.IctWithdrawalFederalTaxWithholding$inboundSchema;
    /** @deprecated use `IctWithdrawalFederalTaxWithholding$outboundSchema` instead. */
    IctWithdrawalFederalTaxWithholding$.outboundSchema = exports.IctWithdrawalFederalTaxWithholding$outboundSchema;
})(IctWithdrawalFederalTaxWithholding$ || (exports.IctWithdrawalFederalTaxWithholding$ = IctWithdrawalFederalTaxWithholding$ = {}));
/** @internal */
exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$;
(function (IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$) {
    /** @deprecated use `IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$inboundSchema` instead. */
    IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$.inboundSchema = exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$inboundSchema;
    /** @deprecated use `IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$outboundSchema` instead. */
    IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$.outboundSchema = exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$outboundSchema;
})(IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$ || (exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$ = IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$ = {}));
/** @internal */
exports.IctWithdrawalRetirementDistributionPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.IctWithdrawalRetirementDistributionPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalRetirementDistributionPercentage$;
(function (IctWithdrawalRetirementDistributionPercentage$) {
    /** @deprecated use `IctWithdrawalRetirementDistributionPercentage$inboundSchema` instead. */
    IctWithdrawalRetirementDistributionPercentage$.inboundSchema = exports.IctWithdrawalRetirementDistributionPercentage$inboundSchema;
    /** @deprecated use `IctWithdrawalRetirementDistributionPercentage$outboundSchema` instead. */
    IctWithdrawalRetirementDistributionPercentage$.outboundSchema = exports.IctWithdrawalRetirementDistributionPercentage$outboundSchema;
})(IctWithdrawalRetirementDistributionPercentage$ || (exports.IctWithdrawalRetirementDistributionPercentage$ = IctWithdrawalRetirementDistributionPercentage$ = {}));
/** @internal */
exports.IctWithdrawalStateTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistributionPercentage$inboundSchema)).optional(),
});
/** @internal */
exports.IctWithdrawalStateTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistributionStateTaxWithholdingAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistributionPercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalStateTaxWithholding$;
(function (IctWithdrawalStateTaxWithholding$) {
    /** @deprecated use `IctWithdrawalStateTaxWithholding$inboundSchema` instead. */
    IctWithdrawalStateTaxWithholding$.inboundSchema = exports.IctWithdrawalStateTaxWithholding$inboundSchema;
    /** @deprecated use `IctWithdrawalStateTaxWithholding$outboundSchema` instead. */
    IctWithdrawalStateTaxWithholding$.outboundSchema = exports.IctWithdrawalStateTaxWithholding$outboundSchema;
})(IctWithdrawalStateTaxWithholding$ || (exports.IctWithdrawalStateTaxWithholding$ = IctWithdrawalStateTaxWithholding$ = {}));
/** @internal */
exports.IctWithdrawalType$inboundSchema = z
    .union([
    z.nativeEnum(IctWithdrawalType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IctWithdrawalType$outboundSchema = z.union([
    z.nativeEnum(IctWithdrawalType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalType$;
(function (IctWithdrawalType$) {
    /** @deprecated use `IctWithdrawalType$inboundSchema` instead. */
    IctWithdrawalType$.inboundSchema = exports.IctWithdrawalType$inboundSchema;
    /** @deprecated use `IctWithdrawalType$outboundSchema` instead. */
    IctWithdrawalType$.outboundSchema = exports.IctWithdrawalType$outboundSchema;
})(IctWithdrawalType$ || (exports.IctWithdrawalType$ = IctWithdrawalType$ = {}));
/** @internal */
exports.IctWithdrawalRetirementDistribution$inboundSchema = z.object({
    federal_tax_withholding: z.nullable(z.lazy(() => exports.IctWithdrawalFederalTaxWithholding$inboundSchema)).optional(),
    receiving_institution: z.string().optional(),
    state_tax_withholding: z.nullable(z.lazy(() => exports.IctWithdrawalStateTaxWithholding$inboundSchema)).optional(),
    state_withholding_waiver: z.boolean().optional(),
    tax_year: z.number().int().optional(),
    type: exports.IctWithdrawalType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "federal_tax_withholding": "federalTaxWithholding",
        "receiving_institution": "receivingInstitution",
        "state_tax_withholding": "stateTaxWithholding",
        "state_withholding_waiver": "stateWithholdingWaiver",
        "tax_year": "taxYear",
    });
});
/** @internal */
exports.IctWithdrawalRetirementDistribution$outboundSchema = z.object({
    federalTaxWithholding: z.nullable(z.lazy(() => exports.IctWithdrawalFederalTaxWithholding$outboundSchema)).optional(),
    receivingInstitution: z.string().optional(),
    stateTaxWithholding: z.nullable(z.lazy(() => exports.IctWithdrawalStateTaxWithholding$outboundSchema)).optional(),
    stateWithholdingWaiver: z.boolean().optional(),
    taxYear: z.number().int().optional(),
    type: exports.IctWithdrawalType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        federalTaxWithholding: "federal_tax_withholding",
        receivingInstitution: "receiving_institution",
        stateTaxWithholding: "state_tax_withholding",
        stateWithholdingWaiver: "state_withholding_waiver",
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalRetirementDistribution$;
(function (IctWithdrawalRetirementDistribution$) {
    /** @deprecated use `IctWithdrawalRetirementDistribution$inboundSchema` instead. */
    IctWithdrawalRetirementDistribution$.inboundSchema = exports.IctWithdrawalRetirementDistribution$inboundSchema;
    /** @deprecated use `IctWithdrawalRetirementDistribution$outboundSchema` instead. */
    IctWithdrawalRetirementDistribution$.outboundSchema = exports.IctWithdrawalRetirementDistribution$outboundSchema;
})(IctWithdrawalRetirementDistribution$ || (exports.IctWithdrawalRetirementDistribution$ = IctWithdrawalRetirementDistribution$ = {}));
/** @internal */
exports.IctWithdrawalStateState$inboundSchema = z
    .union([
    z.nativeEnum(IctWithdrawalStateState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IctWithdrawalStateState$outboundSchema = z.union([
    z.nativeEnum(IctWithdrawalStateState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalStateState$;
(function (IctWithdrawalStateState$) {
    /** @deprecated use `IctWithdrawalStateState$inboundSchema` instead. */
    IctWithdrawalStateState$.inboundSchema = exports.IctWithdrawalStateState$inboundSchema;
    /** @deprecated use `IctWithdrawalStateState$outboundSchema` instead. */
    IctWithdrawalStateState$.outboundSchema = exports.IctWithdrawalStateState$outboundSchema;
})(IctWithdrawalStateState$ || (exports.IctWithdrawalStateState$ = IctWithdrawalStateState$ = {}));
/** @internal */
exports.IctWithdrawalState$inboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.IctWithdrawalStateState$inboundSchema.optional(),
    update_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "update_time": "updateTime",
    });
});
/** @internal */
exports.IctWithdrawalState$outboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.IctWithdrawalStateState$outboundSchema.optional(),
    updateTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updateTime: "update_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalState$;
(function (IctWithdrawalState$) {
    /** @deprecated use `IctWithdrawalState$inboundSchema` instead. */
    IctWithdrawalState$.inboundSchema = exports.IctWithdrawalState$inboundSchema;
    /** @deprecated use `IctWithdrawalState$outboundSchema` instead. */
    IctWithdrawalState$.outboundSchema = exports.IctWithdrawalState$outboundSchema;
})(IctWithdrawalState$ || (exports.IctWithdrawalState$ = IctWithdrawalState$ = {}));
/** @internal */
exports.IctWithdrawalTransferStateState$inboundSchema = z
    .union([
    z.nativeEnum(IctWithdrawalTransferStateState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IctWithdrawalTransferStateState$outboundSchema = z.union([
    z.nativeEnum(IctWithdrawalTransferStateState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalTransferStateState$;
(function (IctWithdrawalTransferStateState$) {
    /** @deprecated use `IctWithdrawalTransferStateState$inboundSchema` instead. */
    IctWithdrawalTransferStateState$.inboundSchema = exports.IctWithdrawalTransferStateState$inboundSchema;
    /** @deprecated use `IctWithdrawalTransferStateState$outboundSchema` instead. */
    IctWithdrawalTransferStateState$.outboundSchema = exports.IctWithdrawalTransferStateState$outboundSchema;
})(IctWithdrawalTransferStateState$ || (exports.IctWithdrawalTransferStateState$ = IctWithdrawalTransferStateState$ = {}));
/** @internal */
exports.IctWithdrawalTransferState$inboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.IctWithdrawalTransferStateState$inboundSchema.optional(),
    update_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "update_time": "updateTime",
    });
});
/** @internal */
exports.IctWithdrawalTransferState$outboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.IctWithdrawalTransferStateState$outboundSchema.optional(),
    updateTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updateTime: "update_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalTransferState$;
(function (IctWithdrawalTransferState$) {
    /** @deprecated use `IctWithdrawalTransferState$inboundSchema` instead. */
    IctWithdrawalTransferState$.inboundSchema = exports.IctWithdrawalTransferState$inboundSchema;
    /** @deprecated use `IctWithdrawalTransferState$outboundSchema` instead. */
    IctWithdrawalTransferState$.outboundSchema = exports.IctWithdrawalTransferState$outboundSchema;
})(IctWithdrawalTransferState$ || (exports.IctWithdrawalTransferState$ = IctWithdrawalTransferState$ = {}));
/** @internal */
exports.IctWithdrawalAddress$inboundSchema = z.object({
    address_lines: z.array(z.string()).optional(),
    administrative_area: z.string().optional(),
    language_code: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postal_code: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    region_code: z.string().optional(),
    revision: z.number().int().optional(),
    sorting_code: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "address_lines": "addressLines",
        "administrative_area": "administrativeArea",
        "language_code": "languageCode",
        "postal_code": "postalCode",
        "region_code": "regionCode",
        "sorting_code": "sortingCode",
    });
});
/** @internal */
exports.IctWithdrawalAddress$outboundSchema = z.object({
    addressLines: z.array(z.string()).optional(),
    administrativeArea: z.string().optional(),
    languageCode: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postalCode: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    regionCode: z.string().optional(),
    revision: z.number().int().optional(),
    sortingCode: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        addressLines: "address_lines",
        administrativeArea: "administrative_area",
        languageCode: "language_code",
        postalCode: "postal_code",
        regionCode: "region_code",
        sortingCode: "sorting_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalAddress$;
(function (IctWithdrawalAddress$) {
    /** @deprecated use `IctWithdrawalAddress$inboundSchema` instead. */
    IctWithdrawalAddress$.inboundSchema = exports.IctWithdrawalAddress$inboundSchema;
    /** @deprecated use `IctWithdrawalAddress$outboundSchema` instead. */
    IctWithdrawalAddress$.outboundSchema = exports.IctWithdrawalAddress$outboundSchema;
})(IctWithdrawalAddress$ || (exports.IctWithdrawalAddress$ = IctWithdrawalAddress$ = {}));
/** @internal */
exports.IctWithdrawalEntityOriginatingParty$inboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalAddress$inboundSchema))
        .optional(),
    tax_id: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "tax_id": "taxId",
    });
});
/** @internal */
exports.IctWithdrawalEntityOriginatingParty$outboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalAddress$outboundSchema))
        .optional(),
    taxId: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        taxId: "tax_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalEntityOriginatingParty$;
(function (IctWithdrawalEntityOriginatingParty$) {
    /** @deprecated use `IctWithdrawalEntityOriginatingParty$inboundSchema` instead. */
    IctWithdrawalEntityOriginatingParty$.inboundSchema = exports.IctWithdrawalEntityOriginatingParty$inboundSchema;
    /** @deprecated use `IctWithdrawalEntityOriginatingParty$outboundSchema` instead. */
    IctWithdrawalEntityOriginatingParty$.outboundSchema = exports.IctWithdrawalEntityOriginatingParty$outboundSchema;
})(IctWithdrawalEntityOriginatingParty$ || (exports.IctWithdrawalEntityOriginatingParty$ = IctWithdrawalEntityOriginatingParty$ = {}));
/** @internal */
exports.IctWithdrawalTravelRuleAddress$inboundSchema = z.object({
    address_lines: z.array(z.string()).optional(),
    administrative_area: z.string().optional(),
    language_code: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postal_code: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    region_code: z.string().optional(),
    revision: z.number().int().optional(),
    sorting_code: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "address_lines": "addressLines",
        "administrative_area": "administrativeArea",
        "language_code": "languageCode",
        "postal_code": "postalCode",
        "region_code": "regionCode",
        "sorting_code": "sortingCode",
    });
});
/** @internal */
exports.IctWithdrawalTravelRuleAddress$outboundSchema = z.object({
    addressLines: z.array(z.string()).optional(),
    administrativeArea: z.string().optional(),
    languageCode: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postalCode: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    regionCode: z.string().optional(),
    revision: z.number().int().optional(),
    sortingCode: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        addressLines: "address_lines",
        administrativeArea: "administrative_area",
        languageCode: "language_code",
        postalCode: "postal_code",
        regionCode: "region_code",
        sortingCode: "sorting_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalTravelRuleAddress$;
(function (IctWithdrawalTravelRuleAddress$) {
    /** @deprecated use `IctWithdrawalTravelRuleAddress$inboundSchema` instead. */
    IctWithdrawalTravelRuleAddress$.inboundSchema = exports.IctWithdrawalTravelRuleAddress$inboundSchema;
    /** @deprecated use `IctWithdrawalTravelRuleAddress$outboundSchema` instead. */
    IctWithdrawalTravelRuleAddress$.outboundSchema = exports.IctWithdrawalTravelRuleAddress$outboundSchema;
})(IctWithdrawalTravelRuleAddress$ || (exports.IctWithdrawalTravelRuleAddress$ = IctWithdrawalTravelRuleAddress$ = {}));
/** @internal */
exports.IctWithdrawalEntityRecipientParty$inboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRuleAddress$inboundSchema)).optional(),
    tax_id: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "tax_id": "taxId",
    });
});
/** @internal */
exports.IctWithdrawalEntityRecipientParty$outboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRuleAddress$outboundSchema)).optional(),
    taxId: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        taxId: "tax_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalEntityRecipientParty$;
(function (IctWithdrawalEntityRecipientParty$) {
    /** @deprecated use `IctWithdrawalEntityRecipientParty$inboundSchema` instead. */
    IctWithdrawalEntityRecipientParty$.inboundSchema = exports.IctWithdrawalEntityRecipientParty$inboundSchema;
    /** @deprecated use `IctWithdrawalEntityRecipientParty$outboundSchema` instead. */
    IctWithdrawalEntityRecipientParty$.outboundSchema = exports.IctWithdrawalEntityRecipientParty$outboundSchema;
})(IctWithdrawalEntityRecipientParty$ || (exports.IctWithdrawalEntityRecipientParty$ = IctWithdrawalEntityRecipientParty$ = {}));
/** @internal */
exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$inboundSchema = z.object({
    address_lines: z.array(z.string()).optional(),
    administrative_area: z.string().optional(),
    language_code: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postal_code: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    region_code: z.string().optional(),
    revision: z.number().int().optional(),
    sorting_code: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "address_lines": "addressLines",
        "administrative_area": "administrativeArea",
        "language_code": "languageCode",
        "postal_code": "postalCode",
        "region_code": "regionCode",
        "sorting_code": "sortingCode",
    });
});
/** @internal */
exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$outboundSchema = z.object({
    addressLines: z.array(z.string()).optional(),
    administrativeArea: z.string().optional(),
    languageCode: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postalCode: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    regionCode: z.string().optional(),
    revision: z.number().int().optional(),
    sortingCode: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        addressLines: "address_lines",
        administrativeArea: "administrative_area",
        languageCode: "language_code",
        postalCode: "postal_code",
        regionCode: "region_code",
        sortingCode: "sorting_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$;
(function (IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$) {
    /** @deprecated use `IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$inboundSchema` instead. */
    IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$.inboundSchema = exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$inboundSchema;
    /** @deprecated use `IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$outboundSchema` instead. */
    IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$.outboundSchema = exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$outboundSchema;
})(IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$ || (exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$ = IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$ = {}));
/** @internal */
exports.IctWithdrawalIndividualOriginatingParty$inboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$inboundSchema)).optional(),
    family_name: z.string().optional(),
    given_names: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "family_name": "familyName",
        "given_names": "givenNames",
    });
});
/** @internal */
exports.IctWithdrawalIndividualOriginatingParty$outboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRuleIndividualOriginatingPartyAddress$outboundSchema)).optional(),
    familyName: z.string().optional(),
    givenNames: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        familyName: "family_name",
        givenNames: "given_names",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalIndividualOriginatingParty$;
(function (IctWithdrawalIndividualOriginatingParty$) {
    /** @deprecated use `IctWithdrawalIndividualOriginatingParty$inboundSchema` instead. */
    IctWithdrawalIndividualOriginatingParty$.inboundSchema = exports.IctWithdrawalIndividualOriginatingParty$inboundSchema;
    /** @deprecated use `IctWithdrawalIndividualOriginatingParty$outboundSchema` instead. */
    IctWithdrawalIndividualOriginatingParty$.outboundSchema = exports.IctWithdrawalIndividualOriginatingParty$outboundSchema;
})(IctWithdrawalIndividualOriginatingParty$ || (exports.IctWithdrawalIndividualOriginatingParty$ = IctWithdrawalIndividualOriginatingParty$ = {}));
/** @internal */
exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$inboundSchema = z.object({
    address_lines: z.array(z.string()).optional(),
    administrative_area: z.string().optional(),
    language_code: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postal_code: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    region_code: z.string().optional(),
    revision: z.number().int().optional(),
    sorting_code: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "address_lines": "addressLines",
        "administrative_area": "administrativeArea",
        "language_code": "languageCode",
        "postal_code": "postalCode",
        "region_code": "regionCode",
        "sorting_code": "sortingCode",
    });
});
/** @internal */
exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$outboundSchema = z.object({
    addressLines: z.array(z.string()).optional(),
    administrativeArea: z.string().optional(),
    languageCode: z.string().optional(),
    locality: z.string().optional(),
    organization: z.string().optional(),
    postalCode: z.string().optional(),
    recipients: z.array(z.string()).optional(),
    regionCode: z.string().optional(),
    revision: z.number().int().optional(),
    sortingCode: z.string().optional(),
    sublocality: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        addressLines: "address_lines",
        administrativeArea: "administrative_area",
        languageCode: "language_code",
        postalCode: "postal_code",
        regionCode: "region_code",
        sortingCode: "sorting_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalTravelRuleIndividualRecipientPartyAddress$;
(function (IctWithdrawalTravelRuleIndividualRecipientPartyAddress$) {
    /** @deprecated use `IctWithdrawalTravelRuleIndividualRecipientPartyAddress$inboundSchema` instead. */
    IctWithdrawalTravelRuleIndividualRecipientPartyAddress$.inboundSchema = exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$inboundSchema;
    /** @deprecated use `IctWithdrawalTravelRuleIndividualRecipientPartyAddress$outboundSchema` instead. */
    IctWithdrawalTravelRuleIndividualRecipientPartyAddress$.outboundSchema = exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$outboundSchema;
})(IctWithdrawalTravelRuleIndividualRecipientPartyAddress$ || (exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$ = IctWithdrawalTravelRuleIndividualRecipientPartyAddress$ = {}));
/** @internal */
exports.IctWithdrawalIndividualRecipientParty$inboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$inboundSchema)).optional(),
    family_name: z.string().optional(),
    given_names: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "family_name": "familyName",
        "given_names": "givenNames",
    });
});
/** @internal */
exports.IctWithdrawalIndividualRecipientParty$outboundSchema = z.object({
    address: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRuleIndividualRecipientPartyAddress$outboundSchema)).optional(),
    familyName: z.string().optional(),
    givenNames: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        familyName: "family_name",
        givenNames: "given_names",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalIndividualRecipientParty$;
(function (IctWithdrawalIndividualRecipientParty$) {
    /** @deprecated use `IctWithdrawalIndividualRecipientParty$inboundSchema` instead. */
    IctWithdrawalIndividualRecipientParty$.inboundSchema = exports.IctWithdrawalIndividualRecipientParty$inboundSchema;
    /** @deprecated use `IctWithdrawalIndividualRecipientParty$outboundSchema` instead. */
    IctWithdrawalIndividualRecipientParty$.outboundSchema = exports.IctWithdrawalIndividualRecipientParty$outboundSchema;
})(IctWithdrawalIndividualRecipientParty$ || (exports.IctWithdrawalIndividualRecipientParty$ = IctWithdrawalIndividualRecipientParty$ = {}));
/** @internal */
exports.IctWithdrawalOriginatingInstitution$inboundSchema = z.object({
    account_id: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
    });
});
/** @internal */
exports.IctWithdrawalOriginatingInstitution$outboundSchema = z.object({
    accountId: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalOriginatingInstitution$;
(function (IctWithdrawalOriginatingInstitution$) {
    /** @deprecated use `IctWithdrawalOriginatingInstitution$inboundSchema` instead. */
    IctWithdrawalOriginatingInstitution$.inboundSchema = exports.IctWithdrawalOriginatingInstitution$inboundSchema;
    /** @deprecated use `IctWithdrawalOriginatingInstitution$outboundSchema` instead. */
    IctWithdrawalOriginatingInstitution$.outboundSchema = exports.IctWithdrawalOriginatingInstitution$outboundSchema;
})(IctWithdrawalOriginatingInstitution$ || (exports.IctWithdrawalOriginatingInstitution$ = IctWithdrawalOriginatingInstitution$ = {}));
/** @internal */
exports.IctWithdrawalRecipientInstitution$inboundSchema = z.object({
    account_id: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
    });
});
/** @internal */
exports.IctWithdrawalRecipientInstitution$outboundSchema = z.object({
    accountId: z.string().optional(),
    title: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalRecipientInstitution$;
(function (IctWithdrawalRecipientInstitution$) {
    /** @deprecated use `IctWithdrawalRecipientInstitution$inboundSchema` instead. */
    IctWithdrawalRecipientInstitution$.inboundSchema = exports.IctWithdrawalRecipientInstitution$inboundSchema;
    /** @deprecated use `IctWithdrawalRecipientInstitution$outboundSchema` instead. */
    IctWithdrawalRecipientInstitution$.outboundSchema = exports.IctWithdrawalRecipientInstitution$outboundSchema;
})(IctWithdrawalRecipientInstitution$ || (exports.IctWithdrawalRecipientInstitution$ = IctWithdrawalRecipientInstitution$ = {}));
/** @internal */
exports.IctWithdrawalTravelRule$inboundSchema = z.object({
    entity_originating_party: z.nullable(z.lazy(() => exports.IctWithdrawalEntityOriginatingParty$inboundSchema)).optional(),
    entity_recipient_party: z.nullable(z.lazy(() => exports.IctWithdrawalEntityRecipientParty$inboundSchema)).optional(),
    individual_originating_party: z.nullable(z.lazy(() => exports.IctWithdrawalIndividualOriginatingParty$inboundSchema)).optional(),
    individual_recipient_party: z.nullable(z.lazy(() => exports.IctWithdrawalIndividualRecipientParty$inboundSchema)).optional(),
    originating_institution: z.nullable(z.lazy(() => exports.IctWithdrawalOriginatingInstitution$inboundSchema)).optional(),
    recipient_institution: z.nullable(z.lazy(() => exports.IctWithdrawalRecipientInstitution$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "entity_originating_party": "entityOriginatingParty",
        "entity_recipient_party": "entityRecipientParty",
        "individual_originating_party": "individualOriginatingParty",
        "individual_recipient_party": "individualRecipientParty",
        "originating_institution": "originatingInstitution",
        "recipient_institution": "recipientInstitution",
    });
});
/** @internal */
exports.IctWithdrawalTravelRule$outboundSchema = z.object({
    entityOriginatingParty: z.nullable(z.lazy(() => exports.IctWithdrawalEntityOriginatingParty$outboundSchema)).optional(),
    entityRecipientParty: z.nullable(z.lazy(() => exports.IctWithdrawalEntityRecipientParty$outboundSchema)).optional(),
    individualOriginatingParty: z.nullable(z.lazy(() => exports.IctWithdrawalIndividualOriginatingParty$outboundSchema)).optional(),
    individualRecipientParty: z.nullable(z.lazy(() => exports.IctWithdrawalIndividualRecipientParty$outboundSchema)).optional(),
    originatingInstitution: z.nullable(z.lazy(() => exports.IctWithdrawalOriginatingInstitution$outboundSchema)).optional(),
    recipientInstitution: z.nullable(z.lazy(() => exports.IctWithdrawalRecipientInstitution$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        entityOriginatingParty: "entity_originating_party",
        entityRecipientParty: "entity_recipient_party",
        individualOriginatingParty: "individual_originating_party",
        individualRecipientParty: "individual_recipient_party",
        originatingInstitution: "originating_institution",
        recipientInstitution: "recipient_institution",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawalTravelRule$;
(function (IctWithdrawalTravelRule$) {
    /** @deprecated use `IctWithdrawalTravelRule$inboundSchema` instead. */
    IctWithdrawalTravelRule$.inboundSchema = exports.IctWithdrawalTravelRule$inboundSchema;
    /** @deprecated use `IctWithdrawalTravelRule$outboundSchema` instead. */
    IctWithdrawalTravelRule$.outboundSchema = exports.IctWithdrawalTravelRule$outboundSchema;
})(IctWithdrawalTravelRule$ || (exports.IctWithdrawalTravelRule$ = IctWithdrawalTravelRule$ = {}));
/** @internal */
exports.IctWithdrawal$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.IctWithdrawalAmount$inboundSchema))
        .optional(),
    client_transfer_id: z.string().optional(),
    name: z.string().optional(),
    program: exports.IctWithdrawalProgram$inboundSchema.optional(),
    retirement_distribution: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistribution$inboundSchema)).optional(),
    state: z.nullable(z.lazy(() => exports.IctWithdrawalState$inboundSchema)).optional(),
    transfer_state: z.nullable(z.lazy(() => exports.IctWithdrawalTransferState$inboundSchema)).optional(),
    travel_rule: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRule$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "client_transfer_id": "clientTransferId",
        "retirement_distribution": "retirementDistribution",
        "transfer_state": "transferState",
        "travel_rule": "travelRule",
    });
});
/** @internal */
exports.IctWithdrawal$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.IctWithdrawalAmount$outboundSchema))
        .optional(),
    clientTransferId: z.string().optional(),
    name: z.string().optional(),
    program: exports.IctWithdrawalProgram$outboundSchema.optional(),
    retirementDistribution: z.nullable(z.lazy(() => exports.IctWithdrawalRetirementDistribution$outboundSchema)).optional(),
    state: z.nullable(z.lazy(() => exports.IctWithdrawalState$outboundSchema)).optional(),
    transferState: z.nullable(z.lazy(() => exports.IctWithdrawalTransferState$outboundSchema)).optional(),
    travelRule: z.nullable(z.lazy(() => exports.IctWithdrawalTravelRule$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        clientTransferId: "client_transfer_id",
        retirementDistribution: "retirement_distribution",
        transferState: "transfer_state",
        travelRule: "travel_rule",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IctWithdrawal$;
(function (IctWithdrawal$) {
    /** @deprecated use `IctWithdrawal$inboundSchema` instead. */
    IctWithdrawal$.inboundSchema = exports.IctWithdrawal$inboundSchema;
    /** @deprecated use `IctWithdrawal$outboundSchema` instead. */
    IctWithdrawal$.outboundSchema = exports.IctWithdrawal$outboundSchema;
})(IctWithdrawal$ || (exports.IctWithdrawal$ = IctWithdrawal$ = {}));
//# sourceMappingURL=ictwithdrawal.js.map