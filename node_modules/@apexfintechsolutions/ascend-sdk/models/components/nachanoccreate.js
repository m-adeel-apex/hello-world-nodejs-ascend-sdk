"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.NachaNocCreate$ = exports.NachaNocCreate$outboundSchema = exports.NachaNocCreate$inboundSchema = exports.UpdatedBankAccountType$ = exports.UpdatedBankAccountType$outboundSchema = exports.UpdatedBankAccountType$inboundSchema = exports.Code$ = exports.Code$outboundSchema = exports.Code$inboundSchema = exports.UpdatedBankAccountType = exports.Code = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The notice of change reason code.
 */
var Code;
(function (Code) {
    Code["CodeUnspecified"] = "CODE_UNSPECIFIED";
    Code["C01"] = "C01";
    Code["C02"] = "C02";
    Code["C03"] = "C03";
    Code["C04"] = "C04";
    Code["C05"] = "C05";
    Code["C06"] = "C06";
    Code["C07"] = "C07";
    Code["C08"] = "C08";
    Code["C09"] = "C09";
    Code["C13"] = "C13";
    Code["C14"] = "C14";
    Code["C61"] = "C61";
    Code["C62"] = "C62";
    Code["C63"] = "C63";
    Code["C64"] = "C64";
    Code["C65"] = "C65";
    Code["C66"] = "C66";
    Code["C67"] = "C67";
    Code["C68"] = "C68";
    Code["C69"] = "C69";
})(Code || (exports.Code = Code = {}));
/**
 * The updated bank account type. Should only be set when the code is for an incorrect transaction code.
 */
var UpdatedBankAccountType;
(function (UpdatedBankAccountType) {
    UpdatedBankAccountType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    UpdatedBankAccountType["Checking"] = "CHECKING";
    UpdatedBankAccountType["Savings"] = "SAVINGS";
})(UpdatedBankAccountType || (exports.UpdatedBankAccountType = UpdatedBankAccountType = {}));
/** @internal */
exports.Code$inboundSchema = z
    .union([
    z.nativeEnum(Code),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.Code$outboundSchema = z.union([
    z.nativeEnum(Code),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Code$;
(function (Code$) {
    /** @deprecated use `Code$inboundSchema` instead. */
    Code$.inboundSchema = exports.Code$inboundSchema;
    /** @deprecated use `Code$outboundSchema` instead. */
    Code$.outboundSchema = exports.Code$outboundSchema;
})(Code$ || (exports.Code$ = Code$ = {}));
/** @internal */
exports.UpdatedBankAccountType$inboundSchema = z
    .union([
    z.nativeEnum(UpdatedBankAccountType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.UpdatedBankAccountType$outboundSchema = z.union([
    z.nativeEnum(UpdatedBankAccountType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UpdatedBankAccountType$;
(function (UpdatedBankAccountType$) {
    /** @deprecated use `UpdatedBankAccountType$inboundSchema` instead. */
    UpdatedBankAccountType$.inboundSchema = exports.UpdatedBankAccountType$inboundSchema;
    /** @deprecated use `UpdatedBankAccountType$outboundSchema` instead. */
    UpdatedBankAccountType$.outboundSchema = exports.UpdatedBankAccountType$outboundSchema;
})(UpdatedBankAccountType$ || (exports.UpdatedBankAccountType$ = UpdatedBankAccountType$ = {}));
/** @internal */
exports.NachaNocCreate$inboundSchema = z.object({
    code: exports.Code$inboundSchema,
    updated_bank_account_number: z.string().optional(),
    updated_bank_account_type: exports.UpdatedBankAccountType$inboundSchema.optional(),
    updated_bank_routing_number: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "updated_bank_account_number": "updatedBankAccountNumber",
        "updated_bank_account_type": "updatedBankAccountType",
        "updated_bank_routing_number": "updatedBankRoutingNumber",
    });
});
/** @internal */
exports.NachaNocCreate$outboundSchema = z.object({
    code: exports.Code$outboundSchema,
    updatedBankAccountNumber: z.string().optional(),
    updatedBankAccountType: exports.UpdatedBankAccountType$outboundSchema.optional(),
    updatedBankRoutingNumber: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updatedBankAccountNumber: "updated_bank_account_number",
        updatedBankAccountType: "updated_bank_account_type",
        updatedBankRoutingNumber: "updated_bank_routing_number",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NachaNocCreate$;
(function (NachaNocCreate$) {
    /** @deprecated use `NachaNocCreate$inboundSchema` instead. */
    NachaNocCreate$.inboundSchema = exports.NachaNocCreate$inboundSchema;
    /** @deprecated use `NachaNocCreate$outboundSchema` instead. */
    NachaNocCreate$.outboundSchema = exports.NachaNocCreate$outboundSchema;
})(NachaNocCreate$ || (exports.NachaNocCreate$ = NachaNocCreate$ = {}));
//# sourceMappingURL=nachanoccreate.js.map