"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WireWithdrawalRecipientBankAddress$outboundSchema = exports.WireWithdrawalRecipientBankAddress$inboundSchema = exports.WireWithdrawalBankId$ = exports.WireWithdrawalBankId$outboundSchema = exports.WireWithdrawalBankId$inboundSchema = exports.WireWithdrawalRecipientBankType$ = exports.WireWithdrawalRecipientBankType$outboundSchema = exports.WireWithdrawalRecipientBankType$inboundSchema = exports.WireWithdrawalIraDistribution$ = exports.WireWithdrawalIraDistribution$outboundSchema = exports.WireWithdrawalIraDistribution$inboundSchema = exports.WireWithdrawalType$ = exports.WireWithdrawalType$outboundSchema = exports.WireWithdrawalType$inboundSchema = exports.WireWithdrawalStateTaxWithholding$ = exports.WireWithdrawalStateTaxWithholding$outboundSchema = exports.WireWithdrawalStateTaxWithholding$inboundSchema = exports.WireWithdrawalIraDistributionPercentage$ = exports.WireWithdrawalIraDistributionPercentage$outboundSchema = exports.WireWithdrawalIraDistributionPercentage$inboundSchema = exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$ = exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$outboundSchema = exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$inboundSchema = exports.WireWithdrawalFederalTaxWithholding$ = exports.WireWithdrawalFederalTaxWithholding$outboundSchema = exports.WireWithdrawalFederalTaxWithholding$inboundSchema = exports.WireWithdrawalPercentage$ = exports.WireWithdrawalPercentage$outboundSchema = exports.WireWithdrawalPercentage$inboundSchema = exports.WireWithdrawalIraDistributionAmount$ = exports.WireWithdrawalIraDistributionAmount$outboundSchema = exports.WireWithdrawalIraDistributionAmount$inboundSchema = exports.WireWithdrawalIntermediary$ = exports.WireWithdrawalIntermediary$outboundSchema = exports.WireWithdrawalIntermediary$inboundSchema = exports.WireWithdrawalIntermediaryAddress$ = exports.WireWithdrawalIntermediaryAddress$outboundSchema = exports.WireWithdrawalIntermediaryAddress$inboundSchema = exports.WireWithdrawalBeneficiary$ = exports.WireWithdrawalBeneficiary$outboundSchema = exports.WireWithdrawalBeneficiary$inboundSchema = exports.WireWithdrawalAddress$ = exports.WireWithdrawalAddress$outboundSchema = exports.WireWithdrawalAddress$inboundSchema = exports.WireWithdrawalAmount$ = exports.WireWithdrawalAmount$outboundSchema = exports.WireWithdrawalAmount$inboundSchema = exports.WireWithdrawalStateState = exports.WireWithdrawalRecipientBankType = exports.WireWithdrawalType = void 0;
exports.WireWithdrawal$ = exports.WireWithdrawal$outboundSchema = exports.WireWithdrawal$inboundSchema = exports.WireWithdrawalState$ = exports.WireWithdrawalState$outboundSchema = exports.WireWithdrawalState$inboundSchema = exports.WireWithdrawalStateState$ = exports.WireWithdrawalStateState$outboundSchema = exports.WireWithdrawalStateState$inboundSchema = exports.WireWithdrawalRecipientBank$ = exports.WireWithdrawalRecipientBank$outboundSchema = exports.WireWithdrawalRecipientBank$inboundSchema = exports.WireWithdrawalInternationalBankDetails$ = exports.WireWithdrawalInternationalBankDetails$outboundSchema = exports.WireWithdrawalInternationalBankDetails$inboundSchema = exports.WireWithdrawalRecipientBankAddress$ = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The type of retirement distribution.
 */
var WireWithdrawalType;
(function (WireWithdrawalType) {
    WireWithdrawalType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    WireWithdrawalType["Normal"] = "NORMAL";
    WireWithdrawalType["Disability"] = "DISABILITY";
    WireWithdrawalType["Sosepp"] = "SOSEPP";
    WireWithdrawalType["Premature"] = "PREMATURE";
    WireWithdrawalType["Death"] = "DEATH";
    WireWithdrawalType["ExcessContributionRemovalBeforeTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_BEFORE_TAX_DEADLINE";
    WireWithdrawalType["ExcessContributionRemovalAfterTaxDeadline"] = "EXCESS_CONTRIBUTION_REMOVAL_AFTER_TAX_DEADLINE";
    WireWithdrawalType["RolloverToQualifiedPlan"] = "ROLLOVER_TO_QUALIFIED_PLAN";
    WireWithdrawalType["RolloverToIra"] = "ROLLOVER_TO_IRA";
    WireWithdrawalType["DistributionTransfer"] = "DISTRIBUTION_TRANSFER";
    WireWithdrawalType["RecharacterizationPriorYear"] = "RECHARACTERIZATION_PRIOR_YEAR";
    WireWithdrawalType["RecharacterizationCurrentYear"] = "RECHARACTERIZATION_CURRENT_YEAR";
    WireWithdrawalType["DistributionConversion"] = "DISTRIBUTION_CONVERSION";
    WireWithdrawalType["ManagementFee"] = "MANAGEMENT_FEE";
    WireWithdrawalType["PlanLoan401K"] = "PLAN_LOAN_401K";
    WireWithdrawalType["PrematureSimpleIraLessThan2Years"] = "PREMATURE_SIMPLE_IRA_LESS_THAN_2_YEARS";
    WireWithdrawalType["NormalRothIraGreaterThan5Years"] = "NORMAL_ROTH_IRA_GREATER_THAN_5_YEARS";
    WireWithdrawalType["NetIncomeAttributable"] = "NET_INCOME_ATTRIBUTABLE";
    WireWithdrawalType["Revocation"] = "REVOCATION";
    WireWithdrawalType["NonReportable"] = "NON_REPORTABLE";
})(WireWithdrawalType || (exports.WireWithdrawalType = WireWithdrawalType = {}));
/**
 * The type of bank identifier specified
 */
var WireWithdrawalRecipientBankType;
(function (WireWithdrawalRecipientBankType) {
    WireWithdrawalRecipientBankType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    WireWithdrawalRecipientBankType["Aba"] = "ABA";
    WireWithdrawalRecipientBankType["Bic"] = "BIC";
})(WireWithdrawalRecipientBankType || (exports.WireWithdrawalRecipientBankType = WireWithdrawalRecipientBankType = {}));
/**
 * The high level state of a transfer, one of:
 *
 * @remarks
 * - `PROCESSING` - The transfer is being processed and will be posted if successful.
 * - `PENDING_REVIEW` - The transfer is pending review and will continue processing if approved.
 * - `POSTED` - The transfer has been posted to the ledger and will be completed at the end of the processing window if not canceled first.
 * - `COMPLETED` - The transfer has been batched and completed.
 * - `REJECTED` - The transfer was rejected.
 * - `CANCELED` - The transfer was canceled.
 * - `RETURNED` - The transfer was returned.
 * - `POSTPONED` - The transfer is postponed and will resume processing during the next processing window.
 */
var WireWithdrawalStateState;
(function (WireWithdrawalStateState) {
    WireWithdrawalStateState["StateUnspecified"] = "STATE_UNSPECIFIED";
    WireWithdrawalStateState["Processing"] = "PROCESSING";
    WireWithdrawalStateState["PendingReview"] = "PENDING_REVIEW";
    WireWithdrawalStateState["Posted"] = "POSTED";
    WireWithdrawalStateState["Completed"] = "COMPLETED";
    WireWithdrawalStateState["Rejected"] = "REJECTED";
    WireWithdrawalStateState["Canceled"] = "CANCELED";
    WireWithdrawalStateState["Returned"] = "RETURNED";
    WireWithdrawalStateState["Postponed"] = "POSTPONED";
})(WireWithdrawalStateState || (exports.WireWithdrawalStateState = WireWithdrawalStateState = {}));
/** @internal */
exports.WireWithdrawalAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.WireWithdrawalAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalAmount$;
(function (WireWithdrawalAmount$) {
    /** @deprecated use `WireWithdrawalAmount$inboundSchema` instead. */
    WireWithdrawalAmount$.inboundSchema = exports.WireWithdrawalAmount$inboundSchema;
    /** @deprecated use `WireWithdrawalAmount$outboundSchema` instead. */
    WireWithdrawalAmount$.outboundSchema = exports.WireWithdrawalAmount$outboundSchema;
})(WireWithdrawalAmount$ || (exports.WireWithdrawalAmount$ = WireWithdrawalAmount$ = {}));
/** @internal */
exports.WireWithdrawalAddress$inboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postal_code: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
exports.WireWithdrawalAddress$outboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalAddress$;
(function (WireWithdrawalAddress$) {
    /** @deprecated use `WireWithdrawalAddress$inboundSchema` instead. */
    WireWithdrawalAddress$.inboundSchema = exports.WireWithdrawalAddress$inboundSchema;
    /** @deprecated use `WireWithdrawalAddress$outboundSchema` instead. */
    WireWithdrawalAddress$.outboundSchema = exports.WireWithdrawalAddress$outboundSchema;
})(WireWithdrawalAddress$ || (exports.WireWithdrawalAddress$ = WireWithdrawalAddress$ = {}));
/** @internal */
exports.WireWithdrawalBeneficiary$inboundSchema = z.object({
    account: z.string().optional(),
    account_title: z.string().optional(),
    address: z.nullable(z.lazy(() => exports.WireWithdrawalAddress$inboundSchema))
        .optional(),
    third_party: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_title": "accountTitle",
        "third_party": "thirdParty",
    });
});
/** @internal */
exports.WireWithdrawalBeneficiary$outboundSchema = z.object({
    account: z.string().optional(),
    accountTitle: z.string().optional(),
    address: z.nullable(z.lazy(() => exports.WireWithdrawalAddress$outboundSchema))
        .optional(),
    thirdParty: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountTitle: "account_title",
        thirdParty: "third_party",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalBeneficiary$;
(function (WireWithdrawalBeneficiary$) {
    /** @deprecated use `WireWithdrawalBeneficiary$inboundSchema` instead. */
    WireWithdrawalBeneficiary$.inboundSchema = exports.WireWithdrawalBeneficiary$inboundSchema;
    /** @deprecated use `WireWithdrawalBeneficiary$outboundSchema` instead. */
    WireWithdrawalBeneficiary$.outboundSchema = exports.WireWithdrawalBeneficiary$outboundSchema;
})(WireWithdrawalBeneficiary$ || (exports.WireWithdrawalBeneficiary$ = WireWithdrawalBeneficiary$ = {}));
/** @internal */
exports.WireWithdrawalIntermediaryAddress$inboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postal_code: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
exports.WireWithdrawalIntermediaryAddress$outboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalIntermediaryAddress$;
(function (WireWithdrawalIntermediaryAddress$) {
    /** @deprecated use `WireWithdrawalIntermediaryAddress$inboundSchema` instead. */
    WireWithdrawalIntermediaryAddress$.inboundSchema = exports.WireWithdrawalIntermediaryAddress$inboundSchema;
    /** @deprecated use `WireWithdrawalIntermediaryAddress$outboundSchema` instead. */
    WireWithdrawalIntermediaryAddress$.outboundSchema = exports.WireWithdrawalIntermediaryAddress$outboundSchema;
})(WireWithdrawalIntermediaryAddress$ || (exports.WireWithdrawalIntermediaryAddress$ = WireWithdrawalIntermediaryAddress$ = {}));
/** @internal */
exports.WireWithdrawalIntermediary$inboundSchema = z.object({
    account: z.string().optional(),
    account_title: z.string().optional(),
    address: z.nullable(z.lazy(() => exports.WireWithdrawalIntermediaryAddress$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_title": "accountTitle",
    });
});
/** @internal */
exports.WireWithdrawalIntermediary$outboundSchema = z.object({
    account: z.string().optional(),
    accountTitle: z.string().optional(),
    address: z.nullable(z.lazy(() => exports.WireWithdrawalIntermediaryAddress$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountTitle: "account_title",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalIntermediary$;
(function (WireWithdrawalIntermediary$) {
    /** @deprecated use `WireWithdrawalIntermediary$inboundSchema` instead. */
    WireWithdrawalIntermediary$.inboundSchema = exports.WireWithdrawalIntermediary$inboundSchema;
    /** @deprecated use `WireWithdrawalIntermediary$outboundSchema` instead. */
    WireWithdrawalIntermediary$.outboundSchema = exports.WireWithdrawalIntermediary$outboundSchema;
})(WireWithdrawalIntermediary$ || (exports.WireWithdrawalIntermediary$ = WireWithdrawalIntermediary$ = {}));
/** @internal */
exports.WireWithdrawalIraDistributionAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.WireWithdrawalIraDistributionAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalIraDistributionAmount$;
(function (WireWithdrawalIraDistributionAmount$) {
    /** @deprecated use `WireWithdrawalIraDistributionAmount$inboundSchema` instead. */
    WireWithdrawalIraDistributionAmount$.inboundSchema = exports.WireWithdrawalIraDistributionAmount$inboundSchema;
    /** @deprecated use `WireWithdrawalIraDistributionAmount$outboundSchema` instead. */
    WireWithdrawalIraDistributionAmount$.outboundSchema = exports.WireWithdrawalIraDistributionAmount$outboundSchema;
})(WireWithdrawalIraDistributionAmount$ || (exports.WireWithdrawalIraDistributionAmount$ = WireWithdrawalIraDistributionAmount$ = {}));
/** @internal */
exports.WireWithdrawalPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.WireWithdrawalPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalPercentage$;
(function (WireWithdrawalPercentage$) {
    /** @deprecated use `WireWithdrawalPercentage$inboundSchema` instead. */
    WireWithdrawalPercentage$.inboundSchema = exports.WireWithdrawalPercentage$inboundSchema;
    /** @deprecated use `WireWithdrawalPercentage$outboundSchema` instead. */
    WireWithdrawalPercentage$.outboundSchema = exports.WireWithdrawalPercentage$outboundSchema;
})(WireWithdrawalPercentage$ || (exports.WireWithdrawalPercentage$ = WireWithdrawalPercentage$ = {}));
/** @internal */
exports.WireWithdrawalFederalTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistributionAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.WireWithdrawalPercentage$inboundSchema))
        .optional(),
});
/** @internal */
exports.WireWithdrawalFederalTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistributionAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.WireWithdrawalPercentage$outboundSchema))
        .optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalFederalTaxWithholding$;
(function (WireWithdrawalFederalTaxWithholding$) {
    /** @deprecated use `WireWithdrawalFederalTaxWithholding$inboundSchema` instead. */
    WireWithdrawalFederalTaxWithholding$.inboundSchema = exports.WireWithdrawalFederalTaxWithholding$inboundSchema;
    /** @deprecated use `WireWithdrawalFederalTaxWithholding$outboundSchema` instead. */
    WireWithdrawalFederalTaxWithholding$.outboundSchema = exports.WireWithdrawalFederalTaxWithholding$outboundSchema;
})(WireWithdrawalFederalTaxWithholding$ || (exports.WireWithdrawalFederalTaxWithholding$ = WireWithdrawalFederalTaxWithholding$ = {}));
/** @internal */
exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalIraDistributionStateTaxWithholdingAmount$;
(function (WireWithdrawalIraDistributionStateTaxWithholdingAmount$) {
    /** @deprecated use `WireWithdrawalIraDistributionStateTaxWithholdingAmount$inboundSchema` instead. */
    WireWithdrawalIraDistributionStateTaxWithholdingAmount$.inboundSchema = exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$inboundSchema;
    /** @deprecated use `WireWithdrawalIraDistributionStateTaxWithholdingAmount$outboundSchema` instead. */
    WireWithdrawalIraDistributionStateTaxWithholdingAmount$.outboundSchema = exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$outboundSchema;
})(WireWithdrawalIraDistributionStateTaxWithholdingAmount$ || (exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$ = WireWithdrawalIraDistributionStateTaxWithholdingAmount$ = {}));
/** @internal */
exports.WireWithdrawalIraDistributionPercentage$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.WireWithdrawalIraDistributionPercentage$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalIraDistributionPercentage$;
(function (WireWithdrawalIraDistributionPercentage$) {
    /** @deprecated use `WireWithdrawalIraDistributionPercentage$inboundSchema` instead. */
    WireWithdrawalIraDistributionPercentage$.inboundSchema = exports.WireWithdrawalIraDistributionPercentage$inboundSchema;
    /** @deprecated use `WireWithdrawalIraDistributionPercentage$outboundSchema` instead. */
    WireWithdrawalIraDistributionPercentage$.outboundSchema = exports.WireWithdrawalIraDistributionPercentage$outboundSchema;
})(WireWithdrawalIraDistributionPercentage$ || (exports.WireWithdrawalIraDistributionPercentage$ = WireWithdrawalIraDistributionPercentage$ = {}));
/** @internal */
exports.WireWithdrawalStateTaxWithholding$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$inboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistributionPercentage$inboundSchema)).optional(),
});
/** @internal */
exports.WireWithdrawalStateTaxWithholding$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistributionStateTaxWithholdingAmount$outboundSchema)).optional(),
    percentage: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistributionPercentage$outboundSchema)).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalStateTaxWithholding$;
(function (WireWithdrawalStateTaxWithholding$) {
    /** @deprecated use `WireWithdrawalStateTaxWithholding$inboundSchema` instead. */
    WireWithdrawalStateTaxWithholding$.inboundSchema = exports.WireWithdrawalStateTaxWithholding$inboundSchema;
    /** @deprecated use `WireWithdrawalStateTaxWithholding$outboundSchema` instead. */
    WireWithdrawalStateTaxWithholding$.outboundSchema = exports.WireWithdrawalStateTaxWithholding$outboundSchema;
})(WireWithdrawalStateTaxWithholding$ || (exports.WireWithdrawalStateTaxWithholding$ = WireWithdrawalStateTaxWithholding$ = {}));
/** @internal */
exports.WireWithdrawalType$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.WireWithdrawalType$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalType$;
(function (WireWithdrawalType$) {
    /** @deprecated use `WireWithdrawalType$inboundSchema` instead. */
    WireWithdrawalType$.inboundSchema = exports.WireWithdrawalType$inboundSchema;
    /** @deprecated use `WireWithdrawalType$outboundSchema` instead. */
    WireWithdrawalType$.outboundSchema = exports.WireWithdrawalType$outboundSchema;
})(WireWithdrawalType$ || (exports.WireWithdrawalType$ = WireWithdrawalType$ = {}));
/** @internal */
exports.WireWithdrawalIraDistribution$inboundSchema = z.object({
    federal_tax_withholding: z.nullable(z.lazy(() => exports.WireWithdrawalFederalTaxWithholding$inboundSchema)).optional(),
    receiving_institution: z.string().optional(),
    state_tax_withholding: z.nullable(z.lazy(() => exports.WireWithdrawalStateTaxWithholding$inboundSchema)).optional(),
    state_withholding_waiver: z.boolean().optional(),
    tax_year: z.number().int().optional(),
    type: exports.WireWithdrawalType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "federal_tax_withholding": "federalTaxWithholding",
        "receiving_institution": "receivingInstitution",
        "state_tax_withholding": "stateTaxWithholding",
        "state_withholding_waiver": "stateWithholdingWaiver",
        "tax_year": "taxYear",
    });
});
/** @internal */
exports.WireWithdrawalIraDistribution$outboundSchema = z.object({
    federalTaxWithholding: z.nullable(z.lazy(() => exports.WireWithdrawalFederalTaxWithholding$outboundSchema)).optional(),
    receivingInstitution: z.string().optional(),
    stateTaxWithholding: z.nullable(z.lazy(() => exports.WireWithdrawalStateTaxWithholding$outboundSchema)).optional(),
    stateWithholdingWaiver: z.boolean().optional(),
    taxYear: z.number().int().optional(),
    type: exports.WireWithdrawalType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        federalTaxWithholding: "federal_tax_withholding",
        receivingInstitution: "receiving_institution",
        stateTaxWithholding: "state_tax_withholding",
        stateWithholdingWaiver: "state_withholding_waiver",
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalIraDistribution$;
(function (WireWithdrawalIraDistribution$) {
    /** @deprecated use `WireWithdrawalIraDistribution$inboundSchema` instead. */
    WireWithdrawalIraDistribution$.inboundSchema = exports.WireWithdrawalIraDistribution$inboundSchema;
    /** @deprecated use `WireWithdrawalIraDistribution$outboundSchema` instead. */
    WireWithdrawalIraDistribution$.outboundSchema = exports.WireWithdrawalIraDistribution$outboundSchema;
})(WireWithdrawalIraDistribution$ || (exports.WireWithdrawalIraDistribution$ = WireWithdrawalIraDistribution$ = {}));
/** @internal */
exports.WireWithdrawalRecipientBankType$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalRecipientBankType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.WireWithdrawalRecipientBankType$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalRecipientBankType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalRecipientBankType$;
(function (WireWithdrawalRecipientBankType$) {
    /** @deprecated use `WireWithdrawalRecipientBankType$inboundSchema` instead. */
    WireWithdrawalRecipientBankType$.inboundSchema = exports.WireWithdrawalRecipientBankType$inboundSchema;
    /** @deprecated use `WireWithdrawalRecipientBankType$outboundSchema` instead. */
    WireWithdrawalRecipientBankType$.outboundSchema = exports.WireWithdrawalRecipientBankType$outboundSchema;
})(WireWithdrawalRecipientBankType$ || (exports.WireWithdrawalRecipientBankType$ = WireWithdrawalRecipientBankType$ = {}));
/** @internal */
exports.WireWithdrawalBankId$inboundSchema = z.object({
    id: z.string().optional(),
    type: exports.WireWithdrawalRecipientBankType$inboundSchema.optional(),
});
/** @internal */
exports.WireWithdrawalBankId$outboundSchema = z.object({
    id: z.string().optional(),
    type: exports.WireWithdrawalRecipientBankType$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalBankId$;
(function (WireWithdrawalBankId$) {
    /** @deprecated use `WireWithdrawalBankId$inboundSchema` instead. */
    WireWithdrawalBankId$.inboundSchema = exports.WireWithdrawalBankId$inboundSchema;
    /** @deprecated use `WireWithdrawalBankId$outboundSchema` instead. */
    WireWithdrawalBankId$.outboundSchema = exports.WireWithdrawalBankId$outboundSchema;
})(WireWithdrawalBankId$ || (exports.WireWithdrawalBankId$ = WireWithdrawalBankId$ = {}));
/** @internal */
exports.WireWithdrawalRecipientBankAddress$inboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postal_code: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "postal_code": "postalCode",
    });
});
/** @internal */
exports.WireWithdrawalRecipientBankAddress$outboundSchema = z.object({
    city: z.string().optional(),
    country: z.string().optional(),
    postalCode: z.string().optional(),
    state: z.string().optional(),
    streetAddress: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        postalCode: "postal_code",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalRecipientBankAddress$;
(function (WireWithdrawalRecipientBankAddress$) {
    /** @deprecated use `WireWithdrawalRecipientBankAddress$inboundSchema` instead. */
    WireWithdrawalRecipientBankAddress$.inboundSchema = exports.WireWithdrawalRecipientBankAddress$inboundSchema;
    /** @deprecated use `WireWithdrawalRecipientBankAddress$outboundSchema` instead. */
    WireWithdrawalRecipientBankAddress$.outboundSchema = exports.WireWithdrawalRecipientBankAddress$outboundSchema;
})(WireWithdrawalRecipientBankAddress$ || (exports.WireWithdrawalRecipientBankAddress$ = WireWithdrawalRecipientBankAddress$ = {}));
/** @internal */
exports.WireWithdrawalInternationalBankDetails$inboundSchema = z.object({
    additional_info: z.string().optional(),
    address: z.nullable(z.lazy(() => exports.WireWithdrawalRecipientBankAddress$inboundSchema)).optional(),
    bank_name: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "additional_info": "additionalInfo",
        "bank_name": "bankName",
    });
});
/** @internal */
exports.WireWithdrawalInternationalBankDetails$outboundSchema = z.object({
    additionalInfo: z.string().optional(),
    address: z.nullable(z.lazy(() => exports.WireWithdrawalRecipientBankAddress$outboundSchema)).optional(),
    bankName: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        additionalInfo: "additional_info",
        bankName: "bank_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalInternationalBankDetails$;
(function (WireWithdrawalInternationalBankDetails$) {
    /** @deprecated use `WireWithdrawalInternationalBankDetails$inboundSchema` instead. */
    WireWithdrawalInternationalBankDetails$.inboundSchema = exports.WireWithdrawalInternationalBankDetails$inboundSchema;
    /** @deprecated use `WireWithdrawalInternationalBankDetails$outboundSchema` instead. */
    WireWithdrawalInternationalBankDetails$.outboundSchema = exports.WireWithdrawalInternationalBankDetails$outboundSchema;
})(WireWithdrawalInternationalBankDetails$ || (exports.WireWithdrawalInternationalBankDetails$ = WireWithdrawalInternationalBankDetails$ = {}));
/** @internal */
exports.WireWithdrawalRecipientBank$inboundSchema = z.object({
    bank_id: z.nullable(z.lazy(() => exports.WireWithdrawalBankId$inboundSchema))
        .optional(),
    international_bank_details: z.nullable(z.lazy(() => exports.WireWithdrawalInternationalBankDetails$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "bank_id": "bankId",
        "international_bank_details": "internationalBankDetails",
    });
});
/** @internal */
exports.WireWithdrawalRecipientBank$outboundSchema = z.object({
    bankId: z.nullable(z.lazy(() => exports.WireWithdrawalBankId$outboundSchema))
        .optional(),
    internationalBankDetails: z.nullable(z.lazy(() => exports.WireWithdrawalInternationalBankDetails$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        bankId: "bank_id",
        internationalBankDetails: "international_bank_details",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalRecipientBank$;
(function (WireWithdrawalRecipientBank$) {
    /** @deprecated use `WireWithdrawalRecipientBank$inboundSchema` instead. */
    WireWithdrawalRecipientBank$.inboundSchema = exports.WireWithdrawalRecipientBank$inboundSchema;
    /** @deprecated use `WireWithdrawalRecipientBank$outboundSchema` instead. */
    WireWithdrawalRecipientBank$.outboundSchema = exports.WireWithdrawalRecipientBank$outboundSchema;
})(WireWithdrawalRecipientBank$ || (exports.WireWithdrawalRecipientBank$ = WireWithdrawalRecipientBank$ = {}));
/** @internal */
exports.WireWithdrawalStateState$inboundSchema = z
    .union([
    z.nativeEnum(WireWithdrawalStateState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.WireWithdrawalStateState$outboundSchema = z.union([
    z.nativeEnum(WireWithdrawalStateState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalStateState$;
(function (WireWithdrawalStateState$) {
    /** @deprecated use `WireWithdrawalStateState$inboundSchema` instead. */
    WireWithdrawalStateState$.inboundSchema = exports.WireWithdrawalStateState$inboundSchema;
    /** @deprecated use `WireWithdrawalStateState$outboundSchema` instead. */
    WireWithdrawalStateState$.outboundSchema = exports.WireWithdrawalStateState$outboundSchema;
})(WireWithdrawalStateState$ || (exports.WireWithdrawalStateState$ = WireWithdrawalStateState$ = {}));
/** @internal */
exports.WireWithdrawalState$inboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.WireWithdrawalStateState$inboundSchema.optional(),
    update_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "update_time": "updateTime",
    });
});
/** @internal */
exports.WireWithdrawalState$outboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.WireWithdrawalStateState$outboundSchema.optional(),
    updateTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updateTime: "update_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawalState$;
(function (WireWithdrawalState$) {
    /** @deprecated use `WireWithdrawalState$inboundSchema` instead. */
    WireWithdrawalState$.inboundSchema = exports.WireWithdrawalState$inboundSchema;
    /** @deprecated use `WireWithdrawalState$outboundSchema` instead. */
    WireWithdrawalState$.outboundSchema = exports.WireWithdrawalState$outboundSchema;
})(WireWithdrawalState$ || (exports.WireWithdrawalState$ = WireWithdrawalState$ = {}));
/** @internal */
exports.WireWithdrawal$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireWithdrawalAmount$inboundSchema))
        .optional(),
    beneficiary: z.nullable(z.lazy(() => exports.WireWithdrawalBeneficiary$inboundSchema))
        .optional(),
    client_transfer_id: z.string().optional(),
    fed_reference_number: z.string().optional(),
    intermediary: z.nullable(z.lazy(() => exports.WireWithdrawalIntermediary$inboundSchema)).optional(),
    ira_distribution: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistribution$inboundSchema)).optional(),
    name: z.string().optional(),
    recipient_bank: z.nullable(z.lazy(() => exports.WireWithdrawalRecipientBank$inboundSchema)).optional(),
    state: z.nullable(z.lazy(() => exports.WireWithdrawalState$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "client_transfer_id": "clientTransferId",
        "fed_reference_number": "fedReferenceNumber",
        "ira_distribution": "iraDistribution",
        "recipient_bank": "recipientBank",
    });
});
/** @internal */
exports.WireWithdrawal$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireWithdrawalAmount$outboundSchema))
        .optional(),
    beneficiary: z.nullable(z.lazy(() => exports.WireWithdrawalBeneficiary$outboundSchema)).optional(),
    clientTransferId: z.string().optional(),
    fedReferenceNumber: z.string().optional(),
    intermediary: z.nullable(z.lazy(() => exports.WireWithdrawalIntermediary$outboundSchema)).optional(),
    iraDistribution: z.nullable(z.lazy(() => exports.WireWithdrawalIraDistribution$outboundSchema)).optional(),
    name: z.string().optional(),
    recipientBank: z.nullable(z.lazy(() => exports.WireWithdrawalRecipientBank$outboundSchema)).optional(),
    state: z.nullable(z.lazy(() => exports.WireWithdrawalState$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        clientTransferId: "client_transfer_id",
        fedReferenceNumber: "fed_reference_number",
        iraDistribution: "ira_distribution",
        recipientBank: "recipient_bank",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireWithdrawal$;
(function (WireWithdrawal$) {
    /** @deprecated use `WireWithdrawal$inboundSchema` instead. */
    WireWithdrawal$.inboundSchema = exports.WireWithdrawal$inboundSchema;
    /** @deprecated use `WireWithdrawal$outboundSchema` instead. */
    WireWithdrawal$.outboundSchema = exports.WireWithdrawal$outboundSchema;
})(WireWithdrawal$ || (exports.WireWithdrawal$ = WireWithdrawal$ = {}));
//# sourceMappingURL=wirewithdrawal.js.map