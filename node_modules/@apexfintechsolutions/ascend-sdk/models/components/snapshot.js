"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Snapshot$ = exports.Snapshot$outboundSchema = exports.Snapshot$inboundSchema = exports.SnapshotProcessDate$ = exports.SnapshotProcessDate$outboundSchema = exports.SnapshotProcessDate$inboundSchema = exports.FileT$ = exports.FileT$outboundSchema = exports.FileT$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
/** @internal */
exports.FileT$inboundSchema = z
    .object({
    download_uri: z.string().optional(),
    uri_expiry_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "download_uri": "downloadUri",
        "uri_expiry_time": "uriExpiryTime",
    });
});
/** @internal */
exports.FileT$outboundSchema = z.object({
    downloadUri: z.string().optional(),
    uriExpiryTime: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        downloadUri: "download_uri",
        uriExpiryTime: "uri_expiry_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var FileT$;
(function (FileT$) {
    /** @deprecated use `FileT$inboundSchema` instead. */
    FileT$.inboundSchema = exports.FileT$inboundSchema;
    /** @deprecated use `FileT$outboundSchema` instead. */
    FileT$.outboundSchema = exports.FileT$outboundSchema;
})(FileT$ || (exports.FileT$ = FileT$ = {}));
/** @internal */
exports.SnapshotProcessDate$inboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/** @internal */
exports.SnapshotProcessDate$outboundSchema = z.object({
    day: z.number().int().optional(),
    month: z.number().int().optional(),
    year: z.number().int().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SnapshotProcessDate$;
(function (SnapshotProcessDate$) {
    /** @deprecated use `SnapshotProcessDate$inboundSchema` instead. */
    SnapshotProcessDate$.inboundSchema = exports.SnapshotProcessDate$inboundSchema;
    /** @deprecated use `SnapshotProcessDate$outboundSchema` instead. */
    SnapshotProcessDate$.outboundSchema = exports.SnapshotProcessDate$outboundSchema;
})(SnapshotProcessDate$ || (exports.SnapshotProcessDate$ = SnapshotProcessDate$ = {}));
/** @internal */
exports.Snapshot$inboundSchema = z.object({
    create_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    file: z.nullable(z.lazy(() => exports.FileT$inboundSchema)).optional(),
    name: z.string().optional(),
    process_date: z.nullable(z.lazy(() => exports.SnapshotProcessDate$inboundSchema))
        .optional(),
    snapshot_id: z.string().optional(),
    snapshot_type: z.string().optional(),
    version: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "create_time": "createTime",
        "process_date": "processDate",
        "snapshot_id": "snapshotId",
        "snapshot_type": "snapshotType",
    });
});
/** @internal */
exports.Snapshot$outboundSchema = z.object({
    createTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    file: z.nullable(z.lazy(() => exports.FileT$outboundSchema)).optional(),
    name: z.string().optional(),
    processDate: z.nullable(z.lazy(() => exports.SnapshotProcessDate$outboundSchema))
        .optional(),
    snapshotId: z.string().optional(),
    snapshotType: z.string().optional(),
    version: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createTime: "create_time",
        processDate: "process_date",
        snapshotId: "snapshot_id",
        snapshotType: "snapshot_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Snapshot$;
(function (Snapshot$) {
    /** @deprecated use `Snapshot$inboundSchema` instead. */
    Snapshot$.inboundSchema = exports.Snapshot$inboundSchema;
    /** @deprecated use `Snapshot$outboundSchema` instead. */
    Snapshot$.outboundSchema = exports.Snapshot$outboundSchema;
})(Snapshot$ || (exports.Snapshot$ = Snapshot$ = {}));
//# sourceMappingURL=snapshot.js.map