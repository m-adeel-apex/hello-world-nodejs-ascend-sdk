"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountRequestCreate$ = exports.AccountRequestCreate$outboundSchema = exports.AccountRequestCreate$inboundSchema = exports.CatAccountHolderType$ = exports.CatAccountHolderType$outboundSchema = exports.CatAccountHolderType$inboundSchema = exports.CatAccountHolderType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const accounttaxprofilecreate_js_1 = require("./accounttaxprofilecreate.js");
const identifiercreate_js_1 = require("./identifiercreate.js");
const interestedpartycreate_js_1 = require("./interestedpartycreate.js");
const investmentprofilecreate_js_1 = require("./investmentprofilecreate.js");
const partyrequestcreate_js_1 = require("./partyrequestcreate.js");
const trustedcontactcreate_js_1 = require("./trustedcontactcreate.js");
/**
 * The FINRA CAT classification for the Account Holder; Is set automatically based on attributes of the owners and account type
 */
var CatAccountHolderType;
(function (CatAccountHolderType) {
    CatAccountHolderType["CatAccountHolderTypeUnspecified"] = "CAT_ACCOUNT_HOLDER_TYPE_UNSPECIFIED";
    CatAccountHolderType["AInstitutionalCustomer"] = "A_INSTITUTIONAL_CUSTOMER";
    CatAccountHolderType["EEmployeeAccount"] = "E_EMPLOYEE_ACCOUNT";
    CatAccountHolderType["FForeign"] = "F_FOREIGN";
    CatAccountHolderType["IIndividual"] = "I_INDIVIDUAL";
    CatAccountHolderType["OMarketMaking"] = "O_MARKET_MAKING";
    CatAccountHolderType["VAgencyAveragePriceAccount"] = "V_AGENCY_AVERAGE_PRICE_ACCOUNT";
    CatAccountHolderType["POtherProprietary"] = "P_OTHER_PROPRIETARY";
    CatAccountHolderType["XErrorAccount"] = "X_ERROR_ACCOUNT";
})(CatAccountHolderType || (exports.CatAccountHolderType = CatAccountHolderType = {}));
/** @internal */
exports.CatAccountHolderType$inboundSchema = z
    .union([
    z.nativeEnum(CatAccountHolderType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.CatAccountHolderType$outboundSchema = z.union([
    z.nativeEnum(CatAccountHolderType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CatAccountHolderType$;
(function (CatAccountHolderType$) {
    /** @deprecated use `CatAccountHolderType$inboundSchema` instead. */
    CatAccountHolderType$.inboundSchema = exports.CatAccountHolderType$inboundSchema;
    /** @deprecated use `CatAccountHolderType$outboundSchema` instead. */
    CatAccountHolderType$.outboundSchema = exports.CatAccountHolderType$outboundSchema;
})(CatAccountHolderType$ || (exports.CatAccountHolderType$ = CatAccountHolderType$ = {}));
/** @internal */
exports.AccountRequestCreate$inboundSchema = z.object({
    accepts_issuer_direct_communication: z.boolean().optional(),
    account_group_id: z.string(),
    advised: z.boolean().optional(),
    cat_account_holder_type: exports.CatAccountHolderType$inboundSchema.optional(),
    correspondent_id: z.string(),
    identifiers: z.array(identifiercreate_js_1.IdentifierCreate$inboundSchema).optional(),
    interested_parties: z.array(interestedpartycreate_js_1.InterestedPartyCreate$inboundSchema).optional(),
    investment_profile: investmentprofilecreate_js_1.InvestmentProfileCreate$inboundSchema.optional(),
    managed: z.boolean().optional(),
    parties: z.array(partyrequestcreate_js_1.PartyRequestCreate$inboundSchema),
    primary_registered_rep_id: z.string().optional(),
    tax_profile: accounttaxprofilecreate_js_1.AccountTaxProfileCreate$inboundSchema.optional(),
    trusted_contacts: z.array(trustedcontactcreate_js_1.TrustedContactCreate$inboundSchema).optional(),
    wrap_fee_billed: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "accepts_issuer_direct_communication": "acceptsIssuerDirectCommunication",
        "account_group_id": "accountGroupId",
        "cat_account_holder_type": "catAccountHolderType",
        "correspondent_id": "correspondentId",
        "interested_parties": "interestedParties",
        "investment_profile": "investmentProfile",
        "primary_registered_rep_id": "primaryRegisteredRepId",
        "tax_profile": "taxProfile",
        "trusted_contacts": "trustedContacts",
        "wrap_fee_billed": "wrapFeeBilled",
    });
});
/** @internal */
exports.AccountRequestCreate$outboundSchema = z.object({
    acceptsIssuerDirectCommunication: z.boolean().optional(),
    accountGroupId: z.string(),
    advised: z.boolean().optional(),
    catAccountHolderType: exports.CatAccountHolderType$outboundSchema.optional(),
    correspondentId: z.string(),
    identifiers: z.array(identifiercreate_js_1.IdentifierCreate$outboundSchema).optional(),
    interestedParties: z.array(interestedpartycreate_js_1.InterestedPartyCreate$outboundSchema).optional(),
    investmentProfile: investmentprofilecreate_js_1.InvestmentProfileCreate$outboundSchema.optional(),
    managed: z.boolean().optional(),
    parties: z.array(partyrequestcreate_js_1.PartyRequestCreate$outboundSchema),
    primaryRegisteredRepId: z.string().optional(),
    taxProfile: accounttaxprofilecreate_js_1.AccountTaxProfileCreate$outboundSchema.optional(),
    trustedContacts: z.array(trustedcontactcreate_js_1.TrustedContactCreate$outboundSchema).optional(),
    wrapFeeBilled: z.boolean().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        acceptsIssuerDirectCommunication: "accepts_issuer_direct_communication",
        accountGroupId: "account_group_id",
        catAccountHolderType: "cat_account_holder_type",
        correspondentId: "correspondent_id",
        interestedParties: "interested_parties",
        investmentProfile: "investment_profile",
        primaryRegisteredRepId: "primary_registered_rep_id",
        taxProfile: "tax_profile",
        trustedContacts: "trusted_contacts",
        wrapFeeBilled: "wrap_fee_billed",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AccountRequestCreate$;
(function (AccountRequestCreate$) {
    /** @deprecated use `AccountRequestCreate$inboundSchema` instead. */
    AccountRequestCreate$.inboundSchema = exports.AccountRequestCreate$inboundSchema;
    /** @deprecated use `AccountRequestCreate$outboundSchema` instead. */
    AccountRequestCreate$.outboundSchema = exports.AccountRequestCreate$outboundSchema;
})(AccountRequestCreate$ || (exports.AccountRequestCreate$ = AccountRequestCreate$ = {}));
//# sourceMappingURL=accountrequestcreate.js.map