"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WireDeposit$ = exports.WireDeposit$outboundSchema = exports.WireDeposit$inboundSchema = exports.WireDepositState$ = exports.WireDepositState$outboundSchema = exports.WireDepositState$inboundSchema = exports.WireDepositStateState$ = exports.WireDepositStateState$outboundSchema = exports.WireDepositStateState$inboundSchema = exports.WireDepositRetirementContribution$ = exports.WireDepositRetirementContribution$outboundSchema = exports.WireDepositRetirementContribution$inboundSchema = exports.WireDepositType$ = exports.WireDepositType$outboundSchema = exports.WireDepositType$inboundSchema = exports.WireDepositAmount$ = exports.WireDepositAmount$outboundSchema = exports.WireDepositAmount$inboundSchema = exports.WireDepositStateState = exports.WireDepositType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * The type of retirement contribution.
 */
var WireDepositType;
(function (WireDepositType) {
    WireDepositType["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    WireDepositType["Regular"] = "REGULAR";
    WireDepositType["Employee"] = "EMPLOYEE";
    WireDepositType["Employer"] = "EMPLOYER";
    WireDepositType["Recharacterization"] = "RECHARACTERIZATION";
    WireDepositType["Rollover60Day"] = "ROLLOVER_60_DAY";
    WireDepositType["RolloverDirect"] = "ROLLOVER_DIRECT";
    WireDepositType["Transfer"] = "TRANSFER";
    WireDepositType["TrusteeFee"] = "TRUSTEE_FEE";
    WireDepositType["Conversion"] = "CONVERSION";
    WireDepositType["Repayment"] = "REPAYMENT";
    WireDepositType["ContributionNonReportable"] = "CONTRIBUTION_NON_REPORTABLE";
})(WireDepositType || (exports.WireDepositType = WireDepositType = {}));
/**
 * The high level state of a transfer, one of:
 *
 * @remarks
 * - `PROCESSING` - The transfer is being processed and will be posted if successful.
 * - `PENDING_REVIEW` - The transfer is pending review and will continue processing if approved.
 * - `POSTED` - The transfer has been posted to the ledger and will be completed at the end of the processing window if not canceled first.
 * - `COMPLETED` - The transfer has been batched and completed.
 * - `REJECTED` - The transfer was rejected.
 * - `CANCELED` - The transfer was canceled.
 * - `RETURNED` - The transfer was returned.
 * - `POSTPONED` - The transfer is postponed and will resume processing during the next processing window.
 */
var WireDepositStateState;
(function (WireDepositStateState) {
    WireDepositStateState["StateUnspecified"] = "STATE_UNSPECIFIED";
    WireDepositStateState["Processing"] = "PROCESSING";
    WireDepositStateState["PendingReview"] = "PENDING_REVIEW";
    WireDepositStateState["Posted"] = "POSTED";
    WireDepositStateState["Completed"] = "COMPLETED";
    WireDepositStateState["Rejected"] = "REJECTED";
    WireDepositStateState["Canceled"] = "CANCELED";
    WireDepositStateState["Returned"] = "RETURNED";
    WireDepositStateState["Postponed"] = "POSTPONED";
})(WireDepositStateState || (exports.WireDepositStateState = WireDepositStateState = {}));
/** @internal */
exports.WireDepositAmount$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.WireDepositAmount$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireDepositAmount$;
(function (WireDepositAmount$) {
    /** @deprecated use `WireDepositAmount$inboundSchema` instead. */
    WireDepositAmount$.inboundSchema = exports.WireDepositAmount$inboundSchema;
    /** @deprecated use `WireDepositAmount$outboundSchema` instead. */
    WireDepositAmount$.outboundSchema = exports.WireDepositAmount$outboundSchema;
})(WireDepositAmount$ || (exports.WireDepositAmount$ = WireDepositAmount$ = {}));
/** @internal */
exports.WireDepositType$inboundSchema = z
    .union([
    z.nativeEnum(WireDepositType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.WireDepositType$outboundSchema = z.union([
    z.nativeEnum(WireDepositType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireDepositType$;
(function (WireDepositType$) {
    /** @deprecated use `WireDepositType$inboundSchema` instead. */
    WireDepositType$.inboundSchema = exports.WireDepositType$inboundSchema;
    /** @deprecated use `WireDepositType$outboundSchema` instead. */
    WireDepositType$.outboundSchema = exports.WireDepositType$outboundSchema;
})(WireDepositType$ || (exports.WireDepositType$ = WireDepositType$ = {}));
/** @internal */
exports.WireDepositRetirementContribution$inboundSchema = z.object({
    tax_year: z.number().int().optional(),
    type: exports.WireDepositType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "tax_year": "taxYear",
    });
});
/** @internal */
exports.WireDepositRetirementContribution$outboundSchema = z.object({
    taxYear: z.number().int().optional(),
    type: exports.WireDepositType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        taxYear: "tax_year",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireDepositRetirementContribution$;
(function (WireDepositRetirementContribution$) {
    /** @deprecated use `WireDepositRetirementContribution$inboundSchema` instead. */
    WireDepositRetirementContribution$.inboundSchema = exports.WireDepositRetirementContribution$inboundSchema;
    /** @deprecated use `WireDepositRetirementContribution$outboundSchema` instead. */
    WireDepositRetirementContribution$.outboundSchema = exports.WireDepositRetirementContribution$outboundSchema;
})(WireDepositRetirementContribution$ || (exports.WireDepositRetirementContribution$ = WireDepositRetirementContribution$ = {}));
/** @internal */
exports.WireDepositStateState$inboundSchema = z
    .union([
    z.nativeEnum(WireDepositStateState),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.WireDepositStateState$outboundSchema = z.union([
    z.nativeEnum(WireDepositStateState),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireDepositStateState$;
(function (WireDepositStateState$) {
    /** @deprecated use `WireDepositStateState$inboundSchema` instead. */
    WireDepositStateState$.inboundSchema = exports.WireDepositStateState$inboundSchema;
    /** @deprecated use `WireDepositStateState$outboundSchema` instead. */
    WireDepositStateState$.outboundSchema = exports.WireDepositStateState$outboundSchema;
})(WireDepositStateState$ || (exports.WireDepositStateState$ = WireDepositStateState$ = {}));
/** @internal */
exports.WireDepositState$inboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.WireDepositStateState$inboundSchema.optional(),
    update_time: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "update_time": "updateTime",
    });
});
/** @internal */
exports.WireDepositState$outboundSchema = z.object({
    actor: z.string().optional(),
    message: z.string().optional(),
    metadata: z.nullable(z.record(z.any())).optional(),
    state: exports.WireDepositStateState$outboundSchema.optional(),
    updateTime: z.nullable(z.date().transform(v => v.toISOString())).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updateTime: "update_time",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireDepositState$;
(function (WireDepositState$) {
    /** @deprecated use `WireDepositState$inboundSchema` instead. */
    WireDepositState$.inboundSchema = exports.WireDepositState$inboundSchema;
    /** @deprecated use `WireDepositState$outboundSchema` instead. */
    WireDepositState$.outboundSchema = exports.WireDepositState$outboundSchema;
})(WireDepositState$ || (exports.WireDepositState$ = WireDepositState$ = {}));
/** @internal */
exports.WireDeposit$inboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireDepositAmount$inboundSchema)).optional(),
    bank_reference_id: z.string().optional(),
    fed_reference_number: z.string().optional(),
    name: z.string().optional(),
    retirement_contribution: z.nullable(z.lazy(() => exports.WireDepositRetirementContribution$inboundSchema)).optional(),
    returned_wire_withdrawal: z.boolean().optional(),
    state: z.nullable(z.lazy(() => exports.WireDepositState$inboundSchema)).optional(),
    wire_instructions: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "bank_reference_id": "bankReferenceId",
        "fed_reference_number": "fedReferenceNumber",
        "retirement_contribution": "retirementContribution",
        "returned_wire_withdrawal": "returnedWireWithdrawal",
        "wire_instructions": "wireInstructions",
    });
});
/** @internal */
exports.WireDeposit$outboundSchema = z.object({
    amount: z.nullable(z.lazy(() => exports.WireDepositAmount$outboundSchema)).optional(),
    bankReferenceId: z.string().optional(),
    fedReferenceNumber: z.string().optional(),
    name: z.string().optional(),
    retirementContribution: z.nullable(z.lazy(() => exports.WireDepositRetirementContribution$outboundSchema)).optional(),
    returnedWireWithdrawal: z.boolean().optional(),
    state: z.nullable(z.lazy(() => exports.WireDepositState$outboundSchema)).optional(),
    wireInstructions: z.array(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        bankReferenceId: "bank_reference_id",
        fedReferenceNumber: "fed_reference_number",
        retirementContribution: "retirement_contribution",
        returnedWireWithdrawal: "returned_wire_withdrawal",
        wireInstructions: "wire_instructions",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WireDeposit$;
(function (WireDeposit$) {
    /** @deprecated use `WireDeposit$inboundSchema` instead. */
    WireDeposit$.inboundSchema = exports.WireDeposit$inboundSchema;
    /** @deprecated use `WireDeposit$outboundSchema` instead. */
    WireDeposit$.outboundSchema = exports.WireDeposit$outboundSchema;
})(WireDeposit$ || (exports.WireDeposit$ = WireDeposit$ = {}));
//# sourceMappingURL=wiredeposit.js.map