"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDDocumentUploadRequestCreate$ = exports.IDDocumentUploadRequestCreate$outboundSchema = exports.IDDocumentUploadRequestCreate$inboundSchema = exports.IDDocumentUploadRequestCreateDocumentType$ = exports.IDDocumentUploadRequestCreateDocumentType$outboundSchema = exports.IDDocumentUploadRequestCreateDocumentType$inboundSchema = exports.IDDocumentUploadRequestCreateDocumentType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * Describes the contents of a document and how it is used; Required for all identity documents
 */
var IDDocumentUploadRequestCreateDocumentType;
(function (IDDocumentUploadRequestCreateDocumentType) {
    IDDocumentUploadRequestCreateDocumentType["IdDocumentTypeUnspecified"] = "ID_DOCUMENT_TYPE_UNSPECIFIED";
    IDDocumentUploadRequestCreateDocumentType["BirthCertificate"] = "BIRTH_CERTIFICATE";
    IDDocumentUploadRequestCreateDocumentType["CustomerIdentificationProcess"] = "CUSTOMER_IDENTIFICATION_PROCESS";
    IDDocumentUploadRequestCreateDocumentType["DeathCertificate"] = "DEATH_CERTIFICATE";
    IDDocumentUploadRequestCreateDocumentType["DrivingLicense"] = "DRIVING_LICENSE";
    IDDocumentUploadRequestCreateDocumentType["EmployerConsentForm407Letter"] = "EMPLOYER_CONSENT_FORM_407_LETTER";
    IDDocumentUploadRequestCreateDocumentType["MarriageCertificate"] = "MARRIAGE_CERTIFICATE";
    IDDocumentUploadRequestCreateDocumentType["Passport"] = "PASSPORT";
    IDDocumentUploadRequestCreateDocumentType["ProofOfTaxId"] = "PROOF_OF_TAX_ID";
    IDDocumentUploadRequestCreateDocumentType["SocialSecurityDocument"] = "SOCIAL_SECURITY_DOCUMENT";
    IDDocumentUploadRequestCreateDocumentType["ThirdPartyCipResults"] = "THIRD_PARTY_CIP_RESULTS";
    IDDocumentUploadRequestCreateDocumentType["StateIdCard"] = "STATE_ID_CARD";
    IDDocumentUploadRequestCreateDocumentType["NationalIdCard"] = "NATIONAL_ID_CARD";
    IDDocumentUploadRequestCreateDocumentType["PermanentResidentVisa"] = "PERMANENT_RESIDENT_VISA";
    IDDocumentUploadRequestCreateDocumentType["IrisItinLetter"] = "IRIS_ITIN_LETTER";
    IDDocumentUploadRequestCreateDocumentType["UtilityBill"] = "UTILITY_BILL";
    IDDocumentUploadRequestCreateDocumentType["MilitaryIdCard"] = "MILITARY_ID_CARD";
    IDDocumentUploadRequestCreateDocumentType["MortgageStatement"] = "MORTGAGE_STATEMENT";
    IDDocumentUploadRequestCreateDocumentType["LeaseAgreement"] = "LEASE_AGREEMENT";
    IDDocumentUploadRequestCreateDocumentType["ExecutorCertification"] = "EXECUTOR_CERTIFICATION";
    IDDocumentUploadRequestCreateDocumentType["TrusteeCertification"] = "TRUSTEE_CERTIFICATION";
    IDDocumentUploadRequestCreateDocumentType["Selfie"] = "SELFIE";
    IDDocumentUploadRequestCreateDocumentType["ArticlesOfOrganisation"] = "ARTICLES_OF_ORGANISATION";
    IDDocumentUploadRequestCreateDocumentType["CertOfSoleOfficer"] = "CERT_OF_SOLE_OFFICER";
    IDDocumentUploadRequestCreateDocumentType["CertificationCorrespondentAccounts"] = "CERTIFICATION_CORRESPONDENT_ACCOUNTS";
    IDDocumentUploadRequestCreateDocumentType["CertificationForeignBanks"] = "CERTIFICATION_FOREIGN_BANKS";
    IDDocumentUploadRequestCreateDocumentType["CharterArticlesOfIncorporation"] = "CHARTER_ARTICLES_OF_INCORPORATION";
    IDDocumentUploadRequestCreateDocumentType["DivorceDecree"] = "DIVORCE_DECREE";
    IDDocumentUploadRequestCreateDocumentType["ProofOfResidence"] = "PROOF_OF_RESIDENCE";
    IDDocumentUploadRequestCreateDocumentType["BoReportingExemptionProof"] = "BO_REPORTING_EXEMPTION_PROOF";
    IDDocumentUploadRequestCreateDocumentType["OperatingAgreement"] = "OPERATING_AGREEMENT";
    IDDocumentUploadRequestCreateDocumentType["RegisterOfMembers"] = "REGISTER_OF_MEMBERS";
    IDDocumentUploadRequestCreateDocumentType["BoardResolution"] = "BOARD_RESOLUTION";
    IDDocumentUploadRequestCreateDocumentType["TrustDeedsAgreement"] = "TRUST_DEEDS_AGREEMENT";
    IDDocumentUploadRequestCreateDocumentType["CorporateBylaws"] = "CORPORATE_BYLAWS";
    IDDocumentUploadRequestCreateDocumentType["ShareholderAgreement"] = "SHAREHOLDER_AGREEMENT";
    IDDocumentUploadRequestCreateDocumentType["CorporateRecords"] = "CORPORATE_RECORDS";
})(IDDocumentUploadRequestCreateDocumentType || (exports.IDDocumentUploadRequestCreateDocumentType = IDDocumentUploadRequestCreateDocumentType = {}));
/** @internal */
exports.IDDocumentUploadRequestCreateDocumentType$inboundSchema = z
    .union([
    z.nativeEnum(IDDocumentUploadRequestCreateDocumentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.IDDocumentUploadRequestCreateDocumentType$outboundSchema = z.union([
    z.nativeEnum(IDDocumentUploadRequestCreateDocumentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IDDocumentUploadRequestCreateDocumentType$;
(function (IDDocumentUploadRequestCreateDocumentType$) {
    /** @deprecated use `IDDocumentUploadRequestCreateDocumentType$inboundSchema` instead. */
    IDDocumentUploadRequestCreateDocumentType$.inboundSchema = exports.IDDocumentUploadRequestCreateDocumentType$inboundSchema;
    /** @deprecated use `IDDocumentUploadRequestCreateDocumentType$outboundSchema` instead. */
    IDDocumentUploadRequestCreateDocumentType$.outboundSchema = exports.IDDocumentUploadRequestCreateDocumentType$outboundSchema;
})(IDDocumentUploadRequestCreateDocumentType$ || (exports.IDDocumentUploadRequestCreateDocumentType$ = IDDocumentUploadRequestCreateDocumentType$ = {}));
/** @internal */
exports.IDDocumentUploadRequestCreate$inboundSchema = z.object({
    correspondent_id: z.string(),
    document_type: exports.IDDocumentUploadRequestCreateDocumentType$inboundSchema,
    legal_natural_person_id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "correspondent_id": "correspondentId",
        "document_type": "documentType",
        "legal_natural_person_id": "legalNaturalPersonId",
    });
});
/** @internal */
exports.IDDocumentUploadRequestCreate$outboundSchema = z.object({
    correspondentId: z.string(),
    documentType: exports.IDDocumentUploadRequestCreateDocumentType$outboundSchema,
    legalNaturalPersonId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        correspondentId: "correspondent_id",
        documentType: "document_type",
        legalNaturalPersonId: "legal_natural_person_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var IDDocumentUploadRequestCreate$;
(function (IDDocumentUploadRequestCreate$) {
    /** @deprecated use `IDDocumentUploadRequestCreate$inboundSchema` instead. */
    IDDocumentUploadRequestCreate$.inboundSchema = exports.IDDocumentUploadRequestCreate$inboundSchema;
    /** @deprecated use `IDDocumentUploadRequestCreate$outboundSchema` instead. */
    IDDocumentUploadRequestCreate$.outboundSchema = exports.IDDocumentUploadRequestCreate$outboundSchema;
})(IDDocumentUploadRequestCreate$ || (exports.IDDocumentUploadRequestCreate$ = IDDocumentUploadRequestCreate$ = {}));
//# sourceMappingURL=iddocumentuploadrequestcreate.js.map