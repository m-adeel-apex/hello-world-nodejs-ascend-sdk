"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvailableEnrollment$ = exports.AvailableEnrollment$outboundSchema = exports.AvailableEnrollment$inboundSchema = exports.EnrollmentType$ = exports.EnrollmentType$outboundSchema = exports.EnrollmentType$inboundSchema = exports.EnrollmentType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
const legalagreement_js_1 = require("./legalagreement.js");
/**
 * The enrollment type.
 */
var EnrollmentType;
(function (EnrollmentType) {
    EnrollmentType["EnrollmentTypeUnspecified"] = "ENROLLMENT_TYPE_UNSPECIFIED";
    EnrollmentType["RegistrationIndividual"] = "REGISTRATION_INDIVIDUAL";
    EnrollmentType["LendingFullyPaidStockLoan"] = "LENDING_FULLY_PAID_STOCK_LOAN";
    EnrollmentType["BeneficiaryDesignation"] = "BENEFICIARY_DESIGNATION";
    EnrollmentType["RegistrationJointWros"] = "REGISTRATION_JOINT_WROS";
    EnrollmentType["RegistrationJointTic"] = "REGISTRATION_JOINT_TIC";
    EnrollmentType["RegistrationJointTbe"] = "REGISTRATION_JOINT_TBE";
    EnrollmentType["RegistrationJointCp"] = "REGISTRATION_JOINT_CP";
    EnrollmentType["RegistrationEstate"] = "REGISTRATION_ESTATE";
    EnrollmentType["RegistrationIraTraditional"] = "REGISTRATION_IRA_TRADITIONAL";
    EnrollmentType["RegistrationIraSimple"] = "REGISTRATION_IRA_SIMPLE";
    EnrollmentType["RegistrationIraSep"] = "REGISTRATION_IRA_SEP";
    EnrollmentType["RegistrationIraRoth"] = "REGISTRATION_IRA_ROTH";
    EnrollmentType["RegistrationIraRollover"] = "REGISTRATION_IRA_ROLLOVER";
    EnrollmentType["RegistrationTrust"] = "REGISTRATION_TRUST";
    EnrollmentType["RegistrationCorporation"] = "REGISTRATION_CORPORATION";
    EnrollmentType["RegistrationLlc"] = "REGISTRATION_LLC";
    EnrollmentType["CashFdicCashSweep"] = "CASH_FDIC_CASH_SWEEP";
    EnrollmentType["RetirementBeneficiaryDesignation"] = "RETIREMENT_BENEFICIARY_DESIGNATION";
    EnrollmentType["DividendReinvestmentPlan"] = "DIVIDEND_REINVESTMENT_PLAN";
    EnrollmentType["RegistrationIraBeneficiaryTraditional"] = "REGISTRATION_IRA_BENEFICIARY_TRADITIONAL";
    EnrollmentType["RegistrationIraBeneficiaryRoth"] = "REGISTRATION_IRA_BENEFICIARY_ROTH";
    EnrollmentType["RegistrationIndividualForeign"] = "REGISTRATION_INDIVIDUAL_FOREIGN";
    EnrollmentType["RegistrationCustodial"] = "REGISTRATION_CUSTODIAL";
    EnrollmentType["VirtualAccountNumber"] = "VIRTUAL_ACCOUNT_NUMBER";
})(EnrollmentType || (exports.EnrollmentType = EnrollmentType = {}));
/** @internal */
exports.EnrollmentType$inboundSchema = z
    .union([
    z.nativeEnum(EnrollmentType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.EnrollmentType$outboundSchema = z.union([
    z.nativeEnum(EnrollmentType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var EnrollmentType$;
(function (EnrollmentType$) {
    /** @deprecated use `EnrollmentType$inboundSchema` instead. */
    EnrollmentType$.inboundSchema = exports.EnrollmentType$inboundSchema;
    /** @deprecated use `EnrollmentType$outboundSchema` instead. */
    EnrollmentType$.outboundSchema = exports.EnrollmentType$outboundSchema;
})(EnrollmentType$ || (exports.EnrollmentType$ = EnrollmentType$ = {}));
/** @internal */
exports.AvailableEnrollment$inboundSchema = z.object({
    agreements: z.array(legalagreement_js_1.LegalAgreement$inboundSchema).optional(),
    enrollment_type: exports.EnrollmentType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "enrollment_type": "enrollmentType",
    });
});
/** @internal */
exports.AvailableEnrollment$outboundSchema = z.object({
    agreements: z.array(legalagreement_js_1.LegalAgreement$outboundSchema).optional(),
    enrollmentType: exports.EnrollmentType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        enrollmentType: "enrollment_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var AvailableEnrollment$;
(function (AvailableEnrollment$) {
    /** @deprecated use `AvailableEnrollment$inboundSchema` instead. */
    AvailableEnrollment$.inboundSchema = exports.AvailableEnrollment$inboundSchema;
    /** @deprecated use `AvailableEnrollment$outboundSchema` instead. */
    AvailableEnrollment$.outboundSchema = exports.AvailableEnrollment$outboundSchema;
})(AvailableEnrollment$ || (exports.AvailableEnrollment$ = AvailableEnrollment$ = {}));
//# sourceMappingURL=availableenrollment.js.map