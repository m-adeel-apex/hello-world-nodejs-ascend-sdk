"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.YieldRecord$ = exports.YieldRecord$outboundSchema = exports.YieldRecord$inboundSchema = exports.YieldRecordYieldType$ = exports.YieldRecordYieldType$outboundSchema = exports.YieldRecordYieldType$inboundSchema = exports.YieldPercent$ = exports.YieldPercent$outboundSchema = exports.YieldPercent$inboundSchema = exports.YieldRecordYieldType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const enums_js_1 = require("../../types/enums.js");
/**
 * Characterization of a yield percentage
 */
var YieldRecordYieldType;
(function (YieldRecordYieldType) {
    YieldRecordYieldType["YieldTypeUnspecified"] = "YIELD_TYPE_UNSPECIFIED";
    YieldRecordYieldType["YieldToCall"] = "YIELD_TO_CALL";
    YieldRecordYieldType["YieldToMaturity"] = "YIELD_TO_MATURITY";
    YieldRecordYieldType["YieldToPut"] = "YIELD_TO_PUT";
    YieldRecordYieldType["YieldToWorst"] = "YIELD_TO_WORST";
})(YieldRecordYieldType || (exports.YieldRecordYieldType = YieldRecordYieldType = {}));
/** @internal */
exports.YieldPercent$inboundSchema = z.object({
    value: z.string().optional(),
});
/** @internal */
exports.YieldPercent$outboundSchema = z.object({
    value: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var YieldPercent$;
(function (YieldPercent$) {
    /** @deprecated use `YieldPercent$inboundSchema` instead. */
    YieldPercent$.inboundSchema = exports.YieldPercent$inboundSchema;
    /** @deprecated use `YieldPercent$outboundSchema` instead. */
    YieldPercent$.outboundSchema = exports.YieldPercent$outboundSchema;
})(YieldPercent$ || (exports.YieldPercent$ = YieldPercent$ = {}));
/** @internal */
exports.YieldRecordYieldType$inboundSchema = z
    .union([
    z.nativeEnum(YieldRecordYieldType),
    z.string().transform(enums_js_1.catchUnrecognizedEnum),
]);
/** @internal */
exports.YieldRecordYieldType$outboundSchema = z.union([
    z.nativeEnum(YieldRecordYieldType),
    z.string().and(z.custom()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var YieldRecordYieldType$;
(function (YieldRecordYieldType$) {
    /** @deprecated use `YieldRecordYieldType$inboundSchema` instead. */
    YieldRecordYieldType$.inboundSchema = exports.YieldRecordYieldType$inboundSchema;
    /** @deprecated use `YieldRecordYieldType$outboundSchema` instead. */
    YieldRecordYieldType$.outboundSchema = exports.YieldRecordYieldType$outboundSchema;
})(YieldRecordYieldType$ || (exports.YieldRecordYieldType$ = YieldRecordYieldType$ = {}));
/** @internal */
exports.YieldRecord$inboundSchema = z.object({
    yield_percent: z.nullable(z.lazy(() => exports.YieldPercent$inboundSchema))
        .optional(),
    yield_type: exports.YieldRecordYieldType$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "yield_percent": "yieldPercent",
        "yield_type": "yieldType",
    });
});
/** @internal */
exports.YieldRecord$outboundSchema = z.object({
    yieldPercent: z.nullable(z.lazy(() => exports.YieldPercent$outboundSchema))
        .optional(),
    yieldType: exports.YieldRecordYieldType$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        yieldPercent: "yield_percent",
        yieldType: "yield_type",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var YieldRecord$;
(function (YieldRecord$) {
    /** @deprecated use `YieldRecord$inboundSchema` instead. */
    YieldRecord$.inboundSchema = exports.YieldRecord$inboundSchema;
    /** @deprecated use `YieldRecord$outboundSchema` instead. */
    YieldRecord$.outboundSchema = exports.YieldRecord$outboundSchema;
})(YieldRecord$ || (exports.YieldRecord$ = YieldRecord$ = {}));
//# sourceMappingURL=yieldrecord.js.map