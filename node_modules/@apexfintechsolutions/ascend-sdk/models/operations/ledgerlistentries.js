"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LedgerListEntriesResponse$ = exports.LedgerListEntriesResponse$outboundSchema = exports.LedgerListEntriesResponse$inboundSchema = exports.LedgerListEntriesRequest$ = exports.LedgerListEntriesRequest$outboundSchema = exports.LedgerListEntriesRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.LedgerListEntriesRequest$inboundSchema = z.object({
    account_id: z.string(),
    page_size: z.number().int().optional(),
    page_token: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "account_id": "accountId",
        "page_size": "pageSize",
        "page_token": "pageToken",
    });
});
/** @internal */
exports.LedgerListEntriesRequest$outboundSchema = z.object({
    accountId: z.string(),
    pageSize: z.number().int().optional(),
    pageToken: z.string().optional(),
    filter: z.string().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        accountId: "account_id",
        pageSize: "page_size",
        pageToken: "page_token",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LedgerListEntriesRequest$;
(function (LedgerListEntriesRequest$) {
    /** @deprecated use `LedgerListEntriesRequest$inboundSchema` instead. */
    LedgerListEntriesRequest$.inboundSchema = exports.LedgerListEntriesRequest$inboundSchema;
    /** @deprecated use `LedgerListEntriesRequest$outboundSchema` instead. */
    LedgerListEntriesRequest$.outboundSchema = exports.LedgerListEntriesRequest$outboundSchema;
})(LedgerListEntriesRequest$ || (exports.LedgerListEntriesRequest$ = LedgerListEntriesRequest$ = {}));
/** @internal */
exports.LedgerListEntriesResponse$inboundSchema = z.object({
    HttpMeta: components.HTTPMetadata$inboundSchema,
    ListEntriesResponse: components.ListEntriesResponse$inboundSchema.optional(),
    Status: components.Status$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "HttpMeta": "httpMeta",
        "ListEntriesResponse": "listEntriesResponse",
        "Status": "status",
    });
});
/** @internal */
exports.LedgerListEntriesResponse$outboundSchema = z.object({
    httpMeta: components.HTTPMetadata$outboundSchema,
    listEntriesResponse: components.ListEntriesResponse$outboundSchema.optional(),
    status: components.Status$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        httpMeta: "HttpMeta",
        listEntriesResponse: "ListEntriesResponse",
        status: "Status",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var LedgerListEntriesResponse$;
(function (LedgerListEntriesResponse$) {
    /** @deprecated use `LedgerListEntriesResponse$inboundSchema` instead. */
    LedgerListEntriesResponse$.inboundSchema = exports.LedgerListEntriesResponse$inboundSchema;
    /** @deprecated use `LedgerListEntriesResponse$outboundSchema` instead. */
    LedgerListEntriesResponse$.outboundSchema = exports.LedgerListEntriesResponse$outboundSchema;
})(LedgerListEntriesResponse$ || (exports.LedgerListEntriesResponse$ = LedgerListEntriesResponse$ = {}));
//# sourceMappingURL=ledgerlistentries.js.map